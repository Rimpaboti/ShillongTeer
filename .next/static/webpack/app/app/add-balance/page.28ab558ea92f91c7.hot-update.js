"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/app/add-balance/page",{

/***/ "(app-pages-browser)/./src/app/app/add-balance/page.js":
/*!*****************************************!*\
  !*** ./src/app/app/add-balance/page.js ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ PlayBoard)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var firebase_auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! firebase/auth */ \"(app-pages-browser)/./node_modules/firebase/auth/dist/esm/index.esm.js\");\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! firebase/firestore */ \"(app-pages-browser)/./node_modules/firebase/firestore/dist/esm/index.esm.js\");\n/* harmony import */ var _firebase__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/firebase */ \"(app-pages-browser)/./src/firebase.js\");\n/* harmony import */ var _app_Components_Layout__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/app/Components/Layout */ \"(app-pages-browser)/./src/app/Components/Layout/index.js\");\n// 'use client';\n// import React, { useState, useEffect } from 'react';\n// import { getAuth, onAuthStateChanged } from 'firebase/auth';\n// import {\n//   getFirestore,\n//   collection,\n//   addDoc,\n//   serverTimestamp,\n//   doc,\n//   getDoc,\n//   updateDoc,\n// } from 'firebase/firestore';\n// import firebaseApp from '@/firebase';\n// import Layout from '@/app/Components/Layout';\n// export default function PlayBoard() {\n//   const auth = getAuth(firebaseApp);\n//   const db = getFirestore(firebaseApp);\n//   const [walletBalance, setWalletBalance] = useState(null);\n//   const [betAmount, setBetAmount] = useState('');\n//   const [range, setRange] = useState('0-9');\n//   const [selectedNumber, setSelectedNumber] = useState(null);\n//   const [user, setUser] = useState(null);\n//   const [submitting, setSubmitting] = useState(false);\n//   const [activeGameSlot, setActiveGameSlot] = useState(null);\n//   const [role, setRole] = useState(null); // 'user' or 'subadmin'\n//   // Deposit\n//   const [depositAmount, setDepositAmount] = useState('');\n//   const [transactionId, setTransactionId] = useState('');\n//   const [depositSubmitting, setDepositSubmitting] = useState(false);\n//   // Withdraw\n//   const [withdrawAmount, setWithdrawAmount] = useState('');\n//   const [withdrawSubmitting, setWithdrawSubmitting] = useState(false);\n//   const [withdrawError, setWithdrawError] = useState('');\n//   const numberOptions =\n//     range === '0-9'\n//       ? Array.from({ length: 10 }, (_, i) => i)\n//       : Array.from({ length: 100 }, (_, i) => i.toString().padStart(2, '0'));\n//   const gameTimes = [\n//     { label: '1:00 PM', resultHour: 13 },\n//     { label: '6:00 PM', resultHour: 18 },\n//     { label: '8:00 PM', resultHour: 20 },\n//   ];\n//   useEffect(() => {\n//     const unsubscribe = onAuthStateChanged(auth, async (currentUser) => {\n//       setUser(currentUser);\n//       if (currentUser) {\n//         const walletRef = doc(db, 'subwallets', currentUser.uid);\n//         const walletSnap = await getDoc(walletRef);\n//         if (walletSnap.exists()) {\n//           setWalletBalance(walletSnap.data().balance ?? 0);\n//         }\n//         // Fetch role\n//         const userRef = doc(db, 'users', currentUser.uid);\n//         const userSnap = await getDoc(userRef);\n//         if (userSnap.exists()) {\n//           setRole(userSnap.data().role ?? 'user');\n//         } else {\n//           setRole('user');\n//         }\n//       }\n//     });\n//     const now = new Date();\n//     let foundSlot = null;\n//     for (let game of gameTimes) {\n//       const resultTime = new Date();\n//       resultTime.setHours(game.resultHour, 0, 0, 0);\n//       const closeTime = new Date(resultTime.getTime() - 15 * 60 * 1000);\n//       if (now < closeTime) {\n//         foundSlot = {\n//           label: game.label,\n//           closesAt: closeTime,\n//         };\n//         break;\n//       }\n//     }\n//     if (!foundSlot) {\n//       const nextSlot = gameTimes[0];\n//       const resultTime = new Date();\n//       resultTime.setDate(now.getDate() + 1);\n//       resultTime.setHours(nextSlot.resultHour, 0, 0, 0);\n//       const closeTime = new Date(resultTime.getTime() - 15 * 60 * 1000);\n//       foundSlot = {\n//         label: nextSlot.label + ' (Tomorrow)',\n//         closesAt: closeTime,\n//       };\n//     }\n//     setActiveGameSlot(foundSlot);\n//     return () => unsubscribe();\n//   }, []);\n//   const handleDepositSubmit = async () => {\n//     if (!user) return alert('Login required.');\n//     const amount = parseFloat(depositAmount);\n//     if (isNaN(amount) || amount <= 0 || !transactionId.trim()) {\n//       return alert('Invalid deposit details.');\n//     }\n//     setDepositSubmitting(true);\n//     try {\n//       await addDoc(collection(db, 'depositRequests'), {\n//         uid: user.uid,\n//         email: user.email,\n//         amount,\n//         transactionId: transactionId.trim(),\n//         createdAt: serverTimestamp(),\n//         status: 'pending',\n//       });\n//       alert('Deposit request submitted.');\n//       setDepositAmount('');\n//       setTransactionId('');\n//     } catch (err) {\n//       alert('Deposit failed.');\n//     } finally {\n//       setDepositSubmitting(false);\n//     }\n//   };\n//   const handleWithdrawSubmit = async () => {\n//     if (!user) return alert('Login required.');\n//     const amount = parseFloat(withdrawAmount);\n//     if (isNaN(amount) || amount < 200) {\n//       setWithdrawError('Minimum withdraw amount is ₹200.');\n//       return;\n//     }\n//     if ((walletBalance ?? 0) < amount) {\n//       setWithdrawError('Insufficient wallet balance.');\n//       return;\n//     }\n//     setWithdrawError('');\n//     setWithdrawSubmitting(true);\n//     try {\n//       await addDoc(collection(db, 'withdrawRequests'), {\n//         uid: user.uid,\n//         email: user.email,\n//         amount,\n//         createdAt: serverTimestamp(),\n//         status: 'pending',\n//       });\n//       alert('Withdraw request submitted.');\n//       setWithdrawAmount('');\n//     } catch (err) {\n//       alert('Withdraw failed.');\n//     } finally {\n//       setWithdrawSubmitting(false);\n//     }\n//   };\n//   return (\n//     <Layout>\n//       <div className=\"min-h-screen bg-gray-900 text-white p-8\">\n//         <div className=\"max-w-xl mx-auto bg-gray-800 rounded-lg shadow-2xl p-6\">\n//           <div className=\"mb-6\">\n//             <h1 className=\"text-2xl font-bold mb-2\">Wallet</h1>\n//             <p className=\"text-lg\">\n//               Current Balance:{' '}\n//               <span className=\"font-bold text-yellow-400\">\n//                 ₹{walletBalance?.toFixed(2) ?? '...'}\n//               </span>\n//             </p>\n//           </div>\n//           {/* ✅ Show Deposit Form only for Subadmin */}\n//           {role === 'subadmin' && (\n//             <div className=\"mb-6\">\n//               <h2 className=\"text-xl font-bold mb-2\">Add Money</h2>\n//               <p className=\"mb-1\">Pay using UPI ID:</p>\n//               <p className=\"font-mono text-yellow-400 mb-2\">9435153153@ybl</p>\n//               <p className=\"mb-1\">Or Google Pay / PhonePe:</p>\n//               <p className=\"font-mono text-yellow-400 mb-4\">+91 9435153153</p>\n//               <label className=\"block mb-2\">Transaction ID:</label>\n//               <input\n//                 type=\"text\"\n//                 value={transactionId}\n//                 onChange={(e) => setTransactionId(e.target.value)}\n//                 className=\"w-full px-4 py-2 mb-4 bg-gray-700 border border-gray-600 rounded\"\n//               />\n//               <label className=\"block mb-2\">Amount Paid (₹):</label>\n//               <input\n//                 type=\"number\"\n//                 min=\"1\"\n//                 value={depositAmount}\n//                 onChange={(e) => setDepositAmount(e.target.value)}\n//                 className=\"w-full px-4 py-2 mb-4 bg-gray-700 border border-gray-600 rounded\"\n//               />\n//               <button\n//                 onClick={handleDepositSubmit}\n//                 disabled={depositSubmitting}\n//                 className={`w-full py-3 rounded-md text-black font-semibold transition ${depositSubmitting\n//                     ? 'bg-yellow-100 cursor-not-allowed'\n//                     : 'bg-yellow-500 hover:bg-yellow-600'\n//                   }`}\n//               >\n//                 {depositSubmitting ? 'Submitting...' : 'Submit Deposit Request'}\n//               </button>\n//             </div>\n//           )}\n//           {/* ✅ Show Withdraw Form only for User */}\n//           {role === 'user' && (\n//             <div className=\"mb-6\">\n//               <h2 className=\"text-xl font-bold mb-2\">Withdraw Money</h2>\n//               <label className=\"block mb-2\">\n//                 Withdraw Amount (₹): Minimum withdraw is ₹200\n//               </label>\n//               <input\n//                 type=\"number\"\n//                 min=\"1\"\n//                 value={withdrawAmount}\n//                 onChange={(e) => {\n//                   setWithdrawAmount(e.target.value);\n//                   setWithdrawError('');\n//                 }}\n//                 className=\"w-full px-4 py-2 mb-2 bg-gray-700 border border-gray-600 rounded\"\n//               />\n//               {withdrawError && (\n//                 <p className=\"text-red-500 mb-3 text-sm\">{withdrawError}</p>\n//               )}\n//               <button\n//                 onClick={handleWithdrawSubmit}\n//                 disabled={withdrawSubmitting}\n//                 className={`w-full py-3 rounded-md text-black font-semibold transition ${withdrawSubmitting\n//                     ? 'bg-yellow-100 cursor-not-allowed'\n//                     : 'bg-yellow-500 hover:bg-yellow-600'\n//                   }`}\n//               >\n//                 {withdrawSubmitting ? 'Submitting...' : 'Submit Withdraw Request'}\n//               </button>\n//             </div>\n//           )}\n//         </div>\n//       </div>\n//     </Layout>\n//   );\n// }\n// 'use client';\n// import React, { useState, useEffect } from 'react';\n// import { getAuth, onAuthStateChanged } from 'firebase/auth';\n// import {\n//   getFirestore,\n//   collection,\n//   addDoc,\n//   serverTimestamp,\n//   doc,\n//   getDoc,\n//   updateDoc,\n// } from 'firebase/firestore';\n// import firebaseApp from '@/firebase';\n// import Layout from '@/app/Components/Layout';\n// export default function PlayBoard() {\n//   const auth = getAuth(firebaseApp);\n//   const db = getFirestore(firebaseApp);\n//   const [walletBalance, setWalletBalance] = useState(null);\n//   const [betAmount, setBetAmount] = useState('');\n//   const [range, setRange] = useState('0-9');\n//   const [selectedNumber, setSelectedNumber] = useState(null);\n//   const [user, setUser] = useState(null);\n//   const [role, setRole] = useState('user');\n//   const [submitting, setSubmitting] = useState(false);\n//   const [activeGameSlot, setActiveGameSlot] = useState(null);\n//   const [depositAmount, setDepositAmount] = useState('');\n//   const [transactionId, setTransactionId] = useState('');\n//   const [depositSubmitting, setDepositSubmitting] = useState(false);\n//   const [withdrawAmount, setWithdrawAmount] = useState('');\n//   const [withdrawSubmitting, setWithdrawSubmitting] = useState(false);\n//   const [withdrawError, setWithdrawError] = useState('');\n//   const numberOptions =\n//     range === '0-9'\n//       ? Array.from({ length: 10 }, (_, i) => i)\n//       : Array.from({ length: 100 }, (_, i) => i.toString().padStart(2, '0'));\n//   const gameTimes = [\n//     { label: '1:00 PM', resultHour: 13 },\n//     { label: '6:00 PM', resultHour: 18 },\n//     { label: '8:00 PM', resultHour: 20 },\n//   ];\n//   useEffect(() => {\n//     const unsubscribe = onAuthStateChanged(auth, async (currentUser) => {\n//       setUser(currentUser);\n//       if (currentUser) {\n//         // Get role from 'users' collection\n//         const userRef = doc(db, 'users', currentUser.uid);\n//         const userSnap = await getDoc(userRef);\n//         let detectedRole = 'user';\n//         if (userSnap.exists()) {\n//           const data = userSnap.data();\n//           detectedRole = data.role || 'user';\n//           setRole(detectedRole);\n//         }\n//         // Fetch balance from subwallets\n//         const walletRef = doc(db, 'subwallets', currentUser.uid);\n//         const walletSnap = await getDoc(walletRef);\n//         if (walletSnap.exists()) {\n//           const bal = walletSnap.data().balance ?? 0;\n//           setWalletBalance(bal);\n//         } else {\n//           await updateDoc(walletRef, {\n//             email: currentUser.email,\n//             uid: currentUser.uid,\n//             balance: 0,\n//             createdAt: serverTimestamp(),\n//           }).catch(() => {});\n//           setWalletBalance(0);\n//         }\n//       }\n//     });\n//     const now = new Date();\n//     let foundSlot = null;\n//     for (let game of gameTimes) {\n//       const resultTime = new Date();\n//       resultTime.setHours(game.resultHour, 0, 0, 0);\n//       const closeTime = new Date(resultTime.getTime() - 15 * 60 * 1000);\n//       if (now < closeTime) {\n//         foundSlot = {\n//           label: game.label,\n//           closesAt: closeTime,\n//         };\n//         break;\n//       }\n//     }\n//     if (!foundSlot) {\n//       const nextSlot = gameTimes[0];\n//       const resultTime = new Date();\n//       resultTime.setDate(now.getDate() + 1);\n//       resultTime.setHours(nextSlot.resultHour, 0, 0, 0);\n//       const closeTime = new Date(resultTime.getTime() - 15 * 60 * 1000);\n//       foundSlot = {\n//         label: nextSlot.label + ' (Tomorrow)',\n//         closesAt: closeTime,\n//       };\n//     }\n//     setActiveGameSlot(foundSlot);\n//     return () => unsubscribe();\n//   }, [auth, db]);\n//   const handleWithdrawSubmit = async () => {\n//     if (!user) {\n//       alert('You must be logged in to submit a withdrawal request.');\n//       return;\n//     }\n//     const amount = parseFloat(withdrawAmount);\n//     if (isNaN(amount) || amount <= 0) {\n//       setWithdrawError('Enter a valid withdraw amount.');\n//       return;\n//     }\n//     if (amount < 200) {\n//       setWithdrawError('Minimum withdraw amount is ₹200.');\n//       return;\n//     }\n//     if ((walletBalance ?? 0) < amount) {\n//       setWithdrawError('Insufficient wallet balance for withdraw.');\n//       return;\n//     }\n//     setWithdrawError('');\n//     setWithdrawSubmitting(true);\n//     try {\n//       await addDoc(collection(db, 'withdrawRequests'), {\n//         uid: user.uid,\n//         email: user.email,\n//         amount: amount,\n//         createdAt: serverTimestamp(),\n//         status: 'pending',\n//       });\n//       alert('Withdraw request submitted! Admin will process it shortly.');\n//       setWithdrawAmount('');\n//     } catch (error) {\n//       console.error('Error submitting withdraw request:', error);\n//       alert('Failed to submit withdraw request.');\n//     } finally {\n//       setWithdrawSubmitting(false);\n//     }\n//   };\n//   const handleDepositSubmit = async () => {\n//     if (!user) {\n//       alert('You must be logged in to submit a deposit request.');\n//       return;\n//     }\n//     const amount = parseFloat(depositAmount);\n//     if (isNaN(amount) || amount <= 0) {\n//       alert('Enter valid deposit amount.');\n//       return;\n//     }\n//     if (!transactionId.trim()) {\n//       alert('Enter valid transaction ID.');\n//       return;\n//     }\n//     setDepositSubmitting(true);\n//     try {\n//       await addDoc(collection(db, 'depositRequests'), {\n//         uid: user.uid,\n//         email: user.email,\n//         amount: amount,\n//         transactionId: transactionId.trim(),\n//         createdAt: serverTimestamp(),\n//         status: 'pending',\n//       });\n//       alert('Deposit request submitted! Admin will verify shortly.');\n//       setDepositAmount('');\n//       setTransactionId('');\n//     } catch (error) {\n//       console.error('Error submitting deposit request:', error);\n//       alert('Failed to submit deposit request.');\n//     } finally {\n//       setDepositSubmitting(false);\n//     }\n//   };\n//   return (\n//     <Layout>\n//       <div className=\"min-h-screen bg-gray-900 text-white p-8\">\n//         <div className=\"max-w-xl mx-auto bg-gray-800 rounded-lg shadow-2xl p-6\">\n//           {/* Wallet Balance */}\n//           <div className=\"mb-6\">\n//             <h1 className=\"text-2xl font-bold mb-2\">Wallet</h1>\n//             <p className=\"text-lg\">\n//               Current Balance:{' '}\n//               <span className=\"font-bold text-yellow-400\">\n//                 ₹{walletBalance?.toFixed(2) ?? '...'}\n//               </span>\n//             </p>\n//           </div>\n//           {/* Deposit Form (only for subadmin) */}\n//           {role === 'subadmin' && (\n//             <div className=\"mb-6\">\n//               <h2 className=\"text-xl font-bold mb-2\">Add Money</h2>\n//               <p className=\"mb-1\">Pay using UPI ID:</p>\n//               <p className=\"font-mono text-yellow-400 mb-2\">9435153153@ybl</p>\n//               <p className=\"mb-1\">Or Google Pay / PhonePe:</p>\n//               <p className=\"font-mono text-yellow-400 mb-4\">+91 9435153153</p>\n//               <label className=\"block mb-2\">Transaction ID:</label>\n//               <input\n//                 type=\"text\"\n//                 value={transactionId}\n//                 onChange={(e) => setTransactionId(e.target.value)}\n//                 className=\"w-full px-4 py-2 mb-4 bg-gray-700 border border-gray-600 rounded\"\n//               />\n//               <label className=\"block mb-2\">Amount Paid (₹):</label>\n//               <input\n//                 type=\"number\"\n//                 min=\"1\"\n//                 value={depositAmount}\n//                 onChange={(e) => setDepositAmount(e.target.value)}\n//                 className=\"w-full px-4 py-2 mb-4 bg-gray-700 border border-gray-600 rounded\"\n//               />\n//               <button\n//                 onClick={handleDepositSubmit}\n//                 disabled={depositSubmitting}\n//                 className={`w-full py-3 rounded-md text-black font-semibold transition ${depositSubmitting\n//                   ? 'bg-yellow-100 cursor-not-allowed'\n//                   : 'bg-yellow-500 hover:bg-yellow-600'\n//                   }`}\n//               >\n//                 {depositSubmitting ? 'Submitting...' : 'Submit Deposit Request'}\n//               </button>\n//             </div>\n//           )}\n//           {/* Withdraw Form (all roles) */}\n//           <div className=\"mb-6\">\n//             <h2 className=\"text-xl font-bold mb-2\">Withdraw Money</h2>\n//             <label className=\"block mb-2\">Withdraw Amount (₹): Minimum ₹200</label>\n//             <input\n//               type=\"number\"\n//               min=\"1\"\n//               value={withdrawAmount}\n//               onChange={(e) => {\n//                 setWithdrawAmount(e.target.value);\n//                 if (withdrawError) setWithdrawError('');\n//               }}\n//               className=\"w-full px-4 py-2 mb-2 bg-gray-700 border border-gray-600 rounded\"\n//             />\n//             {withdrawError && <p className=\"text-red-500 text-sm mb-2\">{withdrawError}</p>}\n//             <button\n//               onClick={handleWithdrawSubmit}\n//               disabled={withdrawSubmitting}\n//               className={`w-full py-3 rounded-md text-black font-semibold transition ${withdrawSubmitting\n//                 ? 'bg-yellow-100 cursor-not-allowed'\n//                 : 'bg-yellow-500 hover:bg-yellow-600'\n//                 }`}\n//             >\n//               {withdrawSubmitting ? 'Submitting...' : 'Submit Withdraw Request'}\n//             </button>\n//           </div>\n//         </div>\n//       </div>\n//     </Layout>\n//   );\n// }\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\nfunction PlayBoard() {\n    _s();\n    const auth = (0,firebase_auth__WEBPACK_IMPORTED_MODULE_2__.getAuth)(_firebase__WEBPACK_IMPORTED_MODULE_4__[\"default\"]);\n    const db = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.getFirestore)(_firebase__WEBPACK_IMPORTED_MODULE_4__[\"default\"]);\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [walletBalance, setWalletBalance] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [role, setRole] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('user');\n    const [withdrawAmount, setWithdrawAmount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    const [withdrawSubmitting, setWithdrawSubmitting] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [withdrawError, setWithdrawError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    const [depositAmount, setDepositAmount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    const [transactionId, setTransactionId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    const [depositSubmitting, setDepositSubmitting] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [selectedMethod, setSelectedMethod] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    const [paymentDetails, setPaymentDetails] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    // 🔍 Get user, role, and wallet\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"PlayBoard.useEffect\": ()=>{\n            const unsubscribe = (0,firebase_auth__WEBPACK_IMPORTED_MODULE_2__.onAuthStateChanged)(auth, {\n                \"PlayBoard.useEffect.unsubscribe\": async (currentUser)=>{\n                    setUser(currentUser);\n                    if (currentUser) {\n                        // Get role\n                        const userRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.doc)(db, 's_users', currentUser.uid);\n                        const userSnap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.getDoc)(userRef);\n                        let userRole = 'user';\n                        if (userSnap.exists()) {\n                            var _userSnap_data;\n                            userRole = ((_userSnap_data = userSnap.data()) === null || _userSnap_data === void 0 ? void 0 : _userSnap_data.role) || 'user';\n                        }\n                        setRole(userRole);\n                        // Get wallet\n                        const walletRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.doc)(db, 's_subwallets', currentUser.uid);\n                        const walletSnap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.getDoc)(walletRef);\n                        if (walletSnap.exists()) {\n                            var _walletSnap_data_balance;\n                            setWalletBalance((_walletSnap_data_balance = walletSnap.data().balance) !== null && _walletSnap_data_balance !== void 0 ? _walletSnap_data_balance : 0);\n                        } else {\n                            // If wallet doesn't exist, create it\n                            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.updateDoc)(walletRef, {\n                                uid: currentUser.uid,\n                                email: currentUser.email,\n                                balance: 0,\n                                createdAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.serverTimestamp)()\n                            }).catch({\n                                \"PlayBoard.useEffect.unsubscribe\": ()=>{}\n                            }[\"PlayBoard.useEffect.unsubscribe\"]);\n                            setWalletBalance(0);\n                        }\n                    }\n                }\n            }[\"PlayBoard.useEffect.unsubscribe\"]);\n            return ({\n                \"PlayBoard.useEffect\": ()=>unsubscribe()\n            })[\"PlayBoard.useEffect\"];\n        }\n    }[\"PlayBoard.useEffect\"], []);\n    // ✅ Withdraw function\n    // const handleWithdrawSubmit = async () => {\n    //   if (!user) return alert('Login required.');\n    //   const amount = parseFloat(withdrawAmount);\n    //   if (isNaN(amount) || amount <= 0) {\n    //     return setWithdrawError('Enter a valid amount.');\n    //   }\n    //   if (amount < 200) {\n    //     return setWithdrawError('Minimum withdraw amount is ₹200.');\n    //   }\n    //   if ((walletBalance ?? 0) < amount) {\n    //     return setWithdrawError('Insufficient wallet balance.');\n    //   }\n    //   setWithdrawError('');\n    //   setWithdrawSubmitting(true);\n    //   try {\n    //     // Deduct from wallet\n    //     const walletRef = doc(db, 'subwallets', user.uid);\n    //     await updateDoc(walletRef, {\n    //       balance: walletBalance - amount,\n    //       updatedAt: serverTimestamp(),\n    //     });\n    //     setWalletBalance((prev) => prev - amount);\n    //     // Create withdraw request\n    //     await addDoc(collection(db, 'subwithdrawRequests'), {\n    //       uid: user.uid,\n    //       email: user.email,\n    //       amount,\n    //       createdAt: serverTimestamp(),\n    //       status: 'pending',\n    //     });\n    //     alert('Withdraw request submitted!');\n    //     setWithdrawAmount('');\n    //   } catch (err) {\n    //     console.error('Withdraw error:', err);\n    //     alert('Failed to submit withdraw request.');\n    //   } finally {\n    //     setWithdrawSubmitting(false);\n    //   }\n    // };\n    //     const handleWithdrawSubmit = async () => {\n    //   if (!user) return alert('Login required.');\n    //   const amount = parseFloat(withdrawAmount);\n    //   if (isNaN(amount) || amount <= 0) {\n    //     return setWithdrawError('Enter a valid amount.');\n    //   }\n    //   if (amount < 200) {\n    //     return setWithdrawError('Minimum withdraw amount is ₹200.');\n    //   }\n    //   if (!selectedMethod || !paymentDetails.trim()) {\n    //     return setWithdrawError('Please select a method and enter your ID.');\n    //   }\n    //   if ((walletBalance ?? 0) < amount) {\n    //     return setWithdrawError('Insufficient wallet balance.');\n    //   }\n    //   setWithdrawError('');\n    //   setWithdrawSubmitting(true);\n    //   try {\n    //     const walletRef = doc(db, 'subwallets', user.uid);\n    //     await updateDoc(walletRef, {\n    //       balance: walletBalance - amount,\n    //       updatedAt: serverTimestamp(),\n    //     });\n    //     setWalletBalance((prev) => prev - amount);\n    //     await addDoc(collection(db, 'subwithdrawRequests'), {\n    //       uid: user.uid,\n    //       email: user.email,\n    //       amount,\n    //       method: selectedMethod,\n    //       paymentId: paymentDetails.trim(),\n    //       createdAt: serverTimestamp(),\n    //       status: 'pending',\n    //     });\n    //     alert('Withdraw request submitted!');\n    //     setWithdrawAmount('');\n    //     setSelectedMethod('');\n    //     setPaymentDetails('');\n    //   } catch (err) {\n    //     console.error('Withdraw error:', err);\n    //     alert('Failed to submit withdraw request.');\n    //   } finally {\n    //     setWithdrawSubmitting(false);\n    //   }\n    // };\n    // const handleWithdrawSubmit = async () => {\n    //   if (!user) return alert('Login required.');\n    //   const amount = parseFloat(withdrawAmount);\n    //   if (isNaN(amount) || amount <= 0) {\n    //     return setWithdrawError('Enter a valid amount.');\n    //   }\n    //   if (amount < 200) {\n    //     return setWithdrawError('Minimum withdraw amount is ₹200.');\n    //   }\n    //   if (!selectedMethod || !paymentDetails.trim()) {\n    //     return setWithdrawError('Please select a method and enter your ID.');\n    //   }\n    //   if ((walletBalance ?? 0) < amount) {\n    //     return setWithdrawError('Insufficient wallet balance.');\n    //   }\n    //   setWithdrawError('');\n    //   setWithdrawSubmitting(true);\n    //   try {\n    //     // Get subadminId from user profile\n    //     const userDoc = await getDoc(doc(db, 'users', user.uid));\n    //     const subAdminId = userDoc.exists() ? userDoc.data().subAdminId || '' : '';\n    //     // Deduct from wallet\n    //     const walletRef = doc(db, 'subwallets', user.uid);\n    //     await updateDoc(walletRef, {\n    //       balance: walletBalance - amount,\n    //       updatedAt: serverTimestamp(),\n    //     });\n    //     setWalletBalance((prev) => prev - amount);\n    //     // Add withdraw request\n    //     await addDoc(collection(db, 'subwithdrawRequests'), {\n    //       uid: user.uid,\n    //       email: user.email,\n    //       amount,\n    //       method: selectedMethod,\n    //       paymentId: paymentDetails.trim(),\n    //       createdAt: serverTimestamp(),\n    //       status: 'pending',\n    //       fromSubAdminId: subAdminId  // ✅ important for subadmin to filter\n    //     });\n    //     alert('Withdraw request submitted!');\n    //     setWithdrawAmount('');\n    //     setSelectedMethod('');\n    //     setPaymentDetails('');\n    //   } catch (err) {\n    //     console.error('Withdraw error:', err);\n    //     alert('Failed to submit withdraw request.');\n    //   } finally {\n    //     setWithdrawSubmitting(false);\n    //   }\n    // };\n    const handleWithdrawSubmit = async ()=>{\n        if (!user) return alert('Login required.');\n        const amount = parseFloat(withdrawAmount);\n        if (isNaN(amount) || amount <= 0) return setWithdrawError('Enter a valid amount.');\n        if (amount < 200) return setWithdrawError('Minimum withdraw amount is ₹200.');\n        if (!selectedMethod || !paymentDetails.trim()) return setWithdrawError('Please select a method and enter your ID.');\n        if ((walletBalance !== null && walletBalance !== void 0 ? walletBalance : 0) < amount) return setWithdrawError('Insufficient wallet balance.');\n        setWithdrawError('');\n        setWithdrawSubmitting(true);\n        try {\n            const userDoc = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.getDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.doc)(db, 's_users', user.uid));\n            const userData = userDoc.exists() ? userDoc.data() : {};\n            const isSubadmin = userData.role === 'subadmin';\n            const fromSubAdminId = isSubadmin ? user.uid : userData.subAdminId || '';\n            const fromUserSubAdminId = isSubadmin ? '' : userData.subAdminId || '';\n            // Deduct from wallet\n            const walletRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.doc)(db, 's_subwallets', user.uid);\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.updateDoc)(walletRef, {\n                balance: walletBalance - amount,\n                updatedAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.serverTimestamp)()\n            });\n            setWalletBalance((prev)=>prev - amount);\n            // Add withdraw request\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.addDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.collection)(db, 's_subwithdrawRequests'), {\n                uid: user.uid,\n                email: user.email,\n                amount,\n                method: selectedMethod,\n                paymentId: paymentDetails.trim(),\n                createdAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.serverTimestamp)(),\n                status: 'pending',\n                fromSubAdminId,\n                fromUserSubAdminId\n            });\n            alert('Withdraw request submitted!');\n            setWithdrawAmount('');\n            setSelectedMethod('');\n            setPaymentDetails('');\n        } catch (err) {\n            console.error('Withdraw error:', err);\n            alert('Failed to submit withdraw request.');\n        } finally{\n            setWithdrawSubmitting(false);\n        }\n    };\n    // ✅ Deposit function (for subadmin)\n    const handleDepositSubmit = async ()=>{\n        if (!user) return alert('Login required.');\n        const amount = parseFloat(depositAmount);\n        if (isNaN(amount) || amount <= 0) {\n            return alert('Enter a valid deposit amount.');\n        }\n        if (!transactionId.trim()) {\n            return alert('Enter transaction ID.');\n        }\n        setDepositSubmitting(true);\n        try {\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.addDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.collection)(db, 's_subdepositRequests'), {\n                uid: user.uid,\n                email: user.email,\n                amount,\n                transactionId: transactionId.trim(),\n                createdAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.serverTimestamp)(),\n                status: 'pending'\n            });\n            alert('Deposit request submitted!');\n            setDepositAmount('');\n            setTransactionId('');\n        } catch (err) {\n            console.error('Deposit error:', err);\n            alert('Failed to submit deposit request.');\n        } finally{\n            setDepositSubmitting(false);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_Components_Layout__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"min-h-screen bg-gray-900 text-white p-6\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"max-w-xl mx-auto bg-gray-800 p-6 rounded shadow-lg\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"mb-6\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                className: \"text-2xl font-bold mb-2\",\n                                children: \"Wallet\"\n                            }, void 0, false, {\n                                fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\add-balance\\\\page.js\",\n                                lineNumber: 879,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                children: [\n                                    \"Current Balance: \",\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"text-yellow-400 font-semibold\",\n                                        children: [\n                                            \"₹\",\n                                            walletBalance === null || walletBalance === void 0 ? void 0 : walletBalance.toFixed(2)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\add-balance\\\\page.js\",\n                                        lineNumber: 880,\n                                        columnNumber: 33\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\add-balance\\\\page.js\",\n                                lineNumber: 880,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\add-balance\\\\page.js\",\n                        lineNumber: 878,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"mb-6\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                className: \"text-xl font-bold mb-2\",\n                                children: \"Withdraw Money\"\n                            }, void 0, false, {\n                                fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\add-balance\\\\page.js\",\n                                lineNumber: 948,\n                                columnNumber: 3\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                className: \"block mb-2\",\n                                children: \"Withdraw Amount (Min ₹200)\"\n                            }, void 0, false, {\n                                fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\add-balance\\\\page.js\",\n                                lineNumber: 950,\n                                columnNumber: 3\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                type: \"number\",\n                                placeholder: \"Withdraw Amount\",\n                                value: withdrawAmount,\n                                onChange: (e)=>{\n                                    setWithdrawAmount(e.target.value);\n                                    if (withdrawError) setWithdrawError('');\n                                },\n                                className: \"w-full p-2 mb-3 bg-gray-700 border border-gray-600 rounded\"\n                            }, void 0, false, {\n                                fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\add-balance\\\\page.js\",\n                                lineNumber: 951,\n                                columnNumber: 3\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                className: \"block mb-2\",\n                                children: \"Select Payment Method\"\n                            }, void 0, false, {\n                                fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\add-balance\\\\page.js\",\n                                lineNumber: 962,\n                                columnNumber: 3\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"select\", {\n                                value: selectedMethod,\n                                onChange: (e)=>setSelectedMethod(e.target.value),\n                                className: \"w-full p-2 mb-3 bg-gray-700 border border-gray-600 rounded\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                        value: \"\",\n                                        children: \"-- Select Method --\"\n                                    }, void 0, false, {\n                                        fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\add-balance\\\\page.js\",\n                                        lineNumber: 968,\n                                        columnNumber: 5\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                        value: \"UPI\",\n                                        children: \"UPI\"\n                                    }, void 0, false, {\n                                        fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\add-balance\\\\page.js\",\n                                        lineNumber: 969,\n                                        columnNumber: 5\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                        value: \"PhonePe\",\n                                        children: \"PhonePe\"\n                                    }, void 0, false, {\n                                        fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\add-balance\\\\page.js\",\n                                        lineNumber: 970,\n                                        columnNumber: 5\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                        value: \"Google Pay\",\n                                        children: \"Google Pay\"\n                                    }, void 0, false, {\n                                        fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\add-balance\\\\page.js\",\n                                        lineNumber: 971,\n                                        columnNumber: 5\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                        value: \"Paytm\",\n                                        children: \"Paytm\"\n                                    }, void 0, false, {\n                                        fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\add-balance\\\\page.js\",\n                                        lineNumber: 972,\n                                        columnNumber: 5\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\add-balance\\\\page.js\",\n                                lineNumber: 963,\n                                columnNumber: 3\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                className: \"block mb-2\",\n                                children: [\n                                    \"Your \",\n                                    selectedMethod || 'Payment',\n                                    \" ID\"\n                                ]\n                            }, void 0, true, {\n                                fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\add-balance\\\\page.js\",\n                                lineNumber: 975,\n                                columnNumber: 3\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                type: \"text\",\n                                placeholder: \"Enter your \".concat(selectedMethod || 'Payment', \" ID\"),\n                                value: paymentDetails,\n                                onChange: (e)=>setPaymentDetails(e.target.value),\n                                className: \"w-full p-2 mb-3 bg-gray-700 border border-gray-600 rounded\"\n                            }, void 0, false, {\n                                fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\add-balance\\\\page.js\",\n                                lineNumber: 976,\n                                columnNumber: 3\n                            }, this),\n                            withdrawError && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                className: \"text-red-500 text-sm mb-3\",\n                                children: withdrawError\n                            }, void 0, false, {\n                                fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\add-balance\\\\page.js\",\n                                lineNumber: 985,\n                                columnNumber: 5\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: handleWithdrawSubmit,\n                                disabled: withdrawSubmitting,\n                                className: \"w-full py-3 font-semibold text-black rounded \".concat(withdrawSubmitting ? 'bg-yellow-200' : 'bg-yellow-500 hover:bg-yellow-600'),\n                                children: withdrawSubmitting ? 'Submitting...' : 'Submit Withdraw Request'\n                            }, void 0, false, {\n                                fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\add-balance\\\\page.js\",\n                                lineNumber: 988,\n                                columnNumber: 3\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\add-balance\\\\page.js\",\n                        lineNumber: 947,\n                        columnNumber: 1\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\add-balance\\\\page.js\",\n                lineNumber: 875,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\add-balance\\\\page.js\",\n            lineNumber: 874,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\add-balance\\\\page.js\",\n        lineNumber: 873,\n        columnNumber: 5\n    }, this);\n} // 'use client';\n // import React, { useState, useEffect } from 'react';\n // import {\n //   getFirestore,\n //   collection,\n //   query,\n //   where,\n //   getDocs,\n //   orderBy,\n // } from 'firebase/firestore';\n // import { getAuth, onAuthStateChanged } from 'firebase/auth';\n // import firebaseApp from '@/firebase';\n // import Layout from '@/app/Components/Layout';\n // export default function AdminBetsLookupPage() {\n //   const db = getFirestore(firebaseApp);\n //   const auth = getAuth(firebaseApp);\n //   const [date, setDate] = useState('');\n //   const [slot, setSlot] = useState('1:00 PM');\n //   const [range, setRange] = useState('0-9');\n //   const [bets, setBets] = useState([]);\n //   const [loading, setLoading] = useState(false);\n //   const [role, setRole] = useState(null);\n //   const [uid, setUid] = useState(null);\n //   const [authLoaded, setAuthLoaded] = useState(false);\n //   const slots = ['1:00 PM', '6:00 PM', '8:00 PM'];\n //   useEffect(() => {\n //     const unsubscribe = onAuthStateChanged(auth, async (user) => {\n //       if (user) {\n //         setUid(user.uid);\n //         const userDocSnap = await getDocs(\n //           query(collection(db, 'users'), where('uid', '==', user.uid))\n //         );\n //         if (!userDocSnap.empty) {\n //           const userData = userDocSnap.docs[0].data();\n //           setRole(userData.role);\n //         }\n //       }\n //       setAuthLoaded(true); // mark auth + role load finished\n //     });\n //     return () => unsubscribe();\n //   }, []);\n //   const handleSearch = async () => {\n //     if (!date || !slot || !range || !role) {\n //       alert('Please fill all fields and ensure role is loaded.');\n //       return;\n //     }\n //     setLoading(true);\n //     setBets([]);\n //     try {\n //       const [yyyy, mm, dd] = date.split('-');\n //       const formattedDay = `${dd}/${mm}/${yyyy}`;\n //       const filters = [\n //         where('day', '==', formattedDay),\n //         where('gameSlot', '==', slot),\n //         where('range', '==', range),\n //       ];\n //       if (role === 'subadmin') {\n //         filters.push(where('subAdminId', '==', uid));\n //       }\n //       const q = query(\n //         collection(db, 'subbets'),\n //         ...filters,\n //         orderBy('createdAt', 'desc')\n //       );\n //       const snap = await getDocs(q);\n //       const results = snap.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\n //       setBets(results);\n //     } catch (err) {\n //       console.error(err);\n //       alert('Error fetching bets. Make sure composite index exists.');\n //     }\n //     setLoading(false);\n //   };\n //   return (\n //     <Layout>\n //       <div className=\"min-h-screen bg-gray-900 text-white p-8\">\n //         <div className=\"max-w-3xl mx-auto\">\n //           <h1 className=\"text-3xl font-bold mb-6\">\n //             {role === 'subadmin' ? 'Subadmin' : 'Admin'}: Bets Lookup\n //           </h1>\n //           {!authLoaded ? (\n //             <p className=\"text-gray-400\">Loading user info...</p>\n //           ) : (\n //             <div className=\"bg-gray-800 p-6 rounded-lg shadow-2xl mb-8\">\n //               <div className=\"mb-4\">\n //                 <label className=\"block mb-2\">Select Date:</label>\n //                 <input\n //                   type=\"date\"\n //                   value={date}\n //                   onChange={(e) => setDate(e.target.value)}\n //                   className=\"w-full px-4 py-2 bg-gray-700 border border-gray-600 rounded focus:outline-none\"\n //                 />\n //               </div>\n //               <div className=\"mb-4\">\n //                 <label className=\"block mb-2\">Select Slot:</label>\n //                 <select\n //                   value={slot}\n //                   onChange={(e) => setSlot(e.target.value)}\n //                   className=\"w-full px-4 py-2 bg-gray-700 border border-gray-600 rounded focus:outline-none\"\n //                 >\n //                   {slots.map((s) => (\n //                     <option key={s} value={s}>\n //                       {s}\n //                     </option>\n //                   ))}\n //                 </select>\n //               </div>\n //               <div className=\"mb-4\">\n //                 <label className=\"block mb-2\">Select Range:</label>\n //                 <select\n //                   value={range}\n //                   onChange={(e) => setRange(e.target.value)}\n //                   className=\"w-full px-4 py-2 bg-gray-700 border border-gray-600 rounded focus:outline-none\"\n //                 >\n //                   <option value=\"0-9\">0 - 9</option>\n //                   <option value=\"00-99\">00 - 99</option>\n //                 </select>\n //               </div>\n //               <button\n //                 onClick={handleSearch}\n //                 disabled={loading || !role}\n //                 className={`w-full py-3 rounded-md text-black font-semibold transition ${\n //                   loading || !role\n //                     ? 'bg-yellow-100 cursor-not-allowed'\n //                     : 'bg-yellow-400 hover:bg-yellow-500'\n //                 }`}\n //               >\n //                 {loading ? 'Searching...' : 'Search Bets'}\n //               </button>\n //             </div>\n //           )}\n //           {bets.length === 0 && !loading && authLoaded && (\n //             <p className=\"text-gray-400\">No bets found for this filter.</p>\n //           )}\n //           {bets.length > 0 && (\n //             <div className=\"bg-gray-800 p-6 rounded-lg shadow-2xl\">\n //               <h2 className=\"text-xl font-bold mb-4\">Matching Bets:</h2>\n //               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n //                 {bets.map((bet) => (\n //                   <div\n //                     key={bet.id}\n //                     className=\"border border-gray-600 p-4 rounded\"\n //                   >\n //                     <p>\n //                       <span className=\"font-bold\">User:</span>{' '}\n //                       {bet.email || 'N/A'}\n //                     </p>\n //                     <p>\n //                       <span className=\"font-bold\">Number:</span> {bet.number}\n //                     </p>\n //                     <p>\n //                       <span className=\"font-bold\">Amount:</span> ₹{bet.amount}\n //                     </p>\n //                     <p>\n //                       <span className=\"font-bold\">Time:</span> {bet.time || '—'}\n //                     </p>\n //                   </div>\n //                 ))}\n //               </div>\n //             </div>\n //           )}\n //         </div>\n //       </div>\n //     </Layout>\n //   );\n // }\n_s(PlayBoard, \"/0UrlGfDu2QqbGyIvcFSbRDqit4=\");\n_c = PlayBoard;\nvar _c;\n$RefreshReg$(_c, \"PlayBoard\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/app/add-balance/page.js\n"));

/***/ })

});