"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/app/user-details/page",{

/***/ "(app-pages-browser)/./src/app/app/user-details/page.js":
/*!******************************************!*\
  !*** ./src/app/app/user-details/page.js ***!
  \******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ AdminUserWalletsPage)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! firebase/firestore */ \"(app-pages-browser)/./node_modules/firebase/firestore/dist/esm/index.esm.js\");\n/* harmony import */ var firebase_auth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! firebase/auth */ \"(app-pages-browser)/./node_modules/firebase/auth/dist/esm/index.esm.js\");\n/* harmony import */ var _firebase__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/firebase */ \"(app-pages-browser)/./src/firebase.js\");\n/* harmony import */ var _app_Components_Layout__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/app/Components/Layout */ \"(app-pages-browser)/./src/app/Components/Layout/index.js\");\n// 'use client';\n// import React, { useEffect, useState } from 'react';\n// import {\n//   getFirestore,\n//   collection,\n//   getDocs,\n//   query,\n//   where,\n// } from 'firebase/firestore';\n// import firebaseApp from '@/firebase';\n// import Layout from '@/app/Components/Layout';\n// export default function AdminUserWalletsPage() {\n//   const db = getFirestore(firebaseApp);\n//   const [users, setUsers] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [search, setSearch] = useState('');\n//   useEffect(() => {\n//     fetchUserWalletData();\n//   }, []);\n//   const fetchUserWalletData = async () => {\n//     setLoading(true);\n//     try {\n//       const walletsSnap = await getDocs(collection(db, 'wallets'));\n//       const wallets = walletsSnap.docs.map((doc) => ({\n//         uid: doc.id,\n//         balance: doc.data().balance || 0,\n//         email: doc.data().email || '',\n//       }));\n//       const depositSnap = await getDocs(\n//         query(collection(db, 'depositRequests'), where('status', '==', 'approved'))\n//       );\n//       const withdrawSnap = await getDocs(\n//         query(collection(db, 'withdrawRequests'), where('status', '==', 'approved'))\n//       );\n//       const depositMap = {};\n//       depositSnap.forEach((doc) => {\n//         const data = doc.data();\n//         if (!depositMap[data.uid]) depositMap[data.uid] = 0;\n//         depositMap[data.uid] += data.amount || 0;\n//       });\n//       const withdrawMap = {};\n//       withdrawSnap.forEach((doc) => {\n//         const data = doc.data();\n//         if (!withdrawMap[data.uid]) withdrawMap[data.uid] = 0;\n//         withdrawMap[data.uid] += data.amount || 0;\n//       });\n//       const finalUsers = wallets.map((user) => ({\n//         ...user,\n//         totalDeposited: depositMap[user.uid] || 0,\n//         totalWithdrawn: withdrawMap[user.uid] || 0,\n//       }));\n//       setUsers(finalUsers);\n//     } catch (error) {\n//       console.error('Error fetching user wallet data:', error);\n//       alert('Error loading wallet data.');\n//     }\n//     setLoading(false);\n//   };\n//   const exportToCSV = () => {\n//     const headers = ['Email', 'Balance', 'Deposited', 'Withdrawn'];\n//     const rows = users.map(u => [u.email, u.balance, u.totalDeposited, u.totalWithdrawn]);\n//     const csvContent = [headers, ...rows].map(r => r.join(',')).join('\\n');\n//     const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n//     const url = URL.createObjectURL(blob);\n//     const link = document.createElement('a');\n//     link.setAttribute('href', url);\n//     link.setAttribute('download', 'user_wallets.csv');\n//     document.body.appendChild(link);\n//     link.click();\n//     document.body.removeChild(link);\n//   };\n//   const filteredUsers = users.filter(u =>\n//     u.email.toLowerCase().includes(search.toLowerCase())\n//   );\n//   return (\n//     <Layout>\n//       <div className=\"min-h-screen bg-gray-900 text-white p-8\">\n//         <div className=\"max-w-5xl mx-auto\">\n//           <h1 className=\"text-3xl font-bold mb-6\">Admin: User Wallet Overview</h1>\n//           <div className=\"flex items-center gap-4 mb-6\">\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search by email...\"\n//               value={search}\n//               onChange={(e) => setSearch(e.target.value)}\n//               className=\"px-4 py-2 rounded bg-gray-800 border border-gray-600 focus:outline-none\"\n//             />\n//             <button\n//               onClick={exportToCSV}\n//               className=\"px-4 py-2 bg-yellow-500 hover:bg-yellow-600 text-black rounded font-semibold\"\n//             >\n//               Export CSV\n//             </button>\n//           </div>\n//           {loading ? (\n//             <p className=\"text-yellow-300\">Loading...</p>\n//           ) : filteredUsers.length === 0 ? (\n//             <p className=\"text-gray-400\">No users found.</p>\n//           ) : (\n//             <div className=\"overflow-x-auto bg-gray-800 rounded-lg shadow-xl\">\n//               <table className=\"w-full text-left table-auto\">\n//                 <thead className=\"bg-gray-700 text-sm uppercase text-gray-300\">\n//                   <tr>\n//                     <th className=\"p-3\">Email</th>\n//                     <th className=\"p-3\">Balance</th>\n//                     <th className=\"p-3\">Deposited</th>\n//                     <th className=\"p-3\">Withdrawn</th>\n//                   </tr>\n//                 </thead>\n//                 <tbody>\n//                   {filteredUsers.map((user) => (\n//                     <tr key={user.uid} className=\"border-t border-gray-700\">\n//                       <td className=\"p-3\">{user.email || 'N/A'}</td>\n//                       <td className=\"p-3\">₹{user.balance}</td>\n//                       <td className=\"p-3\">₹{user.totalDeposited}</td>\n//                       <td className=\"p-3\">₹{user.totalWithdrawn}</td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             </div>\n//           )}\n//         </div>\n//       </div>\n//     </Layout>\n//   );\n// }\n// 'use client';\n// import React, { useEffect, useState } from 'react';\n// import {\n//   getFirestore,\n//   collection,\n//   getDocs,\n//   query,\n//   where,\n//   Timestamp,\n// } from 'firebase/firestore';\n// import firebaseApp from '@/firebase';\n// import Layout from '@/app/Components/Layout';\n// export default function AdminUserWalletsPage() {\n//   const db = getFirestore(firebaseApp);\n//   const [users, setUsers] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [search, setSearch] = useState('');\n//   useEffect(() => {\n//     fetchUserWalletData();\n//   }, []);\n//   const fetchUserWalletData = async () => {\n//     setLoading(true);\n//     try {\n//       const walletsSnap = await getDocs(collection(db, 'wallets'));\n//       const wallets = walletsSnap.docs.map((doc) => ({\n//         uid: doc.id,\n//         balance: doc.data().balance || 0,\n//         email: doc.data().email || '',\n//       }));\n//       const oneWeekAgo = Timestamp.fromDate(new Date(Date.now() - 7 * 24 * 60 * 60 * 1000));\n//       const depositSnap = await getDocs(\n//         query(\n//           collection(db, 'depositRequests'),\n//           where('status', '==', 'approved'),\n//           where('createdAt', '>=', oneWeekAgo)\n//         )\n//       );\n//       const withdrawSnap = await getDocs(\n//         query(\n//           collection(db, 'withdrawRequests'),\n//           where('status', '==', 'approved'),\n//           where('createdAt', '>=', oneWeekAgo)\n//         )\n//       );\n//       const depositMap = {};\n//       depositSnap.forEach((doc) => {\n//         const data = doc.data();\n//         if (!depositMap[data.uid]) depositMap[data.uid] = 0;\n//         depositMap[data.uid] += data.amount || 0;\n//       });\n//       const withdrawMap = {};\n//       withdrawSnap.forEach((doc) => {\n//         const data = doc.data();\n//         if (!withdrawMap[data.uid]) withdrawMap[data.uid] = 0;\n//         withdrawMap[data.uid] += data.amount || 0;\n//       });\n//       const finalUsers = wallets.map((user) => ({\n//         ...user,\n//         totalDeposited: depositMap[user.uid] || 0,\n//         totalWithdrawn: withdrawMap[user.uid] || 0,\n//       }));\n//       setUsers(finalUsers);\n//     } catch (error) {\n//       console.error('Error fetching user wallet data:', error);\n//       alert('Error loading wallet data.');\n//     }\n//     setLoading(false);\n//   };\n//   const exportToCSV = () => {\n//     const headers = ['Email', 'Balance', 'Deposited (7 days)', 'Withdrawn (7 days)'];\n//     const rows = users.map(u => [u.email, u.balance, u.totalDeposited, u.totalWithdrawn]);\n//     const csvContent = [headers, ...rows].map(r => r.join(',')).join('\\n');\n//     const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n//     const url = URL.createObjectURL(blob);\n//     const link = document.createElement('a');\n//     link.setAttribute('href', url);\n//     link.setAttribute('download', 'user_wallets.csv');\n//     document.body.appendChild(link);\n//     link.click();\n//     document.body.removeChild(link);\n//   };\n//   const filteredUsers = users.filter(u =>\n//     u.email.toLowerCase().includes(search.toLowerCase())\n//   );\n//   return (\n//     <Layout>\n//       <div className=\"min-h-screen bg-gray-900 text-white p-8\">\n//         <div className=\"max-w-5xl mx-auto\">\n//           <h1 className=\"text-3xl font-bold mb-6\">Admin: User Wallet Overview</h1>\n//           <div className=\"flex items-center gap-4 mb-6\">\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search by email...\"\n//               value={search}\n//               onChange={(e) => setSearch(e.target.value)}\n//               className=\"px-4 py-2 rounded bg-gray-800 border border-gray-600 focus:outline-none\"\n//             />\n//             <button\n//               onClick={exportToCSV}\n//               className=\"px-4 py-2 bg-yellow-500 hover:bg-yellow-600 text-black rounded font-semibold\"\n//             >\n//               Export CSV\n//             </button>\n//           </div>\n//           {loading ? (\n//             <p className=\"text-yellow-300\">Loading...</p>\n//           ) : filteredUsers.length === 0 ? (\n//             <p className=\"text-gray-400\">No users found.</p>\n//           ) : (\n//             <div className=\"overflow-x-auto bg-gray-800 rounded-lg shadow-xl\">\n//               <table className=\"w-full text-left table-auto\">\n//                 <thead className=\"bg-gray-700 text-sm uppercase text-gray-300\">\n//                   <tr>\n//                     <th className=\"p-3\">Email</th>\n//                     <th className=\"p-3\">Balance</th>\n//                     <th className=\"p-3\">Deposited (7d)</th>\n//                     <th className=\"p-3\">Withdrawn (7d)</th>\n//                   </tr>\n//                 </thead>\n//                 <tbody>\n//                   {filteredUsers.map((user) => (\n//                     <tr key={user.uid} className=\"border-t border-gray-700\">\n//                       <td className=\"p-3\">{user.email || 'N/A'}</td>\n//                       <td className=\"p-3\">₹{user.balance}</td>\n//                       <td className=\"p-3\">₹{user.totalDeposited}</td>\n//                       <td className=\"p-3\">₹{user.totalWithdrawn}</td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             </div>\n//           )}\n//         </div>\n//       </div>\n//     </Layout>\n//   );\n// }\n// 'use client';\n// import React, { useEffect, useState } from 'react';\n// import {\n//   getFirestore,\n//   collection,\n//   getDocs,\n//   query,\n//   where,\n//   Timestamp,\n// } from 'firebase/firestore';\n// import firebaseApp from '@/firebase';\n// import Layout from '@/app/Components/Layout';\n// export default function AdminUserWalletsPage() {\n//   const db = getFirestore(firebaseApp);\n//   const [users, setUsers] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [search, setSearch] = useState('');\n//   const [selectedUser, setSelectedUser] = useState(null);\n//   const [history, setHistory] = useState({ deposits: [], withdrawals: [] });\n//   const [historyLoading, setHistoryLoading] = useState(false);\n//   useEffect(() => {\n//     fetchUserWalletData();\n//   }, []);\n//   const fetchUserWalletData = async () => {\n//     setLoading(true);\n//     try {\n//       const walletsSnap = await getDocs(collection(db, 'wallets'));\n//       const wallets = walletsSnap.docs.map((doc) => ({\n//         uid: doc.id,\n//         balance: doc.data().balance || 0,\n//         email: doc.data().email || '',\n//       }));\n//       const oneWeekAgo = Timestamp.fromDate(new Date(Date.now() - 7 * 24 * 60 * 60 * 1000));\n//       const depositSnap = await getDocs(\n//         query(\n//           collection(db, 'depositRequests'),\n//           where('status', '==', 'approved'),\n//           where('createdAt', '>=', oneWeekAgo)\n//         )\n//       );\n//       const withdrawSnap = await getDocs(\n//         query(\n//           collection(db, 'withdrawRequests'),\n//           where('status', '==', 'approved'),\n//           where('createdAt', '>=', oneWeekAgo)\n//         )\n//       );\n//       const depositMap = {};\n//       depositSnap.forEach((doc) => {\n//         const data = doc.data();\n//         if (!depositMap[data.uid]) depositMap[data.uid] = 0;\n//         depositMap[data.uid] += data.amount || 0;\n//       });\n//       const withdrawMap = {};\n//       withdrawSnap.forEach((doc) => {\n//         const data = doc.data();\n//         if (!withdrawMap[data.uid]) withdrawMap[data.uid] = 0;\n//         withdrawMap[data.uid] += data.amount || 0;\n//       });\n//       const finalUsers = wallets.map((user) => ({\n//         ...user,\n//         totalDeposited: depositMap[user.uid] || 0,\n//         totalWithdrawn: withdrawMap[user.uid] || 0,\n//       }));\n//       setUsers(finalUsers);\n//     } catch (error) {\n//       console.error('Error fetching user wallet data:', error);\n//       alert('Error loading wallet data.');\n//     }\n//     setLoading(false);\n//   };\n//   const fetchUserHistory = async (uid) => {\n//     setHistoryLoading(true);\n//     try {\n//       const depositsSnap = await getDocs(\n//         query(collection(db, 'depositRequests'), where('uid', '==', uid))\n//       );\n//       const withdrawalsSnap = await getDocs(\n//         query(collection(db, 'withdrawRequests'), where('uid', '==', uid))\n//       );\n//       const deposits = depositsSnap.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\n//       const withdrawals = withdrawalsSnap.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\n//       setHistory({ deposits, withdrawals });\n//     } catch (error) {\n//       console.error('Error loading history:', error);\n//     }\n//     setHistoryLoading(false);\n//   };\n//   const exportToCSV = () => {\n//     const headers = ['Email', 'Balance', 'Deposited (7 days)', 'Withdrawn (7 days)'];\n//     const rows = users.map(u => [u.email, u.balance, u.totalDeposited, u.totalWithdrawn]);\n//     const csvContent = [headers, ...rows].map(r => r.join(',')).join('\\n');\n//     const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n//     const url = URL.createObjectURL(blob);\n//     const link = document.createElement('a');\n//     link.setAttribute('href', url);\n//     link.setAttribute('download', 'user_wallets.csv');\n//     document.body.appendChild(link);\n//     link.click();\n//     document.body.removeChild(link);\n//   };\n//   const filteredUsers = users.filter(u =>\n//     u.email.toLowerCase().includes(search.toLowerCase())\n//   );\n//   return (\n//     <Layout>\n//       <div className=\"min-h-screen bg-gray-900 text-white p-8\">\n//         <div className=\"max-w-6xl mx-auto\">\n//           <h1 className=\"text-3xl font-bold mb-6\">Admin: User Wallet Overview</h1>\n//           <div className=\"flex items-center gap-4 mb-6\">\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search by email...\"\n//               value={search}\n//               onChange={(e) => setSearch(e.target.value)}\n//               className=\"px-4 py-2 rounded bg-gray-800 border border-gray-600 focus:outline-none\"\n//             />\n//             <button\n//               onClick={exportToCSV}\n//               className=\"px-4 py-2 bg-yellow-500 hover:bg-yellow-600 text-black rounded font-semibold\"\n//             >\n//               Export CSV\n//             </button>\n//           </div>\n//           {loading ? (\n//             <p className=\"text-yellow-300\">Loading...</p>\n//           ) : filteredUsers.length === 0 ? (\n//             <p className=\"text-gray-400\">No users found.</p>\n//           ) : (\n//             <div className=\"overflow-x-auto bg-gray-800 rounded-lg shadow-xl\">\n//               <table className=\"w-full text-left table-auto\">\n//                 <thead className=\"bg-gray-700 text-sm uppercase text-gray-300\">\n//                   <tr>\n//                     <th className=\"p-3\">Email</th>\n//                     <th className=\"p-3\">Balance</th>\n//                     <th className=\"p-3\">Deposited (7d)</th>\n//                     <th className=\"p-3\">Withdrawn (7d)</th>\n//                     <th className=\"p-3\">History</th>\n//                   </tr>\n//                 </thead>\n//                 <tbody>\n//                   {filteredUsers.map((user) => (\n//                     <tr key={user.uid} className=\"border-t border-gray-700\">\n//                       <td className=\"p-3\">{user.email || 'N/A'}</td>\n//                       <td className=\"p-3\">₹{user.balance}</td>\n//                       <td className=\"p-3\">₹{user.totalDeposited}</td>\n//                       <td className=\"p-3\">₹{user.totalWithdrawn}</td>\n//                       <td className=\"p-3\">\n//                         <button\n//                           className=\"text-blue-400 underline\"\n//                           onClick={() => {\n//                             setSelectedUser(user);\n//                             fetchUserHistory(user.uid);\n//                           }}\n//                         >\n//                           View\n//                         </button>\n//                       </td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             </div>\n//           )}\n//           {/* Transaction history modal */}\n//           {selectedUser && (\n//             <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n//               <div className=\"bg-gray-900 p-6 rounded-lg w-full max-w-3xl relative\">\n//                 <h2 className=\"text-2xl font-bold mb-4\">\n//                   {selectedUser.email} - Transaction History\n//                 </h2>\n//                 <button\n//                   className=\"absolute top-3 right-3 text-gray-400 hover:text-white\"\n//                   onClick={() => setSelectedUser(null)}\n//                 >\n//                   ✕\n//                 </button>\n//                 {historyLoading ? (\n//                   <p className=\"text-yellow-300\">Loading history...</p>\n//                 ) : (\n//                   <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n//                     <div>\n//                       <h3 className=\"text-lg font-semibold mb-2\">Deposits</h3>\n//                       {history.deposits.length === 0 ? (\n//                         <p className=\"text-gray-400\">No deposit history.</p>\n//                       ) : (\n//                         <ul className=\"space-y-2 text-sm\">\n//                           {history.deposits.map((d) => (\n//                             <li key={d.id} className=\"bg-gray-800 p-2 rounded\">\n//                               ₹{d.amount} - {d.status} - {d.createdAt?.toDate().toLocaleString()}\n//                             </li>\n//                           ))}\n//                         </ul>\n//                       )}\n//                     </div>\n//                     <div>\n//                       <h3 className=\"text-lg font-semibold mb-2\">Withdrawals</h3>\n//                       {history.withdrawals.length === 0 ? (\n//                         <p className=\"text-gray-400\">No withdrawal history.</p>\n//                       ) : (\n//                         <ul className=\"space-y-2 text-sm\">\n//                           {history.withdrawals.map((w) => (\n//                             <li key={w.id} className=\"bg-gray-800 p-2 rounded\">\n//                               ₹{w.amount} - {w.status} - {w.createdAt?.toDate().toLocaleString()}\n//                             </li>\n//                           ))}\n//                         </ul>\n//                       )}\n//                     </div>\n//                   </div>\n//                 )}\n//               </div>\n//             </div>\n//           )}\n//         </div>\n//       </div>\n//     </Layout>\n//   );\n// }\n// 'use client';\n// import React, { useEffect, useState } from 'react';\n// import {\n//   getFirestore,\n//   collection,\n//   getDocs,\n//   query,\n//   where,\n//   Timestamp,\n//   doc,\n//   getDoc,\n// } from 'firebase/firestore';\n// import { getAuth, onAuthStateChanged } from 'firebase/auth';\n// import firebaseApp from '@/firebase';\n// import Layout from '@/app/Components/Layout';\n// export default function AdminUserWalletsPage() {\n//   const auth = getAuth(firebaseApp);\n//   const db = getFirestore(firebaseApp);\n//   const [users, setUsers] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [search, setSearch] = useState('');\n//   const [currentUser, setCurrentUser] = useState(null);\n//   const [role, setRole] = useState(null);\n//   useEffect(() => {\n//     const unsubscribe = onAuthStateChanged(auth, async (user) => {\n//       setCurrentUser(user);\n//       if (user) {\n//         const userRef = doc(db, 'users', user.uid);\n//         const userSnap = await getDoc(userRef);\n//         const data = userSnap.data();\n//         const userRole = data?.role || 'user';\n//         setRole(userRole);\n//         if (userRole === 'admin' || userRole === 'subadmin') {\n//           await fetchUserWalletData(user.uid, userRole);\n//         } else {\n//           setUsers([]);\n//           setLoading(false);\n//         }\n//       } else {\n//         setLoading(false);\n//       }\n//     });\n//     return () => unsubscribe();\n//   }, []);\n//   const fetchUserWalletData = async (uid, role) => {\n//     setLoading(true);\n//     try {\n//       const walletCol = collection(db, 'subwallets');\n//       let walletQuery;\n//       if (role === 'admin') {\n//         walletQuery = walletCol; // get all\n//       } else {\n//         walletQuery = query(walletCol, where('subAdminId', '==', uid)); // only their users\n//       }\n//       const walletsSnap = await getDocs(walletQuery);\n//       const wallets = walletsSnap.docs.map((doc) => ({\n//         uid: doc.id,\n//         balance: doc.data().balance || 0,\n//         email: doc.data().email || '',\n//       }));\n//       const oneWeekAgo = Timestamp.fromDate(new Date(Date.now() - 7 * 24 * 60 * 60 * 1000));\n//       const depositSnap = await getDocs(\n//         query(\n//           collection(db, 'depositRequests'),\n//           where('status', '==', 'approved'),\n//           where('createdAt', '>=', oneWeekAgo)\n//         )\n//       );\n//       const withdrawSnap = await getDocs(\n//         query(\n//           collection(db, 'withdrawRequests'),\n//           where('status', '==', 'approved'),\n//           where('createdAt', '>=', oneWeekAgo)\n//         )\n//       );\n//       const depositMap = {};\n//       depositSnap.forEach((doc) => {\n//         const data = doc.data();\n//         if (!depositMap[data.uid]) depositMap[data.uid] = 0;\n//         depositMap[data.uid] += data.amount || 0;\n//       });\n//       const withdrawMap = {};\n//       withdrawSnap.forEach((doc) => {\n//         const data = doc.data();\n//         if (!withdrawMap[data.uid]) withdrawMap[data.uid] = 0;\n//         withdrawMap[data.uid] += data.amount || 0;\n//       });\n//       const finalUsers = wallets.map((user) => ({\n//         ...user,\n//         totalDeposited: depositMap[user.uid] || 0,\n//         totalWithdrawn: withdrawMap[user.uid] || 0,\n//       }));\n//       setUsers(finalUsers);\n//     } catch (error) {\n//       console.error('Error fetching user wallet data:', error);\n//       alert('Error loading wallet data.');\n//     }\n//     setLoading(false);\n//   };\n//   const exportToCSV = () => {\n//     const headers = ['Email', 'Balance', 'Deposited (7 days)', 'Withdrawn (7 days)'];\n//     const rows = users.map((u) => [u.email, u.balance, u.totalDeposited, u.totalWithdrawn]);\n//     const csvContent = [headers, ...rows].map((r) => r.join(',')).join('\\n');\n//     const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n//     const url = URL.createObjectURL(blob);\n//     const link = document.createElement('a');\n//     link.setAttribute('href', url);\n//     link.setAttribute('download', 'user_wallets.csv');\n//     document.body.appendChild(link);\n//     link.click();\n//     document.body.removeChild(link);\n//   };\n//   const filteredUsers = users.filter((u) =>\n//     u.email.toLowerCase().includes(search.toLowerCase())\n//   );\n//   return (\n//     <Layout>\n//       <div className=\"min-h-screen bg-gray-900 text-white p-8\">\n//         <div className=\"max-w-5xl mx-auto\">\n//           <h1 className=\"text-3xl font-bold mb-6\">\n//             {role === 'admin'\n//               ? 'Admin: All Subadmin & User Wallets'\n//               : 'Subadmin: Your User Wallets'}\n//           </h1>\n//           <div className=\"flex items-center gap-4 mb-6\">\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search by email...\"\n//               value={search}\n//               onChange={(e) => setSearch(e.target.value)}\n//               className=\"px-4 py-2 rounded bg-gray-800 border border-gray-600 focus:outline-none\"\n//             />\n//             <button\n//               onClick={exportToCSV}\n//               className=\"px-4 py-2 bg-yellow-500 hover:bg-yellow-600 text-black rounded font-semibold\"\n//             >\n//               Export CSV dk\n//             </button>\n//           </div>\n//           {loading ? (\n//             <p className=\"text-yellow-300\">Loading...</p>\n//           ) : filteredUsers.length === 0 ? (\n//             <p className=\"text-gray-400\">No users found.</p>\n//           ) : (\n//             <div className=\"overflow-x-auto bg-gray-800 rounded-lg shadow-xl\">\n//               <table className=\"w-full text-left table-auto\">\n//                 <thead className=\"bg-gray-700 text-sm uppercase text-gray-300\">\n//                   <tr>\n//                     <th className=\"p-3\">Email</th>\n//                     <th className=\"p-3\">Balance</th>\n//                     <th className=\"p-3\">Deposited (7d)</th>\n//                     <th className=\"p-3\">Withdrawn (7d)</th>\n//                   </tr>\n//                 </thead>\n//                 <tbody>\n//                   {filteredUsers.map((user) => (\n//                     <tr key={user.uid} className=\"border-t border-gray-700\">\n//                       <td className=\"p-3\">{user.email || 'N/A'}</td>\n//                       <td className=\"p-3\">₹{user.balance}</td>\n//                       <td className=\"p-3\">₹{user.totalDeposited}</td>\n//                       <td className=\"p-3\">₹{user.totalWithdrawn}</td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             </div>\n//           )}\n//         </div>\n//       </div>\n//     </Layout>\n//   );\n// }\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\nfunction AdminUserWalletsPage() {\n    _s();\n    const auth = (0,firebase_auth__WEBPACK_IMPORTED_MODULE_3__.getAuth)(_firebase__WEBPACK_IMPORTED_MODULE_4__[\"default\"]);\n    const db = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.getFirestore)(_firebase__WEBPACK_IMPORTED_MODULE_4__[\"default\"]);\n    const [users, setUsers] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [search, setSearch] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    const [currentUser, setCurrentUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [role, setRole] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AdminUserWalletsPage.useEffect\": ()=>{\n            const unsubscribe = (0,firebase_auth__WEBPACK_IMPORTED_MODULE_3__.onAuthStateChanged)(auth, {\n                \"AdminUserWalletsPage.useEffect.unsubscribe\": async (user)=>{\n                    setCurrentUser(user);\n                    if (user) {\n                        const userRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.doc)(db, 'users', user.uid);\n                        const userSnap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.getDoc)(userRef);\n                        const data = userSnap.data();\n                        const userRole = (data === null || data === void 0 ? void 0 : data.role) || 'user';\n                        setRole(userRole);\n                        if (userRole === 'admin' || userRole === 'subadmin') {\n                            await fetchUserWalletData(user.uid, userRole);\n                        } else {\n                            setUsers([]);\n                            setLoading(false);\n                        }\n                    } else {\n                        setLoading(false);\n                    }\n                }\n            }[\"AdminUserWalletsPage.useEffect.unsubscribe\"]);\n            return ({\n                \"AdminUserWalletsPage.useEffect\": ()=>unsubscribe()\n            })[\"AdminUserWalletsPage.useEffect\"];\n        }\n    }[\"AdminUserWalletsPage.useEffect\"], []);\n    //   const fetchUserWalletData = async (uid, role) => {\n    //     setLoading(true);\n    //     try {\n    //       const walletCol = collection(db, 'subwallets');\n    //       let walletQuery;\n    //       if (role === 'admin') {\n    //         walletQuery = walletCol; // all wallets\n    //       } else {\n    //         walletQuery = query(walletCol, where('subAdminId', '==', uid)); // subadmin-specific\n    //       }\n    //       const walletsSnap = await getDocs(walletQuery);\n    //       const wallets = walletsSnap.docs.map((doc) => ({\n    //         uid: doc.id,\n    //         balance: doc.data().balance || 0,\n    //         email: doc.data().email || '',\n    //       }));\n    //       const oneWeekAgo = Timestamp.fromDate(new Date(Date.now() - 7 * 24 * 60 * 60 * 1000));\n    //       // Deposit Requests (filtered for subadmin)\n    //       const depositSnap = await getDocs(\n    //         // query(\n    //         //   collection(db, 'subdepositRequests'),\n    //         //   where('status', '==', 'approved'),\n    //         //   where('createdAt', '>=', oneWeekAgo),\n    //         //   ...(role === 'subadmin' ? [where('fromUserSubAdminId', '==', uid)] : [])\n    //         // )\n    //         query(\n    //           collection(db, 'subdepositRequests'),\n    //           where('status', '==', 'approved'),\n    //           where('createdAt', '>=', oneWeekAgo),\n    //           where('fromUserSubAdminId', '==', uid)\n    //         )\n    //       );\n    //       // Withdraw Requests (filtered for subadmin)\n    // //       const withdrawSnap = await getDocs(\n    // //         // query(\n    // //         //   collection(db, 'subwithdrawRequests'),\n    // //         //   where('status', '==', 'approved'),\n    // //         //   where('createdAt', '>=', oneWeekAgo),\n    // //         //   ...(role === 'subadmin' ? [where('fromUserSubAdminId', '==', uid)] : [])\n    // //         // )\n    // //         query(\n    // //   collection(db, 'subdepositRequests'),\n    // //   where('status', '==', 'approved'),\n    // //   where('createdAt', '>=', oneWeekAgo),\n    // //   where('fromUserSubAdminId', '==', uid)\n    // // )\n    // //       );\n    // const withdrawSnap = await getDocs(\n    //   query(\n    //     collection(db, 'subwithdrawRequests'),\n    //     where('status', '==', 'approved'),\n    //     ...(role === 'subadmin' ? [where('fromUserSubAdminId', '==', uid)] : [])\n    //   )\n    // );\n    //       // Aggregate deposits\n    //       const depositMap = {};\n    //       depositSnap.forEach((doc) => {\n    //         const data = doc.data();\n    //         if (!depositMap[data.uid]) depositMap[data.uid] = 0;\n    //         depositMap[data.uid] += data.amount || 0;\n    //       });\n    //       // Aggregate withdrawals\n    //       // const withdrawMap = {};\n    //       // withdrawSnap.forEach((doc) => {\n    //       //   const data = doc.data();\n    //       //   if (!withdrawMap[data.uid]) withdrawMap[data.uid] = 0;\n    //       //   withdrawMap[data.uid] += data.amount || 0;\n    //       // });\n    // const withdrawMap = {};\n    // withdrawSnap.forEach((doc) => {\n    //   const data = doc.data();\n    //   if (!withdrawMap[data.uid]) withdrawMap[data.uid] = [];\n    //   withdrawMap[data.uid].push({\n    //     amount: data.amount,\n    //     approvedAt: data.approvedAt?.toDate(),\n    //   });\n    // });\n    //       // Final merged user data\n    //       const finalUsers = wallets.map((user) => ({\n    //         ...user,\n    //         totalDeposited: depositMap[user.uid] || 0,\n    //         // totalWithdrawn: withdrawMap[user.uid] || 0,\n    //         withdrawals: withdrawMap[user.uid] || [],\n    //       }));\n    //       setUsers(finalUsers);\n    //     } catch (error) {\n    //       console.error('Error fetching wallet data:', error);\n    //       alert('Error loading wallet data.');\n    //     }\n    //     setLoading(false);\n    //   };\n    // const exportToCSV = () => {\n    //   const headers = ['Email', 'Balance', 'Deposited (7 days)', 'Withdrawn (7 days)'];\n    //   const rows = users.map((u) => [u.email, u.balance, u.totalDeposited, u.totalWithdrawn]);\n    //   const csvContent = [headers, ...rows].map((r) => r.join(',')).join('\\n');\n    //   const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    //   const url = URL.createObjectURL(blob);\n    //   const link = document.createElement('a');\n    //   link.setAttribute('href', url);\n    //   link.setAttribute('download', 'user_wallets.csv');\n    //   document.body.appendChild(link);\n    //   link.click();\n    //   document.body.removeChild(link);\n    // };\n    // const fetchUserWalletData = async (uid, role) => {\n    //   setLoading(true);\n    //   try {\n    //     const walletCol = collection(db, 'subwallets');\n    //     let walletQuery;\n    //     if (role === 'admin') {\n    //       walletQuery = walletCol; // All wallets\n    //     } else {\n    //       walletQuery = query(walletCol, where('subAdminId', '==', uid)); // Only subadmin's users\n    //     }\n    //     const walletsSnap = await getDocs(walletQuery);\n    //     const wallets = walletsSnap.docs.map((doc) => ({\n    //       uid: doc.id,\n    //       balance: doc.data().balance || 0,\n    //       email: doc.data().email || '',\n    //     }));\n    //     const oneWeekAgo = Timestamp.fromDate(new Date(Date.now() - 7 * 24 * 60 * 60 * 1000));\n    //     // Approved deposits (last 7 days)\n    //     const depositSnap = await getDocs(\n    //       query(\n    //         collection(db, 'subdepositRequests'),\n    //         where('status', '==', 'approved'),\n    //         where('createdAt', '>=', oneWeekAgo),\n    //         ...(role === 'subadmin' ? [where('fromUserSubAdminId', '==', uid)] : [])\n    //       )\n    //     );\n    //     // Approved withdrawals (all time)\n    //     const withdrawSnap = await getDocs(\n    //       query(\n    //         collection(db, 'subwithdrawRequests'),\n    //         where('status', '==', 'approved'),\n    //         ...(role === 'subadmin' ? [where('fromUserSubAdminId', '==', uid)] : [])\n    //       )\n    //     );\n    //     // Aggregate deposits\n    //     const depositMap = {};\n    //     depositSnap.forEach((doc) => {\n    //       const data = doc.data();\n    //       if (!depositMap[data.uid]) depositMap[data.uid] = 0;\n    //       depositMap[data.uid] += data.amount || 0;\n    //     });\n    //     // Group withdrawals per user (all time, with timestamp)\n    //     const withdrawMap = {};\n    //     withdrawSnap.forEach((doc) => {\n    //       const data = doc.data();\n    //       if (!withdrawMap[data.uid]) withdrawMap[data.uid] = [];\n    //       withdrawMap[data.uid].push({\n    //         amount: data.amount,\n    //         approvedAt: data.approvedAt?.toDate(),\n    //       });\n    //     });\n    //     // Final user merge\n    //     const finalUsers = wallets.map((user) => ({\n    //       ...user,\n    //       totalDeposited: depositMap[user.uid] || 0,\n    //       withdrawals: withdrawMap[user.uid] || [],\n    //     }));\n    //     setUsers(finalUsers);\n    //   } catch (error) {\n    //     console.error('Error fetching wallet data:', error);\n    //     alert('Error loading wallet data.');\n    //   }\n    //   setLoading(false);\n    // };\n    const exportToCSV = ()=>{\n        const headers = [\n            'Email',\n            'Balance',\n            'Deposited (7 days)',\n            'Withdrawals (amount + date)'\n        ];\n        const rows = users.map((u)=>{\n            const withdrawalDetails = (u.withdrawals || []).map((w)=>{\n                var _w_approvedAt, _w_approvedAt1;\n                return \"₹\".concat(w.amount, \" on \").concat((_w_approvedAt = w.approvedAt) === null || _w_approvedAt === void 0 ? void 0 : _w_approvedAt.toLocaleDateString(), \" at \").concat((_w_approvedAt1 = w.approvedAt) === null || _w_approvedAt1 === void 0 ? void 0 : _w_approvedAt1.toLocaleTimeString([], {\n                    hour: '2-digit',\n                    minute: '2-digit'\n                }));\n            }).join(' | '); // Use pipe or semicolon to separate multiple withdrawals in one cell\n            return [\n                u.email,\n                u.balance,\n                u.totalDeposited,\n                withdrawalDetails\n            ];\n        });\n        const csvContent = [\n            headers,\n            ...rows\n        ].map((r)=>r.join(',')).join('\\n');\n        const blob = new Blob([\n            csvContent\n        ], {\n            type: 'text/csv;charset=utf-8;'\n        });\n        const url = URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.setAttribute('href', url);\n        link.setAttribute('download', 'user_wallets.csv');\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    };\n    const filteredUsers = users.filter((u)=>u.email.toLowerCase().includes(search.toLowerCase()));\n    return(// <Layout>\n    //   <div className=\"min-h-screen bg-gray-900 text-white p-8\">\n    //     <div className=\"max-w-5xl mx-auto\">\n    //       <h1 className=\"text-3xl font-bold mb-6\">\n    //         {role === 'admin'\n    //           ? 'Admin: All Subadmin & User Wallets'\n    //           : 'Subadmin: Your User Wallets'}\n    //       </h1>\n    //       <div className=\"flex items-center gap-4 mb-6\">\n    //         <input\n    //           type=\"text\"\n    //           placeholder=\"Search by email...\"\n    //           value={search}\n    //           onChange={(e) => setSearch(e.target.value)}\n    //           className=\"px-4 py-2 rounded bg-gray-800 border border-gray-600 focus:outline-none\"\n    //         />\n    //         <button\n    //           onClick={exportToCSV}\n    //           className=\"px-4 py-2 bg-yellow-500 hover:bg-yellow-600 text-black rounded font-semibold\"\n    //         >\n    //           Export CSV\n    //         </button>\n    //       </div>\n    //       {loading ? (\n    //         <p className=\"text-yellow-300\">Loading...</p>\n    //       ) : filteredUsers.length === 0 ? (\n    //         <p className=\"text-gray-400\">No users found.</p>\n    //       ) : (\n    //         <div className=\"overflow-x-auto bg-gray-800 rounded-lg shadow-xl\">\n    //           <table className=\"w-full text-left table-auto\">\n    //             <thead className=\"bg-gray-700 text-sm uppercase text-gray-300\">\n    //               <tr>\n    //                 <th className=\"p-3\">Email</th>\n    //                 <th className=\"p-3\">Balance</th>\n    //                 <th className=\"p-3\">Deposited (7d)</th>\n    //                 {/* <th className=\"p-3\">Withdrawn (7d)</th>\n    //               </tr> */}\n    //               <th className=\"p-3\">Withdrawals</th>\n    //             </thead>\n    //             <tbody>\n    //               {filteredUsers.map((user) => (\n    //                 <tr key={user.uid} className=\"border-t border-gray-700\">\n    //                   <td className=\"p-3\">{user.email || 'N/A'}</td>\n    //                   <td className=\"p-3\">₹{user.balance}</td>\n    //                   <td className=\"p-3\">₹{user.totalDeposited}</td>\n    //                   <td className=\"p-3\">₹{user.Withdrawn}</td>\n    //                 </tr>\n    //               ))}\n    //             </tbody>\n    //           </table>\n    //         </div>\n    //       )}\n    //     </div>\n    //   </div>\n    // </Layout>\n    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_Components_Layout__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"min-h-screen bg-gray-900 text-white p-8\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"max-w-5xl mx-auto\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                        className: \"text-3xl font-bold mb-6\",\n                        children: role === 'admin' ? 'Admin: All Subadmin & User Wallets' : 'Subadmin: Your User Wallets'\n                    }, void 0, false, {\n                        fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                        lineNumber: 1097,\n                        columnNumber: 7\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-center gap-4 mb-6\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                type: \"text\",\n                                placeholder: \"Search by email...\",\n                                value: search,\n                                onChange: (e)=>setSearch(e.target.value),\n                                className: \"px-4 py-2 rounded bg-gray-800 border border-gray-600 focus:outline-none\"\n                            }, void 0, false, {\n                                fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                lineNumber: 1104,\n                                columnNumber: 9\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: exportToCSV,\n                                className: \"px-4 py-2 bg-yellow-500 hover:bg-yellow-600 text-black rounded font-semibold\",\n                                children: \"Export CSV\"\n                            }, void 0, false, {\n                                fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                lineNumber: 1111,\n                                columnNumber: 9\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                        lineNumber: 1103,\n                        columnNumber: 7\n                    }, this),\n                    loading ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-yellow-300\",\n                        children: \"Loading...\"\n                    }, void 0, false, {\n                        fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                        lineNumber: 1120,\n                        columnNumber: 9\n                    }, this) : filteredUsers.length === 0 ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-gray-400\",\n                        children: \"No users found.\"\n                    }, void 0, false, {\n                        fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                        lineNumber: 1122,\n                        columnNumber: 9\n                    }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"overflow-x-auto bg-gray-800 rounded-lg shadow-xl\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"table\", {\n                            className: \"w-full text-left table-auto\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"thead\", {\n                                    className: \"bg-gray-700 text-sm uppercase text-gray-300\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"tr\", {\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                                className: \"p-3\",\n                                                children: \"Email\"\n                                            }, void 0, false, {\n                                                fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                                lineNumber: 1128,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                                className: \"p-3\",\n                                                children: \"Balance\"\n                                            }, void 0, false, {\n                                                fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                                lineNumber: 1129,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                                className: \"p-3\",\n                                                children: \"Deposited (7d)\"\n                                            }, void 0, false, {\n                                                fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                                lineNumber: 1130,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                                className: \"p-3\",\n                                                children: \"Withdrawals\"\n                                            }, void 0, false, {\n                                                fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                                lineNumber: 1131,\n                                                columnNumber: 17\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                        lineNumber: 1127,\n                                        columnNumber: 15\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                    lineNumber: 1126,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"tbody\", {\n                                    children: filteredUsers.map((user)=>{\n                                        var _user_withdrawals;\n                                        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"tr\", {\n                                            className: \"border-t border-gray-700 align-top\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                    className: \"p-3\",\n                                                    children: user.email || 'N/A'\n                                                }, void 0, false, {\n                                                    fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                                    lineNumber: 1137,\n                                                    columnNumber: 19\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                    className: \"p-3\",\n                                                    children: [\n                                                        \"₹\",\n                                                        user.balance\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                                    lineNumber: 1138,\n                                                    columnNumber: 19\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                    className: \"p-3\",\n                                                    children: [\n                                                        \"₹\",\n                                                        user.totalDeposited\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                                    lineNumber: 1139,\n                                                    columnNumber: 19\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                    className: \"p-3 text-sm\",\n                                                    children: ((_user_withdrawals = user.withdrawals) === null || _user_withdrawals === void 0 ? void 0 : _user_withdrawals.length) > 0 ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                                                        className: \"space-y-1\",\n                                                        children: user.withdrawals.map((w, idx)=>{\n                                                            var _w_approvedAt, _w_approvedAt1;\n                                                            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                                children: [\n                                                                    \"₹\",\n                                                                    w.amount,\n                                                                    \" on\",\n                                                                    ' ',\n                                                                    (_w_approvedAt = w.approvedAt) === null || _w_approvedAt === void 0 ? void 0 : _w_approvedAt.toLocaleDateString(),\n                                                                    \" at\",\n                                                                    ' ',\n                                                                    (_w_approvedAt1 = w.approvedAt) === null || _w_approvedAt1 === void 0 ? void 0 : _w_approvedAt1.toLocaleTimeString([], {\n                                                                        hour: '2-digit',\n                                                                        minute: '2-digit'\n                                                                    })\n                                                                ]\n                                                            }, idx, true, {\n                                                                fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                                                lineNumber: 1144,\n                                                                columnNumber: 27\n                                                            }, this);\n                                                        })\n                                                    }, void 0, false, {\n                                                        fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                                        lineNumber: 1142,\n                                                        columnNumber: 23\n                                                    }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                        className: \"text-gray-400\",\n                                                        children: \"No withdrawals\"\n                                                    }, void 0, false, {\n                                                        fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                                        lineNumber: 1152,\n                                                        columnNumber: 23\n                                                    }, this)\n                                                }, void 0, false, {\n                                                    fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                                    lineNumber: 1140,\n                                                    columnNumber: 19\n                                                }, this)\n                                            ]\n                                        }, user.uid, true, {\n                                            fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                            lineNumber: 1136,\n                                            columnNumber: 17\n                                        }, this);\n                                    })\n                                }, void 0, false, {\n                                    fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                    lineNumber: 1134,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                            lineNumber: 1125,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                        lineNumber: 1124,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                lineNumber: 1096,\n                columnNumber: 5\n            }, this)\n        }, void 0, false, {\n            fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n            lineNumber: 1095,\n            columnNumber: 3\n        }, this)\n    }, void 0, false, {\n        fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n        lineNumber: 1094,\n        columnNumber: 5\n    }, this));\n} // 'use client';\n // import React, { useEffect, useState } from 'react';\n // import {\n //   getFirestore,\n //   collection,\n //   getDocs,\n //   query,\n //   where,\n //   Timestamp,\n //   doc,\n //   getDoc,\n // } from 'firebase/firestore';\n // import { getAuth, onAuthStateChanged } from 'firebase/auth';\n // import firebaseApp from '@/firebase';\n // import Layout from '@/app/Components/Layout';\n // export default function Page() {\n //   const auth = getAuth(firebaseApp);\n //   const db = getFirestore(firebaseApp);\n //   const [users, setUsers] = useState([]);\n //   const [loading, setLoading] = useState(true);\n //   const [search, setSearch] = useState('');\n //   const [currentUser, setCurrentUser] = useState(null);\n //   const [role, setRole] = useState(null);\n //   useEffect(() => {\n //     const unsubscribe = onAuthStateChanged(auth, async (user) => {\n //       setCurrentUser(user);\n //       if (user) {\n //         const userRef = doc(db, 'users', user.uid);\n //         const userSnap = await getDoc(userRef);\n //         const data = userSnap.data();\n //         const userRole = data?.role || 'user';\n //         setRole(userRole);\n //         if (userRole === 'admin' || userRole === 'subadmin') {\n //           await fetchUserWalletData(user.uid, userRole);\n //         } else {\n //           setUsers([]);\n //           setLoading(false);\n //         }\n //       } else {\n //         setLoading(false);\n //       }\n //     });\n //     return () => unsubscribe();\n //   }, []);\n //   const fetchUserWalletData = async (uid, role) => {\n //     setLoading(true);\n //     try {\n //       const walletCol = collection(db, 'subwallets');\n //       const walletQuery =\n //         role === 'admin'\n //           ? walletCol\n //           : query(walletCol, where('subAdminId', '==', uid));\n //       const walletsSnap = await getDocs(walletQuery);\n //       const wallets = walletsSnap.docs.map((doc) => ({\n //         uid: doc.id,\n //         balance: doc.data().balance || 0,\n //         email: doc.data().email || '',\n //       }));\n //       const oneWeekAgo = Timestamp.fromDate(\n //         new Date(Date.now() - 7 * 24 * 60 * 60 * 1000)\n //       );\n //       const depositQuery =\n //         role === 'admin'\n //           ? query(\n //               collection(db, 'subdepositRequests'),\n //               where('status', '==', 'approved'),\n //               where('createdAt', '>=', oneWeekAgo)\n //             )\n //           : query(\n //               collection(db, 'subdepositRequests'),\n //               where('status', '==', 'approved'),\n //               where('createdAt', '>=', oneWeekAgo),\n //               where('fromUserSubAdminId', '==', uid)\n //             );\n //       const withdrawQuery =\n //         role === 'admin'\n //           ? query(\n //               collection(db, 'subwithdrawRequests'),\n //               where('status', '==', 'approved'),\n //               where('createdAt', '>=', oneWeekAgo)\n //             )\n //           : query(\n //               collection(db, 'subwithdrawRequests'),\n //               where('status', '==', 'approved'),\n //               where('createdAt', '>=', oneWeekAgo),\n //               where('fromUserSubAdminId', '==', uid)\n //             );\n //       const [depositSnap, withdrawSnap] = await Promise.all([\n //         getDocs(depositQuery),\n //         getDocs(withdrawQuery),\n //       ]);\n //       const depositMap = {};\n //       depositSnap.forEach((doc) => {\n //         const data = doc.data();\n //         if (!data.uid) return;\n //         if (!depositMap[data.uid]) depositMap[data.uid] = 0;\n //         depositMap[data.uid] += data.amount || 0;\n //       });\n //       const withdrawMap = {};\n //       withdrawSnap.forEach((doc) => {\n //         const data = doc.data();\n //         if (!data.uid) return;\n //         if (!withdrawMap[data.uid]) withdrawMap[data.uid] = 0;\n //         withdrawMap[data.uid] += data.amount || 0;\n //       });\n //       const finalUsers = wallets.map((user) => ({\n //         ...user,\n //         totalDeposited: depositMap[user.uid] || 0,\n //         totalWithdrawn: withdrawMap[user.uid] || 0,\n //       }));\n //       setUsers(finalUsers);\n //     } catch (error) {\n //       console.error('Error fetching wallet data:', error);\n //       alert('Error loading wallet data.');\n //     }\n //     setLoading(false);\n //   };\n //   const exportToCSV = () => {\n //     const headers = ['Email', 'Balance', 'Deposited (7 days)', 'Withdrawn (7 days)'];\n //     const rows = users.map((u) => [u.email, u.balance, u.totalDeposited, u.totalWithdrawn]);\n //     const csvContent = [headers, ...rows].map((r) => r.join(',')).join('\\n');\n //     const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n //     const url = URL.createObjectURL(blob);\n //     const link = document.createElement('a');\n //     link.setAttribute('href', url);\n //     link.setAttribute('download', 'user_wallets.csv');\n //     document.body.appendChild(link);\n //     link.click();\n //     document.body.removeChild(link);\n //   };\n //   const filteredUsers = users.filter((u) =>\n //     u.email.toLowerCase().includes(search.toLowerCase())\n //   );\n //   return (\n //     <Layout>\n //       <div className=\"min-h-screen bg-gray-900 text-white p-8\">\n //         <div className=\"max-w-5xl mx-auto\">\n //           <h1 className=\"text-3xl font-bold mb-6\">\n //             {role === 'admin'\n //               ? 'Admin: All Subadmin & User Wallets'\n //               : 'Subadmin: Your User Wallets'}\n //           </h1>\n //           <div className=\"flex items-center gap-4 mb-6\">\n //             <input\n //               type=\"text\"\n //               placeholder=\"Search by email...\"\n //               value={search}\n //               onChange={(e) => setSearch(e.target.value)}\n //               className=\"px-4 py-2 rounded bg-gray-800 border border-gray-600 focus:outline-none\"\n //             />\n //             <button\n //               onClick={exportToCSV}\n //               className=\"px-4 py-2 bg-yellow-500 hover:bg-yellow-600 text-black rounded font-semibold\"\n //             >\n //               Export CSV\n //             </button>\n //           </div>\n //           {loading ? (\n //             <p className=\"text-yellow-300\">Loading...</p>\n //           ) : filteredUsers.length === 0 ? (\n //             <p className=\"text-gray-400\">No users found.</p>\n //           ) : (\n //             <div className=\"overflow-x-auto bg-gray-800 rounded-lg shadow-xl\">\n //               <table className=\"w-full text-left table-auto\">\n //                 <thead className=\"bg-gray-700 text-sm uppercase text-gray-300\">\n //                   <tr>\n //                     <th className=\"p-3\">Email</th>\n //                     <th className=\"p-3\">Balance</th>\n //                     <th className=\"p-3\">Deposited (7d)</th>\n //                     <th className=\"p-3\">Withdrawn (7d)</th>\n //                   </tr>\n //                 </thead>\n //                 <tbody>\n //                   {filteredUsers.map((user) => (\n //                     <tr key={user.uid} className=\"border-t border-gray-700\">\n //                       <td className=\"p-3\">{user.email || 'N/A'}</td>\n //                       <td className=\"p-3\">₹{user.balance}</td>\n //                       <td className=\"p-3\">₹{user.totalDeposited}</td>\n //                       <td className=\"p-3\">₹{user.totalWithdrawn}</td>\n //                     </tr>\n //                   ))}\n //                 </tbody>\n //               </table>\n //             </div>\n //           )}\n //         </div>\n //       </div>\n //     </Layout>\n //   );\n // }\n_s(AdminUserWalletsPage, \"C12x+Eo2ZT+RyeBp7B7m4eg8rUQ=\");\n_c = AdminUserWalletsPage;\nvar _c;\n$RefreshReg$(_c, \"AdminUserWalletsPage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvYXBwL3VzZXItZGV0YWlscy9wYWdlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUEsZ0JBQWdCO0FBRWhCLHNEQUFzRDtBQUN0RCxXQUFXO0FBQ1gsa0JBQWtCO0FBQ2xCLGdCQUFnQjtBQUNoQixhQUFhO0FBQ2IsV0FBVztBQUNYLFdBQVc7QUFDWCwrQkFBK0I7QUFDL0Isd0NBQXdDO0FBQ3hDLGdEQUFnRDtBQUVoRCxtREFBbUQ7QUFDbkQsMENBQTBDO0FBRTFDLDRDQUE0QztBQUM1QyxrREFBa0Q7QUFDbEQsOENBQThDO0FBRTlDLHNCQUFzQjtBQUN0Qiw2QkFBNkI7QUFDN0IsWUFBWTtBQUVaLDhDQUE4QztBQUM5Qyx3QkFBd0I7QUFFeEIsWUFBWTtBQUNaLHNFQUFzRTtBQUN0RSx5REFBeUQ7QUFDekQsdUJBQXVCO0FBQ3ZCLDRDQUE0QztBQUM1Qyx5Q0FBeUM7QUFDekMsYUFBYTtBQUViLDJDQUEyQztBQUMzQyxzRkFBc0Y7QUFDdEYsV0FBVztBQUVYLDRDQUE0QztBQUM1Qyx1RkFBdUY7QUFDdkYsV0FBVztBQUVYLCtCQUErQjtBQUMvQix1Q0FBdUM7QUFDdkMsbUNBQW1DO0FBQ25DLCtEQUErRDtBQUMvRCxvREFBb0Q7QUFDcEQsWUFBWTtBQUVaLGdDQUFnQztBQUNoQyx3Q0FBd0M7QUFDeEMsbUNBQW1DO0FBQ25DLGlFQUFpRTtBQUNqRSxxREFBcUQ7QUFDckQsWUFBWTtBQUVaLG9EQUFvRDtBQUNwRCxtQkFBbUI7QUFDbkIscURBQXFEO0FBQ3JELHNEQUFzRDtBQUN0RCxhQUFhO0FBRWIsOEJBQThCO0FBQzlCLHdCQUF3QjtBQUN4QixrRUFBa0U7QUFDbEUsNkNBQTZDO0FBQzdDLFFBQVE7QUFFUix5QkFBeUI7QUFDekIsT0FBTztBQUVQLGdDQUFnQztBQUNoQyxzRUFBc0U7QUFDdEUsNkZBQTZGO0FBQzdGLDhFQUE4RTtBQUU5RSxnRkFBZ0Y7QUFDaEYsNkNBQTZDO0FBQzdDLGdEQUFn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b0c7Q0FDcEcsaUJBQWlCO0NBQ2pCLHNCQUFzQjtDQUN0QixzQ0FBc0M7Q0FDdEMseUdBQXlHO0NBQ3pHLGdCQUFnQjtDQUNoQiwyQkFBMkI7Q0FDM0Isd0JBQXdCO0NBQ3hCLG1CQUFtQjtDQUVuQix5QkFBeUI7Q0FDekIsNERBQTREO0NBQzVELCtDQUErQztDQUMvQywrREFBK0Q7Q0FDL0Qsa0JBQWtCO0NBQ2xCLGlGQUFpRjtDQUNqRixnRUFBZ0U7Q0FDaEUsa0ZBQWtGO0NBQ2xGLHlCQUF5QjtDQUN6QixxREFBcUQ7Q0FDckQsdURBQXVEO0NBQ3ZELDhEQUE4RDtDQUM5RCw4REFBOEQ7Q0FDOUQsMEJBQTBCO0NBQzFCLDJCQUEyQjtDQUMzQiwwQkFBMEI7Q0FDMUIsbURBQW1EO0NBQ25ELCtFQUErRTtDQUMvRSx1RUFBdUU7Q0FDdkUsaUVBQWlFO0NBQ2pFLHdFQUF3RTtDQUN4RSx3RUFBd0U7Q0FDeEUsNEJBQTRCO0NBQzVCLHdCQUF3QjtDQUN4QiwyQkFBMkI7Q0FDM0IseUJBQXlCO0NBQ3pCLHFCQUFxQjtDQUNyQixlQUFlO0NBQ2YsaUJBQWlCO0NBQ2pCLGVBQWU7Q0FDZixnQkFBZ0I7Q0FDaEIsT0FBTztDQUNQLElBQUk7R0F2bUJvQmhCO0tBQUFBIiwic291cmNlcyI6WyJFOlxcTmFnYWxhbmRcXGdhbWxpbmdcXG1lZ2FlbmQtbmV3XFxzcmNcXGFwcFxcYXBwXFx1c2VyLWRldGFpbHNcXHBhZ2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gJ3VzZSBjbGllbnQnO1xyXG5cclxuLy8gaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XHJcbi8vIGltcG9ydCB7XHJcbi8vICAgZ2V0RmlyZXN0b3JlLFxyXG4vLyAgIGNvbGxlY3Rpb24sXHJcbi8vICAgZ2V0RG9jcyxcclxuLy8gICBxdWVyeSxcclxuLy8gICB3aGVyZSxcclxuLy8gfSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnO1xyXG4vLyBpbXBvcnQgZmlyZWJhc2VBcHAgZnJvbSAnQC9maXJlYmFzZSc7XHJcbi8vIGltcG9ydCBMYXlvdXQgZnJvbSAnQC9hcHAvQ29tcG9uZW50cy9MYXlvdXQnO1xyXG5cclxuLy8gZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQWRtaW5Vc2VyV2FsbGV0c1BhZ2UoKSB7XHJcbi8vICAgY29uc3QgZGIgPSBnZXRGaXJlc3RvcmUoZmlyZWJhc2VBcHApO1xyXG5cclxuLy8gICBjb25zdCBbdXNlcnMsIHNldFVzZXJzXSA9IHVzZVN0YXRlKFtdKTtcclxuLy8gICBjb25zdCBbbG9hZGluZywgc2V0TG9hZGluZ10gPSB1c2VTdGF0ZSh0cnVlKTtcclxuLy8gICBjb25zdCBbc2VhcmNoLCBzZXRTZWFyY2hdID0gdXNlU3RhdGUoJycpO1xyXG5cclxuLy8gICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4vLyAgICAgZmV0Y2hVc2VyV2FsbGV0RGF0YSgpO1xyXG4vLyAgIH0sIFtdKTtcclxuXHJcbi8vICAgY29uc3QgZmV0Y2hVc2VyV2FsbGV0RGF0YSA9IGFzeW5jICgpID0+IHtcclxuLy8gICAgIHNldExvYWRpbmcodHJ1ZSk7XHJcblxyXG4vLyAgICAgdHJ5IHtcclxuLy8gICAgICAgY29uc3Qgd2FsbGV0c1NuYXAgPSBhd2FpdCBnZXREb2NzKGNvbGxlY3Rpb24oZGIsICd3YWxsZXRzJykpO1xyXG4vLyAgICAgICBjb25zdCB3YWxsZXRzID0gd2FsbGV0c1NuYXAuZG9jcy5tYXAoKGRvYykgPT4gKHtcclxuLy8gICAgICAgICB1aWQ6IGRvYy5pZCxcclxuLy8gICAgICAgICBiYWxhbmNlOiBkb2MuZGF0YSgpLmJhbGFuY2UgfHwgMCxcclxuLy8gICAgICAgICBlbWFpbDogZG9jLmRhdGEoKS5lbWFpbCB8fCAnJyxcclxuLy8gICAgICAgfSkpO1xyXG5cclxuLy8gICAgICAgY29uc3QgZGVwb3NpdFNuYXAgPSBhd2FpdCBnZXREb2NzKFxyXG4vLyAgICAgICAgIHF1ZXJ5KGNvbGxlY3Rpb24oZGIsICdkZXBvc2l0UmVxdWVzdHMnKSwgd2hlcmUoJ3N0YXR1cycsICc9PScsICdhcHByb3ZlZCcpKVxyXG4vLyAgICAgICApO1xyXG5cclxuLy8gICAgICAgY29uc3Qgd2l0aGRyYXdTbmFwID0gYXdhaXQgZ2V0RG9jcyhcclxuLy8gICAgICAgICBxdWVyeShjb2xsZWN0aW9uKGRiLCAnd2l0aGRyYXdSZXF1ZXN0cycpLCB3aGVyZSgnc3RhdHVzJywgJz09JywgJ2FwcHJvdmVkJykpXHJcbi8vICAgICAgICk7XHJcblxyXG4vLyAgICAgICBjb25zdCBkZXBvc2l0TWFwID0ge307XHJcbi8vICAgICAgIGRlcG9zaXRTbmFwLmZvckVhY2goKGRvYykgPT4ge1xyXG4vLyAgICAgICAgIGNvbnN0IGRhdGEgPSBkb2MuZGF0YSgpO1xyXG4vLyAgICAgICAgIGlmICghZGVwb3NpdE1hcFtkYXRhLnVpZF0pIGRlcG9zaXRNYXBbZGF0YS51aWRdID0gMDtcclxuLy8gICAgICAgICBkZXBvc2l0TWFwW2RhdGEudWlkXSArPSBkYXRhLmFtb3VudCB8fCAwO1xyXG4vLyAgICAgICB9KTtcclxuXHJcbi8vICAgICAgIGNvbnN0IHdpdGhkcmF3TWFwID0ge307XHJcbi8vICAgICAgIHdpdGhkcmF3U25hcC5mb3JFYWNoKChkb2MpID0+IHtcclxuLy8gICAgICAgICBjb25zdCBkYXRhID0gZG9jLmRhdGEoKTtcclxuLy8gICAgICAgICBpZiAoIXdpdGhkcmF3TWFwW2RhdGEudWlkXSkgd2l0aGRyYXdNYXBbZGF0YS51aWRdID0gMDtcclxuLy8gICAgICAgICB3aXRoZHJhd01hcFtkYXRhLnVpZF0gKz0gZGF0YS5hbW91bnQgfHwgMDtcclxuLy8gICAgICAgfSk7XHJcblxyXG4vLyAgICAgICBjb25zdCBmaW5hbFVzZXJzID0gd2FsbGV0cy5tYXAoKHVzZXIpID0+ICh7XHJcbi8vICAgICAgICAgLi4udXNlcixcclxuLy8gICAgICAgICB0b3RhbERlcG9zaXRlZDogZGVwb3NpdE1hcFt1c2VyLnVpZF0gfHwgMCxcclxuLy8gICAgICAgICB0b3RhbFdpdGhkcmF3bjogd2l0aGRyYXdNYXBbdXNlci51aWRdIHx8IDAsXHJcbi8vICAgICAgIH0pKTtcclxuXHJcbi8vICAgICAgIHNldFVzZXJzKGZpbmFsVXNlcnMpO1xyXG4vLyAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuLy8gICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgdXNlciB3YWxsZXQgZGF0YTonLCBlcnJvcik7XHJcbi8vICAgICAgIGFsZXJ0KCdFcnJvciBsb2FkaW5nIHdhbGxldCBkYXRhLicpO1xyXG4vLyAgICAgfVxyXG5cclxuLy8gICAgIHNldExvYWRpbmcoZmFsc2UpO1xyXG4vLyAgIH07XHJcblxyXG4vLyAgIGNvbnN0IGV4cG9ydFRvQ1NWID0gKCkgPT4ge1xyXG4vLyAgICAgY29uc3QgaGVhZGVycyA9IFsnRW1haWwnLCAnQmFsYW5jZScsICdEZXBvc2l0ZWQnLCAnV2l0aGRyYXduJ107XHJcbi8vICAgICBjb25zdCByb3dzID0gdXNlcnMubWFwKHUgPT4gW3UuZW1haWwsIHUuYmFsYW5jZSwgdS50b3RhbERlcG9zaXRlZCwgdS50b3RhbFdpdGhkcmF3bl0pO1xyXG4vLyAgICAgY29uc3QgY3N2Q29udGVudCA9IFtoZWFkZXJzLCAuLi5yb3dzXS5tYXAociA9PiByLmpvaW4oJywnKSkuam9pbignXFxuJyk7XHJcblxyXG4vLyAgICAgY29uc3QgYmxvYiA9IG5ldyBCbG9iKFtjc3ZDb250ZW50XSwgeyB0eXBlOiAndGV4dC9jc3Y7Y2hhcnNldD11dGYtODsnIH0pO1xyXG4vLyAgICAgY29uc3QgdXJsID0gVVJMLmNyZWF0ZU9iamVjdFVSTChibG9iKTtcclxuLy8gICAgIGNvbnN0IGxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7XHJcbi8vICAgICBsaW5rLnNldEF0dHJpYnV0ZSgnaHJlZicsIHVybCk7XHJcbi8vICAgICBsaW5rLnNldEF0dHJpYnV0ZSgnZG93bmxvYWQnLCAndXNlcl93YWxsZXRzLmNzdicpO1xyXG4vLyAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChsaW5rKTtcclxuLy8gICAgIGxpbmsuY2xpY2soKTtcclxuLy8gICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQobGluayk7XHJcbi8vICAgfTtcclxuXHJcbi8vICAgY29uc3QgZmlsdGVyZWRVc2VycyA9IHVzZXJzLmZpbHRlcih1ID0+XHJcbi8vICAgICB1LmVtYWlsLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoc2VhcmNoLnRvTG93ZXJDYXNlKCkpXHJcbi8vICAgKTtcclxuXHJcbi8vICAgcmV0dXJuIChcclxuLy8gICAgIDxMYXlvdXQ+XHJcbi8vICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWluLWgtc2NyZWVuIGJnLWdyYXktOTAwIHRleHQtd2hpdGUgcC04XCI+XHJcbi8vICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYXgtdy01eGwgbXgtYXV0b1wiPlxyXG4vLyAgICAgICAgICAgPGgxIGNsYXNzTmFtZT1cInRleHQtM3hsIGZvbnQtYm9sZCBtYi02XCI+QWRtaW46IFVzZXIgV2FsbGV0IE92ZXJ2aWV3PC9oMT5cclxuXHJcbi8vICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIGdhcC00IG1iLTZcIj5cclxuLy8gICAgICAgICAgICAgPGlucHV0XHJcbi8vICAgICAgICAgICAgICAgdHlwZT1cInRleHRcIlxyXG4vLyAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiU2VhcmNoIGJ5IGVtYWlsLi4uXCJcclxuLy8gICAgICAgICAgICAgICB2YWx1ZT17c2VhcmNofVxyXG4vLyAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gc2V0U2VhcmNoKGUudGFyZ2V0LnZhbHVlKX1cclxuLy8gICAgICAgICAgICAgICBjbGFzc05hbWU9XCJweC00IHB5LTIgcm91bmRlZCBiZy1ncmF5LTgwMCBib3JkZXIgYm9yZGVyLWdyYXktNjAwIGZvY3VzOm91dGxpbmUtbm9uZVwiXHJcbi8vICAgICAgICAgICAgIC8+XHJcbi8vICAgICAgICAgICAgIDxidXR0b25cclxuLy8gICAgICAgICAgICAgICBvbkNsaWNrPXtleHBvcnRUb0NTVn1cclxuLy8gICAgICAgICAgICAgICBjbGFzc05hbWU9XCJweC00IHB5LTIgYmcteWVsbG93LTUwMCBob3ZlcjpiZy15ZWxsb3ctNjAwIHRleHQtYmxhY2sgcm91bmRlZCBmb250LXNlbWlib2xkXCJcclxuLy8gICAgICAgICAgICAgPlxyXG4vLyAgICAgICAgICAgICAgIEV4cG9ydCBDU1ZcclxuLy8gICAgICAgICAgICAgPC9idXR0b24+XHJcbi8vICAgICAgICAgICA8L2Rpdj5cclxuXHJcbi8vICAgICAgICAgICB7bG9hZGluZyA/IChcclxuLy8gICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dC15ZWxsb3ctMzAwXCI+TG9hZGluZy4uLjwvcD5cclxuLy8gICAgICAgICAgICkgOiBmaWx0ZXJlZFVzZXJzLmxlbmd0aCA9PT0gMCA/IChcclxuLy8gICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dC1ncmF5LTQwMFwiPk5vIHVzZXJzIGZvdW5kLjwvcD5cclxuLy8gICAgICAgICAgICkgOiAoXHJcbi8vICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwib3ZlcmZsb3cteC1hdXRvIGJnLWdyYXktODAwIHJvdW5kZWQtbGcgc2hhZG93LXhsXCI+XHJcbi8vICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzTmFtZT1cInctZnVsbCB0ZXh0LWxlZnQgdGFibGUtYXV0b1wiPlxyXG4vLyAgICAgICAgICAgICAgICAgPHRoZWFkIGNsYXNzTmFtZT1cImJnLWdyYXktNzAwIHRleHQtc20gdXBwZXJjYXNlIHRleHQtZ3JheS0zMDBcIj5cclxuLy8gICAgICAgICAgICAgICAgICAgPHRyPlxyXG4vLyAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJwLTNcIj5FbWFpbDwvdGg+XHJcbi8vICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cInAtM1wiPkJhbGFuY2U8L3RoPlxyXG4vLyAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJwLTNcIj5EZXBvc2l0ZWQ8L3RoPlxyXG4vLyAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJwLTNcIj5XaXRoZHJhd248L3RoPlxyXG4vLyAgICAgICAgICAgICAgICAgICA8L3RyPlxyXG4vLyAgICAgICAgICAgICAgICAgPC90aGVhZD5cclxuLy8gICAgICAgICAgICAgICAgIDx0Ym9keT5cclxuLy8gICAgICAgICAgICAgICAgICAge2ZpbHRlcmVkVXNlcnMubWFwKCh1c2VyKSA9PiAoXHJcbi8vICAgICAgICAgICAgICAgICAgICAgPHRyIGtleT17dXNlci51aWR9IGNsYXNzTmFtZT1cImJvcmRlci10IGJvcmRlci1ncmF5LTcwMFwiPlxyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cInAtM1wiPnt1c2VyLmVtYWlsIHx8ICdOL0EnfTwvdGQ+XHJcbi8vICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3NOYW1lPVwicC0zXCI+4oK5e3VzZXIuYmFsYW5jZX08L3RkPlxyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cInAtM1wiPuKCuXt1c2VyLnRvdGFsRGVwb3NpdGVkfTwvdGQ+XHJcbi8vICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3NOYW1lPVwicC0zXCI+4oK5e3VzZXIudG90YWxXaXRoZHJhd259PC90ZD5cclxuLy8gICAgICAgICAgICAgICAgICAgICA8L3RyPlxyXG4vLyAgICAgICAgICAgICAgICAgICApKX1cclxuLy8gICAgICAgICAgICAgICAgIDwvdGJvZHk+XHJcbi8vICAgICAgICAgICAgICAgPC90YWJsZT5cclxuLy8gICAgICAgICAgICAgPC9kaXY+XHJcbi8vICAgICAgICAgICApfVxyXG4vLyAgICAgICAgIDwvZGl2PlxyXG4vLyAgICAgICA8L2Rpdj5cclxuLy8gICAgIDwvTGF5b3V0PlxyXG4vLyAgICk7XHJcbi8vIH1cclxuXHJcblxyXG4vLyAndXNlIGNsaWVudCc7XHJcblxyXG4vLyBpbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcclxuLy8gaW1wb3J0IHtcclxuLy8gICBnZXRGaXJlc3RvcmUsXHJcbi8vICAgY29sbGVjdGlvbixcclxuLy8gICBnZXREb2NzLFxyXG4vLyAgIHF1ZXJ5LFxyXG4vLyAgIHdoZXJlLFxyXG4vLyAgIFRpbWVzdGFtcCxcclxuLy8gfSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnO1xyXG4vLyBpbXBvcnQgZmlyZWJhc2VBcHAgZnJvbSAnQC9maXJlYmFzZSc7XHJcbi8vIGltcG9ydCBMYXlvdXQgZnJvbSAnQC9hcHAvQ29tcG9uZW50cy9MYXlvdXQnO1xyXG5cclxuLy8gZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQWRtaW5Vc2VyV2FsbGV0c1BhZ2UoKSB7XHJcbi8vICAgY29uc3QgZGIgPSBnZXRGaXJlc3RvcmUoZmlyZWJhc2VBcHApO1xyXG5cclxuLy8gICBjb25zdCBbdXNlcnMsIHNldFVzZXJzXSA9IHVzZVN0YXRlKFtdKTtcclxuLy8gICBjb25zdCBbbG9hZGluZywgc2V0TG9hZGluZ10gPSB1c2VTdGF0ZSh0cnVlKTtcclxuLy8gICBjb25zdCBbc2VhcmNoLCBzZXRTZWFyY2hdID0gdXNlU3RhdGUoJycpO1xyXG5cclxuLy8gICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4vLyAgICAgZmV0Y2hVc2VyV2FsbGV0RGF0YSgpO1xyXG4vLyAgIH0sIFtdKTtcclxuXHJcbi8vICAgY29uc3QgZmV0Y2hVc2VyV2FsbGV0RGF0YSA9IGFzeW5jICgpID0+IHtcclxuLy8gICAgIHNldExvYWRpbmcodHJ1ZSk7XHJcblxyXG4vLyAgICAgdHJ5IHtcclxuLy8gICAgICAgY29uc3Qgd2FsbGV0c1NuYXAgPSBhd2FpdCBnZXREb2NzKGNvbGxlY3Rpb24oZGIsICd3YWxsZXRzJykpO1xyXG4vLyAgICAgICBjb25zdCB3YWxsZXRzID0gd2FsbGV0c1NuYXAuZG9jcy5tYXAoKGRvYykgPT4gKHtcclxuLy8gICAgICAgICB1aWQ6IGRvYy5pZCxcclxuLy8gICAgICAgICBiYWxhbmNlOiBkb2MuZGF0YSgpLmJhbGFuY2UgfHwgMCxcclxuLy8gICAgICAgICBlbWFpbDogZG9jLmRhdGEoKS5lbWFpbCB8fCAnJyxcclxuLy8gICAgICAgfSkpO1xyXG5cclxuLy8gICAgICAgY29uc3Qgb25lV2Vla0FnbyA9IFRpbWVzdGFtcC5mcm9tRGF0ZShuZXcgRGF0ZShEYXRlLm5vdygpIC0gNyAqIDI0ICogNjAgKiA2MCAqIDEwMDApKTtcclxuXHJcbi8vICAgICAgIGNvbnN0IGRlcG9zaXRTbmFwID0gYXdhaXQgZ2V0RG9jcyhcclxuLy8gICAgICAgICBxdWVyeShcclxuLy8gICAgICAgICAgIGNvbGxlY3Rpb24oZGIsICdkZXBvc2l0UmVxdWVzdHMnKSxcclxuLy8gICAgICAgICAgIHdoZXJlKCdzdGF0dXMnLCAnPT0nLCAnYXBwcm92ZWQnKSxcclxuLy8gICAgICAgICAgIHdoZXJlKCdjcmVhdGVkQXQnLCAnPj0nLCBvbmVXZWVrQWdvKVxyXG4vLyAgICAgICAgIClcclxuLy8gICAgICAgKTtcclxuXHJcbi8vICAgICAgIGNvbnN0IHdpdGhkcmF3U25hcCA9IGF3YWl0IGdldERvY3MoXHJcbi8vICAgICAgICAgcXVlcnkoXHJcbi8vICAgICAgICAgICBjb2xsZWN0aW9uKGRiLCAnd2l0aGRyYXdSZXF1ZXN0cycpLFxyXG4vLyAgICAgICAgICAgd2hlcmUoJ3N0YXR1cycsICc9PScsICdhcHByb3ZlZCcpLFxyXG4vLyAgICAgICAgICAgd2hlcmUoJ2NyZWF0ZWRBdCcsICc+PScsIG9uZVdlZWtBZ28pXHJcbi8vICAgICAgICAgKVxyXG4vLyAgICAgICApO1xyXG5cclxuLy8gICAgICAgY29uc3QgZGVwb3NpdE1hcCA9IHt9O1xyXG4vLyAgICAgICBkZXBvc2l0U25hcC5mb3JFYWNoKChkb2MpID0+IHtcclxuLy8gICAgICAgICBjb25zdCBkYXRhID0gZG9jLmRhdGEoKTtcclxuLy8gICAgICAgICBpZiAoIWRlcG9zaXRNYXBbZGF0YS51aWRdKSBkZXBvc2l0TWFwW2RhdGEudWlkXSA9IDA7XHJcbi8vICAgICAgICAgZGVwb3NpdE1hcFtkYXRhLnVpZF0gKz0gZGF0YS5hbW91bnQgfHwgMDtcclxuLy8gICAgICAgfSk7XHJcblxyXG4vLyAgICAgICBjb25zdCB3aXRoZHJhd01hcCA9IHt9O1xyXG4vLyAgICAgICB3aXRoZHJhd1NuYXAuZm9yRWFjaCgoZG9jKSA9PiB7XHJcbi8vICAgICAgICAgY29uc3QgZGF0YSA9IGRvYy5kYXRhKCk7XHJcbi8vICAgICAgICAgaWYgKCF3aXRoZHJhd01hcFtkYXRhLnVpZF0pIHdpdGhkcmF3TWFwW2RhdGEudWlkXSA9IDA7XHJcbi8vICAgICAgICAgd2l0aGRyYXdNYXBbZGF0YS51aWRdICs9IGRhdGEuYW1vdW50IHx8IDA7XHJcbi8vICAgICAgIH0pO1xyXG5cclxuLy8gICAgICAgY29uc3QgZmluYWxVc2VycyA9IHdhbGxldHMubWFwKCh1c2VyKSA9PiAoe1xyXG4vLyAgICAgICAgIC4uLnVzZXIsXHJcbi8vICAgICAgICAgdG90YWxEZXBvc2l0ZWQ6IGRlcG9zaXRNYXBbdXNlci51aWRdIHx8IDAsXHJcbi8vICAgICAgICAgdG90YWxXaXRoZHJhd246IHdpdGhkcmF3TWFwW3VzZXIudWlkXSB8fCAwLFxyXG4vLyAgICAgICB9KSk7XHJcblxyXG4vLyAgICAgICBzZXRVc2VycyhmaW5hbFVzZXJzKTtcclxuLy8gICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbi8vICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIHVzZXIgd2FsbGV0IGRhdGE6JywgZXJyb3IpO1xyXG4vLyAgICAgICBhbGVydCgnRXJyb3IgbG9hZGluZyB3YWxsZXQgZGF0YS4nKTtcclxuLy8gICAgIH1cclxuXHJcbi8vICAgICBzZXRMb2FkaW5nKGZhbHNlKTtcclxuLy8gICB9O1xyXG5cclxuLy8gICBjb25zdCBleHBvcnRUb0NTViA9ICgpID0+IHtcclxuLy8gICAgIGNvbnN0IGhlYWRlcnMgPSBbJ0VtYWlsJywgJ0JhbGFuY2UnLCAnRGVwb3NpdGVkICg3IGRheXMpJywgJ1dpdGhkcmF3biAoNyBkYXlzKSddO1xyXG4vLyAgICAgY29uc3Qgcm93cyA9IHVzZXJzLm1hcCh1ID0+IFt1LmVtYWlsLCB1LmJhbGFuY2UsIHUudG90YWxEZXBvc2l0ZWQsIHUudG90YWxXaXRoZHJhd25dKTtcclxuLy8gICAgIGNvbnN0IGNzdkNvbnRlbnQgPSBbaGVhZGVycywgLi4ucm93c10ubWFwKHIgPT4gci5qb2luKCcsJykpLmpvaW4oJ1xcbicpO1xyXG5cclxuLy8gICAgIGNvbnN0IGJsb2IgPSBuZXcgQmxvYihbY3N2Q29udGVudF0sIHsgdHlwZTogJ3RleHQvY3N2O2NoYXJzZXQ9dXRmLTg7JyB9KTtcclxuLy8gICAgIGNvbnN0IHVybCA9IFVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYik7XHJcbi8vICAgICBjb25zdCBsaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xyXG4vLyAgICAgbGluay5zZXRBdHRyaWJ1dGUoJ2hyZWYnLCB1cmwpO1xyXG4vLyAgICAgbGluay5zZXRBdHRyaWJ1dGUoJ2Rvd25sb2FkJywgJ3VzZXJfd2FsbGV0cy5jc3YnKTtcclxuLy8gICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQobGluayk7XHJcbi8vICAgICBsaW5rLmNsaWNrKCk7XHJcbi8vICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGxpbmspO1xyXG4vLyAgIH07XHJcblxyXG4vLyAgIGNvbnN0IGZpbHRlcmVkVXNlcnMgPSB1c2Vycy5maWx0ZXIodSA9PlxyXG4vLyAgICAgdS5lbWFpbC50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKHNlYXJjaC50b0xvd2VyQ2FzZSgpKVxyXG4vLyAgICk7XHJcblxyXG4vLyAgIHJldHVybiAoXHJcbi8vICAgICA8TGF5b3V0PlxyXG4vLyAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1pbi1oLXNjcmVlbiBiZy1ncmF5LTkwMCB0ZXh0LXdoaXRlIHAtOFwiPlxyXG4vLyAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWF4LXctNXhsIG14LWF1dG9cIj5cclxuLy8gICAgICAgICAgIDxoMSBjbGFzc05hbWU9XCJ0ZXh0LTN4bCBmb250LWJvbGQgbWItNlwiPkFkbWluOiBVc2VyIFdhbGxldCBPdmVydmlldzwvaDE+XHJcblxyXG4vLyAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlciBnYXAtNCBtYi02XCI+XHJcbi8vICAgICAgICAgICAgIDxpbnB1dFxyXG4vLyAgICAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcclxuLy8gICAgICAgICAgICAgICBwbGFjZWhvbGRlcj1cIlNlYXJjaCBieSBlbWFpbC4uLlwiXHJcbi8vICAgICAgICAgICAgICAgdmFsdWU9e3NlYXJjaH1cclxuLy8gICAgICAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHNldFNlYXJjaChlLnRhcmdldC52YWx1ZSl9XHJcbi8vICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwicHgtNCBweS0yIHJvdW5kZWQgYmctZ3JheS04MDAgYm9yZGVyIGJvcmRlci1ncmF5LTYwMCBmb2N1czpvdXRsaW5lLW5vbmVcIlxyXG4vLyAgICAgICAgICAgICAvPlxyXG4vLyAgICAgICAgICAgICA8YnV0dG9uXHJcbi8vICAgICAgICAgICAgICAgb25DbGljaz17ZXhwb3J0VG9DU1Z9XHJcbi8vICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwicHgtNCBweS0yIGJnLXllbGxvdy01MDAgaG92ZXI6YmcteWVsbG93LTYwMCB0ZXh0LWJsYWNrIHJvdW5kZWQgZm9udC1zZW1pYm9sZFwiXHJcbi8vICAgICAgICAgICAgID5cclxuLy8gICAgICAgICAgICAgICBFeHBvcnQgQ1NWXHJcbi8vICAgICAgICAgICAgIDwvYnV0dG9uPlxyXG4vLyAgICAgICAgICAgPC9kaXY+XHJcblxyXG4vLyAgICAgICAgICAge2xvYWRpbmcgPyAoXHJcbi8vICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cInRleHQteWVsbG93LTMwMFwiPkxvYWRpbmcuLi48L3A+XHJcbi8vICAgICAgICAgICApIDogZmlsdGVyZWRVc2Vycy5sZW5ndGggPT09IDAgPyAoXHJcbi8vICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cInRleHQtZ3JheS00MDBcIj5ObyB1c2VycyBmb3VuZC48L3A+XHJcbi8vICAgICAgICAgICApIDogKFxyXG4vLyAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm92ZXJmbG93LXgtYXV0byBiZy1ncmF5LTgwMCByb3VuZGVkLWxnIHNoYWRvdy14bFwiPlxyXG4vLyAgICAgICAgICAgICAgIDx0YWJsZSBjbGFzc05hbWU9XCJ3LWZ1bGwgdGV4dC1sZWZ0IHRhYmxlLWF1dG9cIj5cclxuLy8gICAgICAgICAgICAgICAgIDx0aGVhZCBjbGFzc05hbWU9XCJiZy1ncmF5LTcwMCB0ZXh0LXNtIHVwcGVyY2FzZSB0ZXh0LWdyYXktMzAwXCI+XHJcbi8vICAgICAgICAgICAgICAgICAgIDx0cj5cclxuLy8gICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3NOYW1lPVwicC0zXCI+RW1haWw8L3RoPlxyXG4vLyAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJwLTNcIj5CYWxhbmNlPC90aD5cclxuLy8gICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3NOYW1lPVwicC0zXCI+RGVwb3NpdGVkICg3ZCk8L3RoPlxyXG4vLyAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJwLTNcIj5XaXRoZHJhd24gKDdkKTwvdGg+XHJcbi8vICAgICAgICAgICAgICAgICAgIDwvdHI+XHJcbi8vICAgICAgICAgICAgICAgICA8L3RoZWFkPlxyXG4vLyAgICAgICAgICAgICAgICAgPHRib2R5PlxyXG4vLyAgICAgICAgICAgICAgICAgICB7ZmlsdGVyZWRVc2Vycy5tYXAoKHVzZXIpID0+IChcclxuLy8gICAgICAgICAgICAgICAgICAgICA8dHIga2V5PXt1c2VyLnVpZH0gY2xhc3NOYW1lPVwiYm9yZGVyLXQgYm9yZGVyLWdyYXktNzAwXCI+XHJcbi8vICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3NOYW1lPVwicC0zXCI+e3VzZXIuZW1haWwgfHwgJ04vQSd9PC90ZD5cclxuLy8gICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJwLTNcIj7igrl7dXNlci5iYWxhbmNlfTwvdGQ+XHJcbi8vICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3NOYW1lPVwicC0zXCI+4oK5e3VzZXIudG90YWxEZXBvc2l0ZWR9PC90ZD5cclxuLy8gICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJwLTNcIj7igrl7dXNlci50b3RhbFdpdGhkcmF3bn08L3RkPlxyXG4vLyAgICAgICAgICAgICAgICAgICAgIDwvdHI+XHJcbi8vICAgICAgICAgICAgICAgICAgICkpfVxyXG4vLyAgICAgICAgICAgICAgICAgPC90Ym9keT5cclxuLy8gICAgICAgICAgICAgICA8L3RhYmxlPlxyXG4vLyAgICAgICAgICAgICA8L2Rpdj5cclxuLy8gICAgICAgICAgICl9XHJcbi8vICAgICAgICAgPC9kaXY+XHJcbi8vICAgICAgIDwvZGl2PlxyXG4vLyAgICAgPC9MYXlvdXQ+XHJcbi8vICAgKTtcclxuLy8gfVxyXG5cclxuXHJcbi8vICd1c2UgY2xpZW50JztcclxuXHJcbi8vIGltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xyXG4vLyBpbXBvcnQge1xyXG4vLyAgIGdldEZpcmVzdG9yZSxcclxuLy8gICBjb2xsZWN0aW9uLFxyXG4vLyAgIGdldERvY3MsXHJcbi8vICAgcXVlcnksXHJcbi8vICAgd2hlcmUsXHJcbi8vICAgVGltZXN0YW1wLFxyXG4vLyB9IGZyb20gJ2ZpcmViYXNlL2ZpcmVzdG9yZSc7XHJcbi8vIGltcG9ydCBmaXJlYmFzZUFwcCBmcm9tICdAL2ZpcmViYXNlJztcclxuLy8gaW1wb3J0IExheW91dCBmcm9tICdAL2FwcC9Db21wb25lbnRzL0xheW91dCc7XHJcblxyXG4vLyBleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBBZG1pblVzZXJXYWxsZXRzUGFnZSgpIHtcclxuLy8gICBjb25zdCBkYiA9IGdldEZpcmVzdG9yZShmaXJlYmFzZUFwcCk7XHJcblxyXG4vLyAgIGNvbnN0IFt1c2Vycywgc2V0VXNlcnNdID0gdXNlU3RhdGUoW10pO1xyXG4vLyAgIGNvbnN0IFtsb2FkaW5nLCBzZXRMb2FkaW5nXSA9IHVzZVN0YXRlKHRydWUpO1xyXG4vLyAgIGNvbnN0IFtzZWFyY2gsIHNldFNlYXJjaF0gPSB1c2VTdGF0ZSgnJyk7XHJcbi8vICAgY29uc3QgW3NlbGVjdGVkVXNlciwgc2V0U2VsZWN0ZWRVc2VyXSA9IHVzZVN0YXRlKG51bGwpO1xyXG4vLyAgIGNvbnN0IFtoaXN0b3J5LCBzZXRIaXN0b3J5XSA9IHVzZVN0YXRlKHsgZGVwb3NpdHM6IFtdLCB3aXRoZHJhd2FsczogW10gfSk7XHJcbi8vICAgY29uc3QgW2hpc3RvcnlMb2FkaW5nLCBzZXRIaXN0b3J5TG9hZGluZ10gPSB1c2VTdGF0ZShmYWxzZSk7XHJcblxyXG4vLyAgIHVzZUVmZmVjdCgoKSA9PiB7XHJcbi8vICAgICBmZXRjaFVzZXJXYWxsZXREYXRhKCk7XHJcbi8vICAgfSwgW10pO1xyXG5cclxuLy8gICBjb25zdCBmZXRjaFVzZXJXYWxsZXREYXRhID0gYXN5bmMgKCkgPT4ge1xyXG4vLyAgICAgc2V0TG9hZGluZyh0cnVlKTtcclxuXHJcbi8vICAgICB0cnkge1xyXG4vLyAgICAgICBjb25zdCB3YWxsZXRzU25hcCA9IGF3YWl0IGdldERvY3MoY29sbGVjdGlvbihkYiwgJ3dhbGxldHMnKSk7XHJcbi8vICAgICAgIGNvbnN0IHdhbGxldHMgPSB3YWxsZXRzU25hcC5kb2NzLm1hcCgoZG9jKSA9PiAoe1xyXG4vLyAgICAgICAgIHVpZDogZG9jLmlkLFxyXG4vLyAgICAgICAgIGJhbGFuY2U6IGRvYy5kYXRhKCkuYmFsYW5jZSB8fCAwLFxyXG4vLyAgICAgICAgIGVtYWlsOiBkb2MuZGF0YSgpLmVtYWlsIHx8ICcnLFxyXG4vLyAgICAgICB9KSk7XHJcblxyXG4vLyAgICAgICBjb25zdCBvbmVXZWVrQWdvID0gVGltZXN0YW1wLmZyb21EYXRlKG5ldyBEYXRlKERhdGUubm93KCkgLSA3ICogMjQgKiA2MCAqIDYwICogMTAwMCkpO1xyXG5cclxuLy8gICAgICAgY29uc3QgZGVwb3NpdFNuYXAgPSBhd2FpdCBnZXREb2NzKFxyXG4vLyAgICAgICAgIHF1ZXJ5KFxyXG4vLyAgICAgICAgICAgY29sbGVjdGlvbihkYiwgJ2RlcG9zaXRSZXF1ZXN0cycpLFxyXG4vLyAgICAgICAgICAgd2hlcmUoJ3N0YXR1cycsICc9PScsICdhcHByb3ZlZCcpLFxyXG4vLyAgICAgICAgICAgd2hlcmUoJ2NyZWF0ZWRBdCcsICc+PScsIG9uZVdlZWtBZ28pXHJcbi8vICAgICAgICAgKVxyXG4vLyAgICAgICApO1xyXG5cclxuLy8gICAgICAgY29uc3Qgd2l0aGRyYXdTbmFwID0gYXdhaXQgZ2V0RG9jcyhcclxuLy8gICAgICAgICBxdWVyeShcclxuLy8gICAgICAgICAgIGNvbGxlY3Rpb24oZGIsICd3aXRoZHJhd1JlcXVlc3RzJyksXHJcbi8vICAgICAgICAgICB3aGVyZSgnc3RhdHVzJywgJz09JywgJ2FwcHJvdmVkJyksXHJcbi8vICAgICAgICAgICB3aGVyZSgnY3JlYXRlZEF0JywgJz49Jywgb25lV2Vla0FnbylcclxuLy8gICAgICAgICApXHJcbi8vICAgICAgICk7XHJcblxyXG4vLyAgICAgICBjb25zdCBkZXBvc2l0TWFwID0ge307XHJcbi8vICAgICAgIGRlcG9zaXRTbmFwLmZvckVhY2goKGRvYykgPT4ge1xyXG4vLyAgICAgICAgIGNvbnN0IGRhdGEgPSBkb2MuZGF0YSgpO1xyXG4vLyAgICAgICAgIGlmICghZGVwb3NpdE1hcFtkYXRhLnVpZF0pIGRlcG9zaXRNYXBbZGF0YS51aWRdID0gMDtcclxuLy8gICAgICAgICBkZXBvc2l0TWFwW2RhdGEudWlkXSArPSBkYXRhLmFtb3VudCB8fCAwO1xyXG4vLyAgICAgICB9KTtcclxuXHJcbi8vICAgICAgIGNvbnN0IHdpdGhkcmF3TWFwID0ge307XHJcbi8vICAgICAgIHdpdGhkcmF3U25hcC5mb3JFYWNoKChkb2MpID0+IHtcclxuLy8gICAgICAgICBjb25zdCBkYXRhID0gZG9jLmRhdGEoKTtcclxuLy8gICAgICAgICBpZiAoIXdpdGhkcmF3TWFwW2RhdGEudWlkXSkgd2l0aGRyYXdNYXBbZGF0YS51aWRdID0gMDtcclxuLy8gICAgICAgICB3aXRoZHJhd01hcFtkYXRhLnVpZF0gKz0gZGF0YS5hbW91bnQgfHwgMDtcclxuLy8gICAgICAgfSk7XHJcblxyXG4vLyAgICAgICBjb25zdCBmaW5hbFVzZXJzID0gd2FsbGV0cy5tYXAoKHVzZXIpID0+ICh7XHJcbi8vICAgICAgICAgLi4udXNlcixcclxuLy8gICAgICAgICB0b3RhbERlcG9zaXRlZDogZGVwb3NpdE1hcFt1c2VyLnVpZF0gfHwgMCxcclxuLy8gICAgICAgICB0b3RhbFdpdGhkcmF3bjogd2l0aGRyYXdNYXBbdXNlci51aWRdIHx8IDAsXHJcbi8vICAgICAgIH0pKTtcclxuXHJcbi8vICAgICAgIHNldFVzZXJzKGZpbmFsVXNlcnMpO1xyXG4vLyAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuLy8gICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgdXNlciB3YWxsZXQgZGF0YTonLCBlcnJvcik7XHJcbi8vICAgICAgIGFsZXJ0KCdFcnJvciBsb2FkaW5nIHdhbGxldCBkYXRhLicpO1xyXG4vLyAgICAgfVxyXG5cclxuLy8gICAgIHNldExvYWRpbmcoZmFsc2UpO1xyXG4vLyAgIH07XHJcblxyXG4vLyAgIGNvbnN0IGZldGNoVXNlckhpc3RvcnkgPSBhc3luYyAodWlkKSA9PiB7XHJcbi8vICAgICBzZXRIaXN0b3J5TG9hZGluZyh0cnVlKTtcclxuLy8gICAgIHRyeSB7XHJcbi8vICAgICAgIGNvbnN0IGRlcG9zaXRzU25hcCA9IGF3YWl0IGdldERvY3MoXHJcbi8vICAgICAgICAgcXVlcnkoY29sbGVjdGlvbihkYiwgJ2RlcG9zaXRSZXF1ZXN0cycpLCB3aGVyZSgndWlkJywgJz09JywgdWlkKSlcclxuLy8gICAgICAgKTtcclxuLy8gICAgICAgY29uc3Qgd2l0aGRyYXdhbHNTbmFwID0gYXdhaXQgZ2V0RG9jcyhcclxuLy8gICAgICAgICBxdWVyeShjb2xsZWN0aW9uKGRiLCAnd2l0aGRyYXdSZXF1ZXN0cycpLCB3aGVyZSgndWlkJywgJz09JywgdWlkKSlcclxuLy8gICAgICAgKTtcclxuXHJcbi8vICAgICAgIGNvbnN0IGRlcG9zaXRzID0gZGVwb3NpdHNTbmFwLmRvY3MubWFwKChkb2MpID0+ICh7IGlkOiBkb2MuaWQsIC4uLmRvYy5kYXRhKCkgfSkpO1xyXG4vLyAgICAgICBjb25zdCB3aXRoZHJhd2FscyA9IHdpdGhkcmF3YWxzU25hcC5kb2NzLm1hcCgoZG9jKSA9PiAoeyBpZDogZG9jLmlkLCAuLi5kb2MuZGF0YSgpIH0pKTtcclxuXHJcbi8vICAgICAgIHNldEhpc3RvcnkoeyBkZXBvc2l0cywgd2l0aGRyYXdhbHMgfSk7XHJcbi8vICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4vLyAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBsb2FkaW5nIGhpc3Rvcnk6JywgZXJyb3IpO1xyXG4vLyAgICAgfVxyXG4vLyAgICAgc2V0SGlzdG9yeUxvYWRpbmcoZmFsc2UpO1xyXG4vLyAgIH07XHJcblxyXG4vLyAgIGNvbnN0IGV4cG9ydFRvQ1NWID0gKCkgPT4ge1xyXG4vLyAgICAgY29uc3QgaGVhZGVycyA9IFsnRW1haWwnLCAnQmFsYW5jZScsICdEZXBvc2l0ZWQgKDcgZGF5cyknLCAnV2l0aGRyYXduICg3IGRheXMpJ107XHJcbi8vICAgICBjb25zdCByb3dzID0gdXNlcnMubWFwKHUgPT4gW3UuZW1haWwsIHUuYmFsYW5jZSwgdS50b3RhbERlcG9zaXRlZCwgdS50b3RhbFdpdGhkcmF3bl0pO1xyXG4vLyAgICAgY29uc3QgY3N2Q29udGVudCA9IFtoZWFkZXJzLCAuLi5yb3dzXS5tYXAociA9PiByLmpvaW4oJywnKSkuam9pbignXFxuJyk7XHJcblxyXG4vLyAgICAgY29uc3QgYmxvYiA9IG5ldyBCbG9iKFtjc3ZDb250ZW50XSwgeyB0eXBlOiAndGV4dC9jc3Y7Y2hhcnNldD11dGYtODsnIH0pO1xyXG4vLyAgICAgY29uc3QgdXJsID0gVVJMLmNyZWF0ZU9iamVjdFVSTChibG9iKTtcclxuLy8gICAgIGNvbnN0IGxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7XHJcbi8vICAgICBsaW5rLnNldEF0dHJpYnV0ZSgnaHJlZicsIHVybCk7XHJcbi8vICAgICBsaW5rLnNldEF0dHJpYnV0ZSgnZG93bmxvYWQnLCAndXNlcl93YWxsZXRzLmNzdicpO1xyXG4vLyAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChsaW5rKTtcclxuLy8gICAgIGxpbmsuY2xpY2soKTtcclxuLy8gICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQobGluayk7XHJcbi8vICAgfTtcclxuXHJcbi8vICAgY29uc3QgZmlsdGVyZWRVc2VycyA9IHVzZXJzLmZpbHRlcih1ID0+XHJcbi8vICAgICB1LmVtYWlsLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoc2VhcmNoLnRvTG93ZXJDYXNlKCkpXHJcbi8vICAgKTtcclxuXHJcbi8vICAgcmV0dXJuIChcclxuLy8gICAgIDxMYXlvdXQ+XHJcbi8vICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWluLWgtc2NyZWVuIGJnLWdyYXktOTAwIHRleHQtd2hpdGUgcC04XCI+XHJcbi8vICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYXgtdy02eGwgbXgtYXV0b1wiPlxyXG4vLyAgICAgICAgICAgPGgxIGNsYXNzTmFtZT1cInRleHQtM3hsIGZvbnQtYm9sZCBtYi02XCI+QWRtaW46IFVzZXIgV2FsbGV0IE92ZXJ2aWV3PC9oMT5cclxuXHJcbi8vICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIGdhcC00IG1iLTZcIj5cclxuLy8gICAgICAgICAgICAgPGlucHV0XHJcbi8vICAgICAgICAgICAgICAgdHlwZT1cInRleHRcIlxyXG4vLyAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiU2VhcmNoIGJ5IGVtYWlsLi4uXCJcclxuLy8gICAgICAgICAgICAgICB2YWx1ZT17c2VhcmNofVxyXG4vLyAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gc2V0U2VhcmNoKGUudGFyZ2V0LnZhbHVlKX1cclxuLy8gICAgICAgICAgICAgICBjbGFzc05hbWU9XCJweC00IHB5LTIgcm91bmRlZCBiZy1ncmF5LTgwMCBib3JkZXIgYm9yZGVyLWdyYXktNjAwIGZvY3VzOm91dGxpbmUtbm9uZVwiXHJcbi8vICAgICAgICAgICAgIC8+XHJcbi8vICAgICAgICAgICAgIDxidXR0b25cclxuLy8gICAgICAgICAgICAgICBvbkNsaWNrPXtleHBvcnRUb0NTVn1cclxuLy8gICAgICAgICAgICAgICBjbGFzc05hbWU9XCJweC00IHB5LTIgYmcteWVsbG93LTUwMCBob3ZlcjpiZy15ZWxsb3ctNjAwIHRleHQtYmxhY2sgcm91bmRlZCBmb250LXNlbWlib2xkXCJcclxuLy8gICAgICAgICAgICAgPlxyXG4vLyAgICAgICAgICAgICAgIEV4cG9ydCBDU1ZcclxuLy8gICAgICAgICAgICAgPC9idXR0b24+XHJcbi8vICAgICAgICAgICA8L2Rpdj5cclxuXHJcbi8vICAgICAgICAgICB7bG9hZGluZyA/IChcclxuLy8gICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dC15ZWxsb3ctMzAwXCI+TG9hZGluZy4uLjwvcD5cclxuLy8gICAgICAgICAgICkgOiBmaWx0ZXJlZFVzZXJzLmxlbmd0aCA9PT0gMCA/IChcclxuLy8gICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dC1ncmF5LTQwMFwiPk5vIHVzZXJzIGZvdW5kLjwvcD5cclxuLy8gICAgICAgICAgICkgOiAoXHJcbi8vICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwib3ZlcmZsb3cteC1hdXRvIGJnLWdyYXktODAwIHJvdW5kZWQtbGcgc2hhZG93LXhsXCI+XHJcbi8vICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzTmFtZT1cInctZnVsbCB0ZXh0LWxlZnQgdGFibGUtYXV0b1wiPlxyXG4vLyAgICAgICAgICAgICAgICAgPHRoZWFkIGNsYXNzTmFtZT1cImJnLWdyYXktNzAwIHRleHQtc20gdXBwZXJjYXNlIHRleHQtZ3JheS0zMDBcIj5cclxuLy8gICAgICAgICAgICAgICAgICAgPHRyPlxyXG4vLyAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJwLTNcIj5FbWFpbDwvdGg+XHJcbi8vICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cInAtM1wiPkJhbGFuY2U8L3RoPlxyXG4vLyAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJwLTNcIj5EZXBvc2l0ZWQgKDdkKTwvdGg+XHJcbi8vICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cInAtM1wiPldpdGhkcmF3biAoN2QpPC90aD5cclxuLy8gICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3NOYW1lPVwicC0zXCI+SGlzdG9yeTwvdGg+XHJcbi8vICAgICAgICAgICAgICAgICAgIDwvdHI+XHJcbi8vICAgICAgICAgICAgICAgICA8L3RoZWFkPlxyXG4vLyAgICAgICAgICAgICAgICAgPHRib2R5PlxyXG4vLyAgICAgICAgICAgICAgICAgICB7ZmlsdGVyZWRVc2Vycy5tYXAoKHVzZXIpID0+IChcclxuLy8gICAgICAgICAgICAgICAgICAgICA8dHIga2V5PXt1c2VyLnVpZH0gY2xhc3NOYW1lPVwiYm9yZGVyLXQgYm9yZGVyLWdyYXktNzAwXCI+XHJcbi8vICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3NOYW1lPVwicC0zXCI+e3VzZXIuZW1haWwgfHwgJ04vQSd9PC90ZD5cclxuLy8gICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJwLTNcIj7igrl7dXNlci5iYWxhbmNlfTwvdGQ+XHJcbi8vICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3NOYW1lPVwicC0zXCI+4oK5e3VzZXIudG90YWxEZXBvc2l0ZWR9PC90ZD5cclxuLy8gICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJwLTNcIj7igrl7dXNlci50b3RhbFdpdGhkcmF3bn08L3RkPlxyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cInAtM1wiPlxyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uXHJcbi8vICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwidGV4dC1ibHVlLTQwMCB1bmRlcmxpbmVcIlxyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcclxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldFNlbGVjdGVkVXNlcih1c2VyKTtcclxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZldGNoVXNlckhpc3RvcnkodXNlci51aWQpO1xyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICAgIH19XHJcbi8vICAgICAgICAgICAgICAgICAgICAgICAgID5cclxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgICBWaWV3XHJcbi8vICAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cclxuLy8gICAgICAgICAgICAgICAgICAgICA8L3RyPlxyXG4vLyAgICAgICAgICAgICAgICAgICApKX1cclxuLy8gICAgICAgICAgICAgICAgIDwvdGJvZHk+XHJcbi8vICAgICAgICAgICAgICAgPC90YWJsZT5cclxuLy8gICAgICAgICAgICAgPC9kaXY+XHJcbi8vICAgICAgICAgICApfVxyXG5cclxuLy8gICAgICAgICAgIHsvKiBUcmFuc2FjdGlvbiBoaXN0b3J5IG1vZGFsICovfVxyXG4vLyAgICAgICAgICAge3NlbGVjdGVkVXNlciAmJiAoXHJcbi8vICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZml4ZWQgaW5zZXQtMCBiZy1ibGFjayBiZy1vcGFjaXR5LTUwIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIHotNTBcIj5cclxuLy8gICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJnLWdyYXktOTAwIHAtNiByb3VuZGVkLWxnIHctZnVsbCBtYXgtdy0zeGwgcmVsYXRpdmVcIj5cclxuLy8gICAgICAgICAgICAgICAgIDxoMiBjbGFzc05hbWU9XCJ0ZXh0LTJ4bCBmb250LWJvbGQgbWItNFwiPlxyXG4vLyAgICAgICAgICAgICAgICAgICB7c2VsZWN0ZWRVc2VyLmVtYWlsfSAtIFRyYW5zYWN0aW9uIEhpc3RvcnlcclxuLy8gICAgICAgICAgICAgICAgIDwvaDI+XHJcbi8vICAgICAgICAgICAgICAgICA8YnV0dG9uXHJcbi8vICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImFic29sdXRlIHRvcC0zIHJpZ2h0LTMgdGV4dC1ncmF5LTQwMCBob3Zlcjp0ZXh0LXdoaXRlXCJcclxuLy8gICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gc2V0U2VsZWN0ZWRVc2VyKG51bGwpfVxyXG4vLyAgICAgICAgICAgICAgICAgPlxyXG4vLyAgICAgICAgICAgICAgICAgICDinJVcclxuLy8gICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxyXG5cclxuLy8gICAgICAgICAgICAgICAgIHtoaXN0b3J5TG9hZGluZyA/IChcclxuLy8gICAgICAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dC15ZWxsb3ctMzAwXCI+TG9hZGluZyBoaXN0b3J5Li4uPC9wPlxyXG4vLyAgICAgICAgICAgICAgICAgKSA6IChcclxuLy8gICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJncmlkIGdyaWQtY29scy0xIG1kOmdyaWQtY29scy0yIGdhcC02XCI+XHJcbi8vICAgICAgICAgICAgICAgICAgICAgPGRpdj5cclxuLy8gICAgICAgICAgICAgICAgICAgICAgIDxoMyBjbGFzc05hbWU9XCJ0ZXh0LWxnIGZvbnQtc2VtaWJvbGQgbWItMlwiPkRlcG9zaXRzPC9oMz5cclxuLy8gICAgICAgICAgICAgICAgICAgICAgIHtoaXN0b3J5LmRlcG9zaXRzLmxlbmd0aCA9PT0gMCA/IChcclxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dC1ncmF5LTQwMFwiPk5vIGRlcG9zaXQgaGlzdG9yeS48L3A+XHJcbi8vICAgICAgICAgICAgICAgICAgICAgICApIDogKFxyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3NOYW1lPVwic3BhY2UteS0yIHRleHQtc21cIj5cclxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgICB7aGlzdG9yeS5kZXBvc2l0cy5tYXAoKGQpID0+IChcclxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBrZXk9e2QuaWR9IGNsYXNzTmFtZT1cImJnLWdyYXktODAwIHAtMiByb3VuZGVkXCI+XHJcbi8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIOKCuXtkLmFtb3VudH0gLSB7ZC5zdGF0dXN9IC0ge2QuY3JlYXRlZEF0Py50b0RhdGUoKS50b0xvY2FsZVN0cmluZygpfVxyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT5cclxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgICApKX1cclxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgPC91bD5cclxuLy8gICAgICAgICAgICAgICAgICAgICAgICl9XHJcbi8vICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbi8vICAgICAgICAgICAgICAgICAgICAgPGRpdj5cclxuLy8gICAgICAgICAgICAgICAgICAgICAgIDxoMyBjbGFzc05hbWU9XCJ0ZXh0LWxnIGZvbnQtc2VtaWJvbGQgbWItMlwiPldpdGhkcmF3YWxzPC9oMz5cclxuLy8gICAgICAgICAgICAgICAgICAgICAgIHtoaXN0b3J5LndpdGhkcmF3YWxzLmxlbmd0aCA9PT0gMCA/IChcclxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dC1ncmF5LTQwMFwiPk5vIHdpdGhkcmF3YWwgaGlzdG9yeS48L3A+XHJcbi8vICAgICAgICAgICAgICAgICAgICAgICApIDogKFxyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3NOYW1lPVwic3BhY2UteS0yIHRleHQtc21cIj5cclxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgICB7aGlzdG9yeS53aXRoZHJhd2Fscy5tYXAoKHcpID0+IChcclxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBrZXk9e3cuaWR9IGNsYXNzTmFtZT1cImJnLWdyYXktODAwIHAtMiByb3VuZGVkXCI+XHJcbi8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIOKCuXt3LmFtb3VudH0gLSB7dy5zdGF0dXN9IC0ge3cuY3JlYXRlZEF0Py50b0RhdGUoKS50b0xvY2FsZVN0cmluZygpfVxyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT5cclxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgICApKX1cclxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgPC91bD5cclxuLy8gICAgICAgICAgICAgICAgICAgICAgICl9XHJcbi8vICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbi8vICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4vLyAgICAgICAgICAgICAgICAgKX1cclxuLy8gICAgICAgICAgICAgICA8L2Rpdj5cclxuLy8gICAgICAgICAgICAgPC9kaXY+XHJcbi8vICAgICAgICAgICApfVxyXG4vLyAgICAgICAgIDwvZGl2PlxyXG4vLyAgICAgICA8L2Rpdj5cclxuLy8gICAgIDwvTGF5b3V0PlxyXG4vLyAgICk7XHJcbi8vIH1cclxuXHJcblxyXG4vLyAndXNlIGNsaWVudCc7XHJcblxyXG4vLyBpbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcclxuLy8gaW1wb3J0IHtcclxuLy8gICBnZXRGaXJlc3RvcmUsXHJcbi8vICAgY29sbGVjdGlvbixcclxuLy8gICBnZXREb2NzLFxyXG4vLyAgIHF1ZXJ5LFxyXG4vLyAgIHdoZXJlLFxyXG4vLyAgIFRpbWVzdGFtcCxcclxuLy8gICBkb2MsXHJcbi8vICAgZ2V0RG9jLFxyXG4vLyB9IGZyb20gJ2ZpcmViYXNlL2ZpcmVzdG9yZSc7XHJcbi8vIGltcG9ydCB7IGdldEF1dGgsIG9uQXV0aFN0YXRlQ2hhbmdlZCB9IGZyb20gJ2ZpcmViYXNlL2F1dGgnO1xyXG4vLyBpbXBvcnQgZmlyZWJhc2VBcHAgZnJvbSAnQC9maXJlYmFzZSc7XHJcbi8vIGltcG9ydCBMYXlvdXQgZnJvbSAnQC9hcHAvQ29tcG9uZW50cy9MYXlvdXQnO1xyXG5cclxuLy8gZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQWRtaW5Vc2VyV2FsbGV0c1BhZ2UoKSB7XHJcbi8vICAgY29uc3QgYXV0aCA9IGdldEF1dGgoZmlyZWJhc2VBcHApO1xyXG4vLyAgIGNvbnN0IGRiID0gZ2V0RmlyZXN0b3JlKGZpcmViYXNlQXBwKTtcclxuXHJcbi8vICAgY29uc3QgW3VzZXJzLCBzZXRVc2Vyc10gPSB1c2VTdGF0ZShbXSk7XHJcbi8vICAgY29uc3QgW2xvYWRpbmcsIHNldExvYWRpbmddID0gdXNlU3RhdGUodHJ1ZSk7XHJcbi8vICAgY29uc3QgW3NlYXJjaCwgc2V0U2VhcmNoXSA9IHVzZVN0YXRlKCcnKTtcclxuLy8gICBjb25zdCBbY3VycmVudFVzZXIsIHNldEN1cnJlbnRVc2VyXSA9IHVzZVN0YXRlKG51bGwpO1xyXG4vLyAgIGNvbnN0IFtyb2xlLCBzZXRSb2xlXSA9IHVzZVN0YXRlKG51bGwpO1xyXG5cclxuLy8gICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4vLyAgICAgY29uc3QgdW5zdWJzY3JpYmUgPSBvbkF1dGhTdGF0ZUNoYW5nZWQoYXV0aCwgYXN5bmMgKHVzZXIpID0+IHtcclxuLy8gICAgICAgc2V0Q3VycmVudFVzZXIodXNlcik7XHJcbi8vICAgICAgIGlmICh1c2VyKSB7XHJcbi8vICAgICAgICAgY29uc3QgdXNlclJlZiA9IGRvYyhkYiwgJ3VzZXJzJywgdXNlci51aWQpO1xyXG4vLyAgICAgICAgIGNvbnN0IHVzZXJTbmFwID0gYXdhaXQgZ2V0RG9jKHVzZXJSZWYpO1xyXG4vLyAgICAgICAgIGNvbnN0IGRhdGEgPSB1c2VyU25hcC5kYXRhKCk7XHJcbi8vICAgICAgICAgY29uc3QgdXNlclJvbGUgPSBkYXRhPy5yb2xlIHx8ICd1c2VyJztcclxuLy8gICAgICAgICBzZXRSb2xlKHVzZXJSb2xlKTtcclxuXHJcbi8vICAgICAgICAgaWYgKHVzZXJSb2xlID09PSAnYWRtaW4nIHx8IHVzZXJSb2xlID09PSAnc3ViYWRtaW4nKSB7XHJcbi8vICAgICAgICAgICBhd2FpdCBmZXRjaFVzZXJXYWxsZXREYXRhKHVzZXIudWlkLCB1c2VyUm9sZSk7XHJcbi8vICAgICAgICAgfSBlbHNlIHtcclxuLy8gICAgICAgICAgIHNldFVzZXJzKFtdKTtcclxuLy8gICAgICAgICAgIHNldExvYWRpbmcoZmFsc2UpO1xyXG4vLyAgICAgICAgIH1cclxuLy8gICAgICAgfSBlbHNlIHtcclxuLy8gICAgICAgICBzZXRMb2FkaW5nKGZhbHNlKTtcclxuLy8gICAgICAgfVxyXG4vLyAgICAgfSk7XHJcblxyXG4vLyAgICAgcmV0dXJuICgpID0+IHVuc3Vic2NyaWJlKCk7XHJcbi8vICAgfSwgW10pO1xyXG5cclxuLy8gICBjb25zdCBmZXRjaFVzZXJXYWxsZXREYXRhID0gYXN5bmMgKHVpZCwgcm9sZSkgPT4ge1xyXG4vLyAgICAgc2V0TG9hZGluZyh0cnVlKTtcclxuXHJcbi8vICAgICB0cnkge1xyXG4vLyAgICAgICBjb25zdCB3YWxsZXRDb2wgPSBjb2xsZWN0aW9uKGRiLCAnc3Vid2FsbGV0cycpO1xyXG4vLyAgICAgICBsZXQgd2FsbGV0UXVlcnk7XHJcblxyXG4vLyAgICAgICBpZiAocm9sZSA9PT0gJ2FkbWluJykge1xyXG4vLyAgICAgICAgIHdhbGxldFF1ZXJ5ID0gd2FsbGV0Q29sOyAvLyBnZXQgYWxsXHJcbi8vICAgICAgIH0gZWxzZSB7XHJcbi8vICAgICAgICAgd2FsbGV0UXVlcnkgPSBxdWVyeSh3YWxsZXRDb2wsIHdoZXJlKCdzdWJBZG1pbklkJywgJz09JywgdWlkKSk7IC8vIG9ubHkgdGhlaXIgdXNlcnNcclxuLy8gICAgICAgfVxyXG5cclxuLy8gICAgICAgY29uc3Qgd2FsbGV0c1NuYXAgPSBhd2FpdCBnZXREb2NzKHdhbGxldFF1ZXJ5KTtcclxuXHJcbi8vICAgICAgIGNvbnN0IHdhbGxldHMgPSB3YWxsZXRzU25hcC5kb2NzLm1hcCgoZG9jKSA9PiAoe1xyXG4vLyAgICAgICAgIHVpZDogZG9jLmlkLFxyXG4vLyAgICAgICAgIGJhbGFuY2U6IGRvYy5kYXRhKCkuYmFsYW5jZSB8fCAwLFxyXG4vLyAgICAgICAgIGVtYWlsOiBkb2MuZGF0YSgpLmVtYWlsIHx8ICcnLFxyXG4vLyAgICAgICB9KSk7XHJcblxyXG4vLyAgICAgICBjb25zdCBvbmVXZWVrQWdvID0gVGltZXN0YW1wLmZyb21EYXRlKG5ldyBEYXRlKERhdGUubm93KCkgLSA3ICogMjQgKiA2MCAqIDYwICogMTAwMCkpO1xyXG5cclxuLy8gICAgICAgY29uc3QgZGVwb3NpdFNuYXAgPSBhd2FpdCBnZXREb2NzKFxyXG4vLyAgICAgICAgIHF1ZXJ5KFxyXG4vLyAgICAgICAgICAgY29sbGVjdGlvbihkYiwgJ2RlcG9zaXRSZXF1ZXN0cycpLFxyXG4vLyAgICAgICAgICAgd2hlcmUoJ3N0YXR1cycsICc9PScsICdhcHByb3ZlZCcpLFxyXG4vLyAgICAgICAgICAgd2hlcmUoJ2NyZWF0ZWRBdCcsICc+PScsIG9uZVdlZWtBZ28pXHJcbi8vICAgICAgICAgKVxyXG4vLyAgICAgICApO1xyXG5cclxuLy8gICAgICAgY29uc3Qgd2l0aGRyYXdTbmFwID0gYXdhaXQgZ2V0RG9jcyhcclxuLy8gICAgICAgICBxdWVyeShcclxuLy8gICAgICAgICAgIGNvbGxlY3Rpb24oZGIsICd3aXRoZHJhd1JlcXVlc3RzJyksXHJcbi8vICAgICAgICAgICB3aGVyZSgnc3RhdHVzJywgJz09JywgJ2FwcHJvdmVkJyksXHJcbi8vICAgICAgICAgICB3aGVyZSgnY3JlYXRlZEF0JywgJz49Jywgb25lV2Vla0FnbylcclxuLy8gICAgICAgICApXHJcbi8vICAgICAgICk7XHJcblxyXG4vLyAgICAgICBjb25zdCBkZXBvc2l0TWFwID0ge307XHJcbi8vICAgICAgIGRlcG9zaXRTbmFwLmZvckVhY2goKGRvYykgPT4ge1xyXG4vLyAgICAgICAgIGNvbnN0IGRhdGEgPSBkb2MuZGF0YSgpO1xyXG4vLyAgICAgICAgIGlmICghZGVwb3NpdE1hcFtkYXRhLnVpZF0pIGRlcG9zaXRNYXBbZGF0YS51aWRdID0gMDtcclxuLy8gICAgICAgICBkZXBvc2l0TWFwW2RhdGEudWlkXSArPSBkYXRhLmFtb3VudCB8fCAwO1xyXG4vLyAgICAgICB9KTtcclxuXHJcbi8vICAgICAgIGNvbnN0IHdpdGhkcmF3TWFwID0ge307XHJcbi8vICAgICAgIHdpdGhkcmF3U25hcC5mb3JFYWNoKChkb2MpID0+IHtcclxuLy8gICAgICAgICBjb25zdCBkYXRhID0gZG9jLmRhdGEoKTtcclxuLy8gICAgICAgICBpZiAoIXdpdGhkcmF3TWFwW2RhdGEudWlkXSkgd2l0aGRyYXdNYXBbZGF0YS51aWRdID0gMDtcclxuLy8gICAgICAgICB3aXRoZHJhd01hcFtkYXRhLnVpZF0gKz0gZGF0YS5hbW91bnQgfHwgMDtcclxuLy8gICAgICAgfSk7XHJcblxyXG4vLyAgICAgICBjb25zdCBmaW5hbFVzZXJzID0gd2FsbGV0cy5tYXAoKHVzZXIpID0+ICh7XHJcbi8vICAgICAgICAgLi4udXNlcixcclxuLy8gICAgICAgICB0b3RhbERlcG9zaXRlZDogZGVwb3NpdE1hcFt1c2VyLnVpZF0gfHwgMCxcclxuLy8gICAgICAgICB0b3RhbFdpdGhkcmF3bjogd2l0aGRyYXdNYXBbdXNlci51aWRdIHx8IDAsXHJcbi8vICAgICAgIH0pKTtcclxuXHJcbi8vICAgICAgIHNldFVzZXJzKGZpbmFsVXNlcnMpO1xyXG4vLyAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuLy8gICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgdXNlciB3YWxsZXQgZGF0YTonLCBlcnJvcik7XHJcbi8vICAgICAgIGFsZXJ0KCdFcnJvciBsb2FkaW5nIHdhbGxldCBkYXRhLicpO1xyXG4vLyAgICAgfVxyXG5cclxuLy8gICAgIHNldExvYWRpbmcoZmFsc2UpO1xyXG4vLyAgIH07XHJcblxyXG4vLyAgIGNvbnN0IGV4cG9ydFRvQ1NWID0gKCkgPT4ge1xyXG4vLyAgICAgY29uc3QgaGVhZGVycyA9IFsnRW1haWwnLCAnQmFsYW5jZScsICdEZXBvc2l0ZWQgKDcgZGF5cyknLCAnV2l0aGRyYXduICg3IGRheXMpJ107XHJcbi8vICAgICBjb25zdCByb3dzID0gdXNlcnMubWFwKCh1KSA9PiBbdS5lbWFpbCwgdS5iYWxhbmNlLCB1LnRvdGFsRGVwb3NpdGVkLCB1LnRvdGFsV2l0aGRyYXduXSk7XHJcbi8vICAgICBjb25zdCBjc3ZDb250ZW50ID0gW2hlYWRlcnMsIC4uLnJvd3NdLm1hcCgocikgPT4gci5qb2luKCcsJykpLmpvaW4oJ1xcbicpO1xyXG5cclxuLy8gICAgIGNvbnN0IGJsb2IgPSBuZXcgQmxvYihbY3N2Q29udGVudF0sIHsgdHlwZTogJ3RleHQvY3N2O2NoYXJzZXQ9dXRmLTg7JyB9KTtcclxuLy8gICAgIGNvbnN0IHVybCA9IFVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYik7XHJcbi8vICAgICBjb25zdCBsaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xyXG4vLyAgICAgbGluay5zZXRBdHRyaWJ1dGUoJ2hyZWYnLCB1cmwpO1xyXG4vLyAgICAgbGluay5zZXRBdHRyaWJ1dGUoJ2Rvd25sb2FkJywgJ3VzZXJfd2FsbGV0cy5jc3YnKTtcclxuLy8gICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQobGluayk7XHJcbi8vICAgICBsaW5rLmNsaWNrKCk7XHJcbi8vICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGxpbmspO1xyXG4vLyAgIH07XHJcblxyXG4vLyAgIGNvbnN0IGZpbHRlcmVkVXNlcnMgPSB1c2Vycy5maWx0ZXIoKHUpID0+XHJcbi8vICAgICB1LmVtYWlsLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoc2VhcmNoLnRvTG93ZXJDYXNlKCkpXHJcbi8vICAgKTtcclxuXHJcbi8vICAgcmV0dXJuIChcclxuLy8gICAgIDxMYXlvdXQ+XHJcbi8vICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWluLWgtc2NyZWVuIGJnLWdyYXktOTAwIHRleHQtd2hpdGUgcC04XCI+XHJcbi8vICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYXgtdy01eGwgbXgtYXV0b1wiPlxyXG4vLyAgICAgICAgICAgPGgxIGNsYXNzTmFtZT1cInRleHQtM3hsIGZvbnQtYm9sZCBtYi02XCI+XHJcbi8vICAgICAgICAgICAgIHtyb2xlID09PSAnYWRtaW4nXHJcbi8vICAgICAgICAgICAgICAgPyAnQWRtaW46IEFsbCBTdWJhZG1pbiAmIFVzZXIgV2FsbGV0cydcclxuLy8gICAgICAgICAgICAgICA6ICdTdWJhZG1pbjogWW91ciBVc2VyIFdhbGxldHMnfVxyXG4vLyAgICAgICAgICAgPC9oMT5cclxuXHJcbi8vICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIGdhcC00IG1iLTZcIj5cclxuLy8gICAgICAgICAgICAgPGlucHV0XHJcbi8vICAgICAgICAgICAgICAgdHlwZT1cInRleHRcIlxyXG4vLyAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiU2VhcmNoIGJ5IGVtYWlsLi4uXCJcclxuLy8gICAgICAgICAgICAgICB2YWx1ZT17c2VhcmNofVxyXG4vLyAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gc2V0U2VhcmNoKGUudGFyZ2V0LnZhbHVlKX1cclxuLy8gICAgICAgICAgICAgICBjbGFzc05hbWU9XCJweC00IHB5LTIgcm91bmRlZCBiZy1ncmF5LTgwMCBib3JkZXIgYm9yZGVyLWdyYXktNjAwIGZvY3VzOm91dGxpbmUtbm9uZVwiXHJcbi8vICAgICAgICAgICAgIC8+XHJcbi8vICAgICAgICAgICAgIDxidXR0b25cclxuLy8gICAgICAgICAgICAgICBvbkNsaWNrPXtleHBvcnRUb0NTVn1cclxuLy8gICAgICAgICAgICAgICBjbGFzc05hbWU9XCJweC00IHB5LTIgYmcteWVsbG93LTUwMCBob3ZlcjpiZy15ZWxsb3ctNjAwIHRleHQtYmxhY2sgcm91bmRlZCBmb250LXNlbWlib2xkXCJcclxuLy8gICAgICAgICAgICAgPlxyXG4vLyAgICAgICAgICAgICAgIEV4cG9ydCBDU1YgZGtcclxuLy8gICAgICAgICAgICAgPC9idXR0b24+XHJcbi8vICAgICAgICAgICA8L2Rpdj5cclxuXHJcbi8vICAgICAgICAgICB7bG9hZGluZyA/IChcclxuLy8gICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dC15ZWxsb3ctMzAwXCI+TG9hZGluZy4uLjwvcD5cclxuLy8gICAgICAgICAgICkgOiBmaWx0ZXJlZFVzZXJzLmxlbmd0aCA9PT0gMCA/IChcclxuLy8gICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dC1ncmF5LTQwMFwiPk5vIHVzZXJzIGZvdW5kLjwvcD5cclxuLy8gICAgICAgICAgICkgOiAoXHJcbi8vICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwib3ZlcmZsb3cteC1hdXRvIGJnLWdyYXktODAwIHJvdW5kZWQtbGcgc2hhZG93LXhsXCI+XHJcbi8vICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzTmFtZT1cInctZnVsbCB0ZXh0LWxlZnQgdGFibGUtYXV0b1wiPlxyXG4vLyAgICAgICAgICAgICAgICAgPHRoZWFkIGNsYXNzTmFtZT1cImJnLWdyYXktNzAwIHRleHQtc20gdXBwZXJjYXNlIHRleHQtZ3JheS0zMDBcIj5cclxuLy8gICAgICAgICAgICAgICAgICAgPHRyPlxyXG4vLyAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJwLTNcIj5FbWFpbDwvdGg+XHJcbi8vICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cInAtM1wiPkJhbGFuY2U8L3RoPlxyXG4vLyAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJwLTNcIj5EZXBvc2l0ZWQgKDdkKTwvdGg+XHJcbi8vICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cInAtM1wiPldpdGhkcmF3biAoN2QpPC90aD5cclxuLy8gICAgICAgICAgICAgICAgICAgPC90cj5cclxuLy8gICAgICAgICAgICAgICAgIDwvdGhlYWQ+XHJcbi8vICAgICAgICAgICAgICAgICA8dGJvZHk+XHJcbi8vICAgICAgICAgICAgICAgICAgIHtmaWx0ZXJlZFVzZXJzLm1hcCgodXNlcikgPT4gKFxyXG4vLyAgICAgICAgICAgICAgICAgICAgIDx0ciBrZXk9e3VzZXIudWlkfSBjbGFzc05hbWU9XCJib3JkZXItdCBib3JkZXItZ3JheS03MDBcIj5cclxuLy8gICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJwLTNcIj57dXNlci5lbWFpbCB8fCAnTi9BJ308L3RkPlxyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cInAtM1wiPuKCuXt1c2VyLmJhbGFuY2V9PC90ZD5cclxuLy8gICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJwLTNcIj7igrl7dXNlci50b3RhbERlcG9zaXRlZH08L3RkPlxyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cInAtM1wiPuKCuXt1c2VyLnRvdGFsV2l0aGRyYXdufTwvdGQ+XHJcbi8vICAgICAgICAgICAgICAgICAgICAgPC90cj5cclxuLy8gICAgICAgICAgICAgICAgICAgKSl9XHJcbi8vICAgICAgICAgICAgICAgICA8L3Rib2R5PlxyXG4vLyAgICAgICAgICAgICAgIDwvdGFibGU+XHJcbi8vICAgICAgICAgICAgIDwvZGl2PlxyXG4vLyAgICAgICAgICAgKX1cclxuLy8gICAgICAgICA8L2Rpdj5cclxuLy8gICAgICAgPC9kaXY+XHJcbi8vICAgICA8L0xheW91dD5cclxuLy8gICApO1xyXG4vLyB9XHJcblxyXG5cclxuJ3VzZSBjbGllbnQnO1xyXG5cclxuaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7XHJcbiAgZ2V0RmlyZXN0b3JlLFxyXG4gIGNvbGxlY3Rpb24sXHJcbiAgZ2V0RG9jcyxcclxuICBxdWVyeSxcclxuICB3aGVyZSxcclxuICBUaW1lc3RhbXAsXHJcbiAgZG9jLFxyXG4gIGdldERvYyxcclxufSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnO1xyXG5pbXBvcnQgeyBnZXRBdXRoLCBvbkF1dGhTdGF0ZUNoYW5nZWQgfSBmcm9tICdmaXJlYmFzZS9hdXRoJztcclxuaW1wb3J0IGZpcmViYXNlQXBwIGZyb20gJ0AvZmlyZWJhc2UnO1xyXG5pbXBvcnQgTGF5b3V0IGZyb20gJ0AvYXBwL0NvbXBvbmVudHMvTGF5b3V0JztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEFkbWluVXNlcldhbGxldHNQYWdlKCkge1xyXG4gIGNvbnN0IGF1dGggPSBnZXRBdXRoKGZpcmViYXNlQXBwKTtcclxuICBjb25zdCBkYiA9IGdldEZpcmVzdG9yZShmaXJlYmFzZUFwcCk7XHJcblxyXG4gIGNvbnN0IFt1c2Vycywgc2V0VXNlcnNdID0gdXNlU3RhdGUoW10pO1xyXG4gIGNvbnN0IFtsb2FkaW5nLCBzZXRMb2FkaW5nXSA9IHVzZVN0YXRlKHRydWUpO1xyXG4gIGNvbnN0IFtzZWFyY2gsIHNldFNlYXJjaF0gPSB1c2VTdGF0ZSgnJyk7XHJcbiAgY29uc3QgW2N1cnJlbnRVc2VyLCBzZXRDdXJyZW50VXNlcl0gPSB1c2VTdGF0ZShudWxsKTtcclxuICBjb25zdCBbcm9sZSwgc2V0Um9sZV0gPSB1c2VTdGF0ZShudWxsKTtcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIGNvbnN0IHVuc3Vic2NyaWJlID0gb25BdXRoU3RhdGVDaGFuZ2VkKGF1dGgsIGFzeW5jICh1c2VyKSA9PiB7XHJcbiAgICAgIHNldEN1cnJlbnRVc2VyKHVzZXIpO1xyXG4gICAgICBpZiAodXNlcikge1xyXG4gICAgICAgIGNvbnN0IHVzZXJSZWYgPSBkb2MoZGIsICd1c2VycycsIHVzZXIudWlkKTtcclxuICAgICAgICBjb25zdCB1c2VyU25hcCA9IGF3YWl0IGdldERvYyh1c2VyUmVmKTtcclxuICAgICAgICBjb25zdCBkYXRhID0gdXNlclNuYXAuZGF0YSgpO1xyXG4gICAgICAgIGNvbnN0IHVzZXJSb2xlID0gZGF0YT8ucm9sZSB8fCAndXNlcic7XHJcbiAgICAgICAgc2V0Um9sZSh1c2VyUm9sZSk7XHJcblxyXG4gICAgICAgIGlmICh1c2VyUm9sZSA9PT0gJ2FkbWluJyB8fCB1c2VyUm9sZSA9PT0gJ3N1YmFkbWluJykge1xyXG4gICAgICAgICAgYXdhaXQgZmV0Y2hVc2VyV2FsbGV0RGF0YSh1c2VyLnVpZCwgdXNlclJvbGUpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBzZXRVc2VycyhbXSk7XHJcbiAgICAgICAgICBzZXRMb2FkaW5nKGZhbHNlKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgc2V0TG9hZGluZyhmYWxzZSk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIHJldHVybiAoKSA9PiB1bnN1YnNjcmliZSgpO1xyXG4gIH0sIFtdKTtcclxuXHJcbi8vICAgY29uc3QgZmV0Y2hVc2VyV2FsbGV0RGF0YSA9IGFzeW5jICh1aWQsIHJvbGUpID0+IHtcclxuLy8gICAgIHNldExvYWRpbmcodHJ1ZSk7XHJcblxyXG4vLyAgICAgdHJ5IHtcclxuLy8gICAgICAgY29uc3Qgd2FsbGV0Q29sID0gY29sbGVjdGlvbihkYiwgJ3N1YndhbGxldHMnKTtcclxuLy8gICAgICAgbGV0IHdhbGxldFF1ZXJ5O1xyXG5cclxuLy8gICAgICAgaWYgKHJvbGUgPT09ICdhZG1pbicpIHtcclxuLy8gICAgICAgICB3YWxsZXRRdWVyeSA9IHdhbGxldENvbDsgLy8gYWxsIHdhbGxldHNcclxuLy8gICAgICAgfSBlbHNlIHtcclxuLy8gICAgICAgICB3YWxsZXRRdWVyeSA9IHF1ZXJ5KHdhbGxldENvbCwgd2hlcmUoJ3N1YkFkbWluSWQnLCAnPT0nLCB1aWQpKTsgLy8gc3ViYWRtaW4tc3BlY2lmaWNcclxuLy8gICAgICAgfVxyXG5cclxuLy8gICAgICAgY29uc3Qgd2FsbGV0c1NuYXAgPSBhd2FpdCBnZXREb2NzKHdhbGxldFF1ZXJ5KTtcclxuXHJcbi8vICAgICAgIGNvbnN0IHdhbGxldHMgPSB3YWxsZXRzU25hcC5kb2NzLm1hcCgoZG9jKSA9PiAoe1xyXG4vLyAgICAgICAgIHVpZDogZG9jLmlkLFxyXG4vLyAgICAgICAgIGJhbGFuY2U6IGRvYy5kYXRhKCkuYmFsYW5jZSB8fCAwLFxyXG4vLyAgICAgICAgIGVtYWlsOiBkb2MuZGF0YSgpLmVtYWlsIHx8ICcnLFxyXG4vLyAgICAgICB9KSk7XHJcblxyXG4vLyAgICAgICBjb25zdCBvbmVXZWVrQWdvID0gVGltZXN0YW1wLmZyb21EYXRlKG5ldyBEYXRlKERhdGUubm93KCkgLSA3ICogMjQgKiA2MCAqIDYwICogMTAwMCkpO1xyXG5cclxuLy8gICAgICAgLy8gRGVwb3NpdCBSZXF1ZXN0cyAoZmlsdGVyZWQgZm9yIHN1YmFkbWluKVxyXG4vLyAgICAgICBjb25zdCBkZXBvc2l0U25hcCA9IGF3YWl0IGdldERvY3MoXHJcbi8vICAgICAgICAgLy8gcXVlcnkoXHJcbi8vICAgICAgICAgLy8gICBjb2xsZWN0aW9uKGRiLCAnc3ViZGVwb3NpdFJlcXVlc3RzJyksXHJcbi8vICAgICAgICAgLy8gICB3aGVyZSgnc3RhdHVzJywgJz09JywgJ2FwcHJvdmVkJyksXHJcbi8vICAgICAgICAgLy8gICB3aGVyZSgnY3JlYXRlZEF0JywgJz49Jywgb25lV2Vla0FnbyksXHJcbi8vICAgICAgICAgLy8gICAuLi4ocm9sZSA9PT0gJ3N1YmFkbWluJyA/IFt3aGVyZSgnZnJvbVVzZXJTdWJBZG1pbklkJywgJz09JywgdWlkKV0gOiBbXSlcclxuLy8gICAgICAgICAvLyApXHJcbi8vICAgICAgICAgcXVlcnkoXHJcbi8vICAgICAgICAgICBjb2xsZWN0aW9uKGRiLCAnc3ViZGVwb3NpdFJlcXVlc3RzJyksXHJcbi8vICAgICAgICAgICB3aGVyZSgnc3RhdHVzJywgJz09JywgJ2FwcHJvdmVkJyksXHJcbi8vICAgICAgICAgICB3aGVyZSgnY3JlYXRlZEF0JywgJz49Jywgb25lV2Vla0FnbyksXHJcbi8vICAgICAgICAgICB3aGVyZSgnZnJvbVVzZXJTdWJBZG1pbklkJywgJz09JywgdWlkKVxyXG4vLyAgICAgICAgIClcclxuLy8gICAgICAgKTtcclxuXHJcbi8vICAgICAgIC8vIFdpdGhkcmF3IFJlcXVlc3RzIChmaWx0ZXJlZCBmb3Igc3ViYWRtaW4pXHJcbi8vIC8vICAgICAgIGNvbnN0IHdpdGhkcmF3U25hcCA9IGF3YWl0IGdldERvY3MoXHJcbi8vIC8vICAgICAgICAgLy8gcXVlcnkoXHJcbi8vIC8vICAgICAgICAgLy8gICBjb2xsZWN0aW9uKGRiLCAnc3Vid2l0aGRyYXdSZXF1ZXN0cycpLFxyXG4vLyAvLyAgICAgICAgIC8vICAgd2hlcmUoJ3N0YXR1cycsICc9PScsICdhcHByb3ZlZCcpLFxyXG4vLyAvLyAgICAgICAgIC8vICAgd2hlcmUoJ2NyZWF0ZWRBdCcsICc+PScsIG9uZVdlZWtBZ28pLFxyXG4vLyAvLyAgICAgICAgIC8vICAgLi4uKHJvbGUgPT09ICdzdWJhZG1pbicgPyBbd2hlcmUoJ2Zyb21Vc2VyU3ViQWRtaW5JZCcsICc9PScsIHVpZCldIDogW10pXHJcbi8vIC8vICAgICAgICAgLy8gKVxyXG4vLyAvLyAgICAgICAgIHF1ZXJ5KFxyXG4vLyAvLyAgIGNvbGxlY3Rpb24oZGIsICdzdWJkZXBvc2l0UmVxdWVzdHMnKSxcclxuLy8gLy8gICB3aGVyZSgnc3RhdHVzJywgJz09JywgJ2FwcHJvdmVkJyksXHJcbi8vIC8vICAgd2hlcmUoJ2NyZWF0ZWRBdCcsICc+PScsIG9uZVdlZWtBZ28pLFxyXG4vLyAvLyAgIHdoZXJlKCdmcm9tVXNlclN1YkFkbWluSWQnLCAnPT0nLCB1aWQpXHJcbi8vIC8vIClcclxuXHJcbi8vIC8vICAgICAgICk7XHJcbi8vIGNvbnN0IHdpdGhkcmF3U25hcCA9IGF3YWl0IGdldERvY3MoXHJcbi8vICAgcXVlcnkoXHJcbi8vICAgICBjb2xsZWN0aW9uKGRiLCAnc3Vid2l0aGRyYXdSZXF1ZXN0cycpLFxyXG4vLyAgICAgd2hlcmUoJ3N0YXR1cycsICc9PScsICdhcHByb3ZlZCcpLFxyXG4vLyAgICAgLi4uKHJvbGUgPT09ICdzdWJhZG1pbicgPyBbd2hlcmUoJ2Zyb21Vc2VyU3ViQWRtaW5JZCcsICc9PScsIHVpZCldIDogW10pXHJcbi8vICAgKVxyXG4vLyApO1xyXG5cclxuLy8gICAgICAgLy8gQWdncmVnYXRlIGRlcG9zaXRzXHJcbi8vICAgICAgIGNvbnN0IGRlcG9zaXRNYXAgPSB7fTtcclxuLy8gICAgICAgZGVwb3NpdFNuYXAuZm9yRWFjaCgoZG9jKSA9PiB7XHJcbi8vICAgICAgICAgY29uc3QgZGF0YSA9IGRvYy5kYXRhKCk7XHJcbi8vICAgICAgICAgaWYgKCFkZXBvc2l0TWFwW2RhdGEudWlkXSkgZGVwb3NpdE1hcFtkYXRhLnVpZF0gPSAwO1xyXG4vLyAgICAgICAgIGRlcG9zaXRNYXBbZGF0YS51aWRdICs9IGRhdGEuYW1vdW50IHx8IDA7XHJcbi8vICAgICAgIH0pO1xyXG5cclxuLy8gICAgICAgLy8gQWdncmVnYXRlIHdpdGhkcmF3YWxzXHJcbi8vICAgICAgIC8vIGNvbnN0IHdpdGhkcmF3TWFwID0ge307XHJcbi8vICAgICAgIC8vIHdpdGhkcmF3U25hcC5mb3JFYWNoKChkb2MpID0+IHtcclxuLy8gICAgICAgLy8gICBjb25zdCBkYXRhID0gZG9jLmRhdGEoKTtcclxuLy8gICAgICAgLy8gICBpZiAoIXdpdGhkcmF3TWFwW2RhdGEudWlkXSkgd2l0aGRyYXdNYXBbZGF0YS51aWRdID0gMDtcclxuLy8gICAgICAgLy8gICB3aXRoZHJhd01hcFtkYXRhLnVpZF0gKz0gZGF0YS5hbW91bnQgfHwgMDtcclxuLy8gICAgICAgLy8gfSk7XHJcbi8vIGNvbnN0IHdpdGhkcmF3TWFwID0ge307XHJcbi8vIHdpdGhkcmF3U25hcC5mb3JFYWNoKChkb2MpID0+IHtcclxuLy8gICBjb25zdCBkYXRhID0gZG9jLmRhdGEoKTtcclxuLy8gICBpZiAoIXdpdGhkcmF3TWFwW2RhdGEudWlkXSkgd2l0aGRyYXdNYXBbZGF0YS51aWRdID0gW107XHJcbi8vICAgd2l0aGRyYXdNYXBbZGF0YS51aWRdLnB1c2goe1xyXG4vLyAgICAgYW1vdW50OiBkYXRhLmFtb3VudCxcclxuLy8gICAgIGFwcHJvdmVkQXQ6IGRhdGEuYXBwcm92ZWRBdD8udG9EYXRlKCksXHJcbi8vICAgfSk7XHJcbi8vIH0pO1xyXG5cclxuLy8gICAgICAgLy8gRmluYWwgbWVyZ2VkIHVzZXIgZGF0YVxyXG4vLyAgICAgICBjb25zdCBmaW5hbFVzZXJzID0gd2FsbGV0cy5tYXAoKHVzZXIpID0+ICh7XHJcbi8vICAgICAgICAgLi4udXNlcixcclxuLy8gICAgICAgICB0b3RhbERlcG9zaXRlZDogZGVwb3NpdE1hcFt1c2VyLnVpZF0gfHwgMCxcclxuLy8gICAgICAgICAvLyB0b3RhbFdpdGhkcmF3bjogd2l0aGRyYXdNYXBbdXNlci51aWRdIHx8IDAsXHJcbi8vICAgICAgICAgd2l0aGRyYXdhbHM6IHdpdGhkcmF3TWFwW3VzZXIudWlkXSB8fCBbXSxcclxuXHJcbi8vICAgICAgIH0pKTtcclxuXHJcbi8vICAgICAgIHNldFVzZXJzKGZpbmFsVXNlcnMpO1xyXG4vLyAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuLy8gICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgd2FsbGV0IGRhdGE6JywgZXJyb3IpO1xyXG4vLyAgICAgICBhbGVydCgnRXJyb3IgbG9hZGluZyB3YWxsZXQgZGF0YS4nKTtcclxuLy8gICAgIH1cclxuXHJcbi8vICAgICBzZXRMb2FkaW5nKGZhbHNlKTtcclxuLy8gICB9O1xyXG5cclxuICAvLyBjb25zdCBleHBvcnRUb0NTViA9ICgpID0+IHtcclxuICAvLyAgIGNvbnN0IGhlYWRlcnMgPSBbJ0VtYWlsJywgJ0JhbGFuY2UnLCAnRGVwb3NpdGVkICg3IGRheXMpJywgJ1dpdGhkcmF3biAoNyBkYXlzKSddO1xyXG4gIC8vICAgY29uc3Qgcm93cyA9IHVzZXJzLm1hcCgodSkgPT4gW3UuZW1haWwsIHUuYmFsYW5jZSwgdS50b3RhbERlcG9zaXRlZCwgdS50b3RhbFdpdGhkcmF3bl0pO1xyXG4gIC8vICAgY29uc3QgY3N2Q29udGVudCA9IFtoZWFkZXJzLCAuLi5yb3dzXS5tYXAoKHIpID0+IHIuam9pbignLCcpKS5qb2luKCdcXG4nKTtcclxuXHJcbiAgLy8gICBjb25zdCBibG9iID0gbmV3IEJsb2IoW2NzdkNvbnRlbnRdLCB7IHR5cGU6ICd0ZXh0L2NzdjtjaGFyc2V0PXV0Zi04OycgfSk7XHJcbiAgLy8gICBjb25zdCB1cmwgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpO1xyXG4gIC8vICAgY29uc3QgbGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTtcclxuICAvLyAgIGxpbmsuc2V0QXR0cmlidXRlKCdocmVmJywgdXJsKTtcclxuICAvLyAgIGxpbmsuc2V0QXR0cmlidXRlKCdkb3dubG9hZCcsICd1c2VyX3dhbGxldHMuY3N2Jyk7XHJcbiAgLy8gICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGxpbmspO1xyXG4gIC8vICAgbGluay5jbGljaygpO1xyXG4gIC8vICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChsaW5rKTtcclxuICAvLyB9O1xyXG5cclxuLy8gY29uc3QgZmV0Y2hVc2VyV2FsbGV0RGF0YSA9IGFzeW5jICh1aWQsIHJvbGUpID0+IHtcclxuLy8gICBzZXRMb2FkaW5nKHRydWUpO1xyXG5cclxuLy8gICB0cnkge1xyXG4vLyAgICAgY29uc3Qgd2FsbGV0Q29sID0gY29sbGVjdGlvbihkYiwgJ3N1YndhbGxldHMnKTtcclxuLy8gICAgIGxldCB3YWxsZXRRdWVyeTtcclxuXHJcbi8vICAgICBpZiAocm9sZSA9PT0gJ2FkbWluJykge1xyXG4vLyAgICAgICB3YWxsZXRRdWVyeSA9IHdhbGxldENvbDsgLy8gQWxsIHdhbGxldHNcclxuLy8gICAgIH0gZWxzZSB7XHJcbi8vICAgICAgIHdhbGxldFF1ZXJ5ID0gcXVlcnkod2FsbGV0Q29sLCB3aGVyZSgnc3ViQWRtaW5JZCcsICc9PScsIHVpZCkpOyAvLyBPbmx5IHN1YmFkbWluJ3MgdXNlcnNcclxuLy8gICAgIH1cclxuXHJcbi8vICAgICBjb25zdCB3YWxsZXRzU25hcCA9IGF3YWl0IGdldERvY3Mod2FsbGV0UXVlcnkpO1xyXG5cclxuLy8gICAgIGNvbnN0IHdhbGxldHMgPSB3YWxsZXRzU25hcC5kb2NzLm1hcCgoZG9jKSA9PiAoe1xyXG4vLyAgICAgICB1aWQ6IGRvYy5pZCxcclxuLy8gICAgICAgYmFsYW5jZTogZG9jLmRhdGEoKS5iYWxhbmNlIHx8IDAsXHJcbi8vICAgICAgIGVtYWlsOiBkb2MuZGF0YSgpLmVtYWlsIHx8ICcnLFxyXG4vLyAgICAgfSkpO1xyXG5cclxuLy8gICAgIGNvbnN0IG9uZVdlZWtBZ28gPSBUaW1lc3RhbXAuZnJvbURhdGUobmV3IERhdGUoRGF0ZS5ub3coKSAtIDcgKiAyNCAqIDYwICogNjAgKiAxMDAwKSk7XHJcblxyXG4vLyAgICAgLy8gQXBwcm92ZWQgZGVwb3NpdHMgKGxhc3QgNyBkYXlzKVxyXG4vLyAgICAgY29uc3QgZGVwb3NpdFNuYXAgPSBhd2FpdCBnZXREb2NzKFxyXG4vLyAgICAgICBxdWVyeShcclxuLy8gICAgICAgICBjb2xsZWN0aW9uKGRiLCAnc3ViZGVwb3NpdFJlcXVlc3RzJyksXHJcbi8vICAgICAgICAgd2hlcmUoJ3N0YXR1cycsICc9PScsICdhcHByb3ZlZCcpLFxyXG4vLyAgICAgICAgIHdoZXJlKCdjcmVhdGVkQXQnLCAnPj0nLCBvbmVXZWVrQWdvKSxcclxuLy8gICAgICAgICAuLi4ocm9sZSA9PT0gJ3N1YmFkbWluJyA/IFt3aGVyZSgnZnJvbVVzZXJTdWJBZG1pbklkJywgJz09JywgdWlkKV0gOiBbXSlcclxuLy8gICAgICAgKVxyXG4vLyAgICAgKTtcclxuXHJcbi8vICAgICAvLyBBcHByb3ZlZCB3aXRoZHJhd2FscyAoYWxsIHRpbWUpXHJcbi8vICAgICBjb25zdCB3aXRoZHJhd1NuYXAgPSBhd2FpdCBnZXREb2NzKFxyXG4vLyAgICAgICBxdWVyeShcclxuLy8gICAgICAgICBjb2xsZWN0aW9uKGRiLCAnc3Vid2l0aGRyYXdSZXF1ZXN0cycpLFxyXG4vLyAgICAgICAgIHdoZXJlKCdzdGF0dXMnLCAnPT0nLCAnYXBwcm92ZWQnKSxcclxuLy8gICAgICAgICAuLi4ocm9sZSA9PT0gJ3N1YmFkbWluJyA/IFt3aGVyZSgnZnJvbVVzZXJTdWJBZG1pbklkJywgJz09JywgdWlkKV0gOiBbXSlcclxuLy8gICAgICAgKVxyXG4vLyAgICAgKTtcclxuXHJcbi8vICAgICAvLyBBZ2dyZWdhdGUgZGVwb3NpdHNcclxuLy8gICAgIGNvbnN0IGRlcG9zaXRNYXAgPSB7fTtcclxuLy8gICAgIGRlcG9zaXRTbmFwLmZvckVhY2goKGRvYykgPT4ge1xyXG4vLyAgICAgICBjb25zdCBkYXRhID0gZG9jLmRhdGEoKTtcclxuLy8gICAgICAgaWYgKCFkZXBvc2l0TWFwW2RhdGEudWlkXSkgZGVwb3NpdE1hcFtkYXRhLnVpZF0gPSAwO1xyXG4vLyAgICAgICBkZXBvc2l0TWFwW2RhdGEudWlkXSArPSBkYXRhLmFtb3VudCB8fCAwO1xyXG4vLyAgICAgfSk7XHJcblxyXG4vLyAgICAgLy8gR3JvdXAgd2l0aGRyYXdhbHMgcGVyIHVzZXIgKGFsbCB0aW1lLCB3aXRoIHRpbWVzdGFtcClcclxuLy8gICAgIGNvbnN0IHdpdGhkcmF3TWFwID0ge307XHJcbi8vICAgICB3aXRoZHJhd1NuYXAuZm9yRWFjaCgoZG9jKSA9PiB7XHJcbi8vICAgICAgIGNvbnN0IGRhdGEgPSBkb2MuZGF0YSgpO1xyXG4vLyAgICAgICBpZiAoIXdpdGhkcmF3TWFwW2RhdGEudWlkXSkgd2l0aGRyYXdNYXBbZGF0YS51aWRdID0gW107XHJcbi8vICAgICAgIHdpdGhkcmF3TWFwW2RhdGEudWlkXS5wdXNoKHtcclxuLy8gICAgICAgICBhbW91bnQ6IGRhdGEuYW1vdW50LFxyXG4vLyAgICAgICAgIGFwcHJvdmVkQXQ6IGRhdGEuYXBwcm92ZWRBdD8udG9EYXRlKCksXHJcbi8vICAgICAgIH0pO1xyXG4vLyAgICAgfSk7XHJcblxyXG4vLyAgICAgLy8gRmluYWwgdXNlciBtZXJnZVxyXG4vLyAgICAgY29uc3QgZmluYWxVc2VycyA9IHdhbGxldHMubWFwKCh1c2VyKSA9PiAoe1xyXG4vLyAgICAgICAuLi51c2VyLFxyXG4vLyAgICAgICB0b3RhbERlcG9zaXRlZDogZGVwb3NpdE1hcFt1c2VyLnVpZF0gfHwgMCxcclxuLy8gICAgICAgd2l0aGRyYXdhbHM6IHdpdGhkcmF3TWFwW3VzZXIudWlkXSB8fCBbXSxcclxuLy8gICAgIH0pKTtcclxuXHJcbi8vICAgICBzZXRVc2VycyhmaW5hbFVzZXJzKTtcclxuLy8gICB9IGNhdGNoIChlcnJvcikge1xyXG4vLyAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgd2FsbGV0IGRhdGE6JywgZXJyb3IpO1xyXG4vLyAgICAgYWxlcnQoJ0Vycm9yIGxvYWRpbmcgd2FsbGV0IGRhdGEuJyk7XHJcbi8vICAgfVxyXG5cclxuLy8gICBzZXRMb2FkaW5nKGZhbHNlKTtcclxuLy8gfTtcclxuXHJcbiAgY29uc3QgZXhwb3J0VG9DU1YgPSAoKSA9PiB7XHJcbiAgY29uc3QgaGVhZGVycyA9IFsnRW1haWwnLCAnQmFsYW5jZScsICdEZXBvc2l0ZWQgKDcgZGF5cyknLCAnV2l0aGRyYXdhbHMgKGFtb3VudCArIGRhdGUpJ107XHJcblxyXG4gIGNvbnN0IHJvd3MgPSB1c2Vycy5tYXAoKHUpID0+IHtcclxuICAgIGNvbnN0IHdpdGhkcmF3YWxEZXRhaWxzID0gKHUud2l0aGRyYXdhbHMgfHwgW10pXHJcbiAgICAgIC5tYXAoXHJcbiAgICAgICAgKHcpID0+XHJcbiAgICAgICAgICBg4oK5JHt3LmFtb3VudH0gb24gJHt3LmFwcHJvdmVkQXQ/LnRvTG9jYWxlRGF0ZVN0cmluZygpfSBhdCAke3cuYXBwcm92ZWRBdD8udG9Mb2NhbGVUaW1lU3RyaW5nKFtdLCB7XHJcbiAgICAgICAgICAgIGhvdXI6ICcyLWRpZ2l0JyxcclxuICAgICAgICAgICAgbWludXRlOiAnMi1kaWdpdCcsXHJcbiAgICAgICAgICB9KX1gXHJcbiAgICAgIClcclxuICAgICAgLmpvaW4oJyB8ICcpOyAvLyBVc2UgcGlwZSBvciBzZW1pY29sb24gdG8gc2VwYXJhdGUgbXVsdGlwbGUgd2l0aGRyYXdhbHMgaW4gb25lIGNlbGxcclxuXHJcbiAgICByZXR1cm4gW3UuZW1haWwsIHUuYmFsYW5jZSwgdS50b3RhbERlcG9zaXRlZCwgd2l0aGRyYXdhbERldGFpbHNdO1xyXG4gIH0pO1xyXG5cclxuICBjb25zdCBjc3ZDb250ZW50ID0gW2hlYWRlcnMsIC4uLnJvd3NdLm1hcCgocikgPT4gci5qb2luKCcsJykpLmpvaW4oJ1xcbicpO1xyXG5cclxuICBjb25zdCBibG9iID0gbmV3IEJsb2IoW2NzdkNvbnRlbnRdLCB7IHR5cGU6ICd0ZXh0L2NzdjtjaGFyc2V0PXV0Zi04OycgfSk7XHJcbiAgY29uc3QgdXJsID0gVVJMLmNyZWF0ZU9iamVjdFVSTChibG9iKTtcclxuICBjb25zdCBsaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xyXG4gIGxpbmsuc2V0QXR0cmlidXRlKCdocmVmJywgdXJsKTtcclxuICBsaW5rLnNldEF0dHJpYnV0ZSgnZG93bmxvYWQnLCAndXNlcl93YWxsZXRzLmNzdicpO1xyXG4gIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQobGluayk7XHJcbiAgbGluay5jbGljaygpO1xyXG4gIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQobGluayk7XHJcbn07XHJcblxyXG4gIGNvbnN0IGZpbHRlcmVkVXNlcnMgPSB1c2Vycy5maWx0ZXIoKHUpID0+XHJcbiAgICB1LmVtYWlsLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoc2VhcmNoLnRvTG93ZXJDYXNlKCkpXHJcbiAgKTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIC8vIDxMYXlvdXQ+XHJcbiAgICAvLyAgIDxkaXYgY2xhc3NOYW1lPVwibWluLWgtc2NyZWVuIGJnLWdyYXktOTAwIHRleHQtd2hpdGUgcC04XCI+XHJcbiAgICAvLyAgICAgPGRpdiBjbGFzc05hbWU9XCJtYXgtdy01eGwgbXgtYXV0b1wiPlxyXG4gICAgLy8gICAgICAgPGgxIGNsYXNzTmFtZT1cInRleHQtM3hsIGZvbnQtYm9sZCBtYi02XCI+XHJcbiAgICAvLyAgICAgICAgIHtyb2xlID09PSAnYWRtaW4nXHJcbiAgICAvLyAgICAgICAgICAgPyAnQWRtaW46IEFsbCBTdWJhZG1pbiAmIFVzZXIgV2FsbGV0cydcclxuICAgIC8vICAgICAgICAgICA6ICdTdWJhZG1pbjogWW91ciBVc2VyIFdhbGxldHMnfVxyXG4gICAgLy8gICAgICAgPC9oMT5cclxuXHJcbiAgICAvLyAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIGdhcC00IG1iLTZcIj5cclxuICAgIC8vICAgICAgICAgPGlucHV0XHJcbiAgICAvLyAgICAgICAgICAgdHlwZT1cInRleHRcIlxyXG4gICAgLy8gICAgICAgICAgIHBsYWNlaG9sZGVyPVwiU2VhcmNoIGJ5IGVtYWlsLi4uXCJcclxuICAgIC8vICAgICAgICAgICB2YWx1ZT17c2VhcmNofVxyXG4gICAgLy8gICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gc2V0U2VhcmNoKGUudGFyZ2V0LnZhbHVlKX1cclxuICAgIC8vICAgICAgICAgICBjbGFzc05hbWU9XCJweC00IHB5LTIgcm91bmRlZCBiZy1ncmF5LTgwMCBib3JkZXIgYm9yZGVyLWdyYXktNjAwIGZvY3VzOm91dGxpbmUtbm9uZVwiXHJcbiAgICAvLyAgICAgICAgIC8+XHJcbiAgICAvLyAgICAgICAgIDxidXR0b25cclxuICAgIC8vICAgICAgICAgICBvbkNsaWNrPXtleHBvcnRUb0NTVn1cclxuICAgIC8vICAgICAgICAgICBjbGFzc05hbWU9XCJweC00IHB5LTIgYmcteWVsbG93LTUwMCBob3ZlcjpiZy15ZWxsb3ctNjAwIHRleHQtYmxhY2sgcm91bmRlZCBmb250LXNlbWlib2xkXCJcclxuICAgIC8vICAgICAgICAgPlxyXG4gICAgLy8gICAgICAgICAgIEV4cG9ydCBDU1ZcclxuICAgIC8vICAgICAgICAgPC9idXR0b24+XHJcbiAgICAvLyAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAvLyAgICAgICB7bG9hZGluZyA/IChcclxuICAgIC8vICAgICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dC15ZWxsb3ctMzAwXCI+TG9hZGluZy4uLjwvcD5cclxuICAgIC8vICAgICAgICkgOiBmaWx0ZXJlZFVzZXJzLmxlbmd0aCA9PT0gMCA/IChcclxuICAgIC8vICAgICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dC1ncmF5LTQwMFwiPk5vIHVzZXJzIGZvdW5kLjwvcD5cclxuICAgIC8vICAgICAgICkgOiAoXHJcbiAgICAvLyAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwib3ZlcmZsb3cteC1hdXRvIGJnLWdyYXktODAwIHJvdW5kZWQtbGcgc2hhZG93LXhsXCI+XHJcbiAgICAvLyAgICAgICAgICAgPHRhYmxlIGNsYXNzTmFtZT1cInctZnVsbCB0ZXh0LWxlZnQgdGFibGUtYXV0b1wiPlxyXG4gICAgLy8gICAgICAgICAgICAgPHRoZWFkIGNsYXNzTmFtZT1cImJnLWdyYXktNzAwIHRleHQtc20gdXBwZXJjYXNlIHRleHQtZ3JheS0zMDBcIj5cclxuICAgIC8vICAgICAgICAgICAgICAgPHRyPlxyXG4gICAgLy8gICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJwLTNcIj5FbWFpbDwvdGg+XHJcbiAgICAvLyAgICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cInAtM1wiPkJhbGFuY2U8L3RoPlxyXG4gICAgLy8gICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJwLTNcIj5EZXBvc2l0ZWQgKDdkKTwvdGg+XHJcbiAgICAvLyAgICAgICAgICAgICAgICAgey8qIDx0aCBjbGFzc05hbWU9XCJwLTNcIj5XaXRoZHJhd24gKDdkKTwvdGg+XHJcbiAgICAvLyAgICAgICAgICAgICAgIDwvdHI+ICovfVxyXG4gICAgLy8gICAgICAgICAgICAgICA8dGggY2xhc3NOYW1lPVwicC0zXCI+V2l0aGRyYXdhbHM8L3RoPlxyXG5cclxuICAgIC8vICAgICAgICAgICAgIDwvdGhlYWQ+XHJcbiAgICAvLyAgICAgICAgICAgICA8dGJvZHk+XHJcbiAgICAvLyAgICAgICAgICAgICAgIHtmaWx0ZXJlZFVzZXJzLm1hcCgodXNlcikgPT4gKFxyXG4gICAgLy8gICAgICAgICAgICAgICAgIDx0ciBrZXk9e3VzZXIudWlkfSBjbGFzc05hbWU9XCJib3JkZXItdCBib3JkZXItZ3JheS03MDBcIj5cclxuICAgIC8vICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJwLTNcIj57dXNlci5lbWFpbCB8fCAnTi9BJ308L3RkPlxyXG4gICAgLy8gICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cInAtM1wiPuKCuXt1c2VyLmJhbGFuY2V9PC90ZD5cclxuICAgIC8vICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJwLTNcIj7igrl7dXNlci50b3RhbERlcG9zaXRlZH08L3RkPlxyXG4gICAgLy8gICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cInAtM1wiPuKCuXt1c2VyLldpdGhkcmF3bn08L3RkPlxyXG4gICAgLy8gICAgICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAvLyAgICAgICAgICAgICAgICkpfVxyXG4gICAgLy8gICAgICAgICAgICAgPC90Ym9keT5cclxuICAgIC8vICAgICAgICAgICA8L3RhYmxlPlxyXG4gICAgLy8gICAgICAgICA8L2Rpdj5cclxuICAgIC8vICAgICAgICl9XHJcbiAgICAvLyAgICAgPC9kaXY+XHJcbiAgICAvLyAgIDwvZGl2PlxyXG4gICAgLy8gPC9MYXlvdXQ+XHJcbiAgICA8TGF5b3V0PlxyXG4gIDxkaXYgY2xhc3NOYW1lPVwibWluLWgtc2NyZWVuIGJnLWdyYXktOTAwIHRleHQtd2hpdGUgcC04XCI+XHJcbiAgICA8ZGl2IGNsYXNzTmFtZT1cIm1heC13LTV4bCBteC1hdXRvXCI+XHJcbiAgICAgIDxoMSBjbGFzc05hbWU9XCJ0ZXh0LTN4bCBmb250LWJvbGQgbWItNlwiPlxyXG4gICAgICAgIHtyb2xlID09PSAnYWRtaW4nXHJcbiAgICAgICAgICA/ICdBZG1pbjogQWxsIFN1YmFkbWluICYgVXNlciBXYWxsZXRzJ1xyXG4gICAgICAgICAgOiAnU3ViYWRtaW46IFlvdXIgVXNlciBXYWxsZXRzJ31cclxuICAgICAgPC9oMT5cclxuXHJcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTQgbWItNlwiPlxyXG4gICAgICAgIDxpbnB1dFxyXG4gICAgICAgICAgdHlwZT1cInRleHRcIlxyXG4gICAgICAgICAgcGxhY2Vob2xkZXI9XCJTZWFyY2ggYnkgZW1haWwuLi5cIlxyXG4gICAgICAgICAgdmFsdWU9e3NlYXJjaH1cclxuICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gc2V0U2VhcmNoKGUudGFyZ2V0LnZhbHVlKX1cclxuICAgICAgICAgIGNsYXNzTmFtZT1cInB4LTQgcHktMiByb3VuZGVkIGJnLWdyYXktODAwIGJvcmRlciBib3JkZXItZ3JheS02MDAgZm9jdXM6b3V0bGluZS1ub25lXCJcclxuICAgICAgICAvPlxyXG4gICAgICAgIDxidXR0b25cclxuICAgICAgICAgIG9uQ2xpY2s9e2V4cG9ydFRvQ1NWfVxyXG4gICAgICAgICAgY2xhc3NOYW1lPVwicHgtNCBweS0yIGJnLXllbGxvdy01MDAgaG92ZXI6YmcteWVsbG93LTYwMCB0ZXh0LWJsYWNrIHJvdW5kZWQgZm9udC1zZW1pYm9sZFwiXHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgRXhwb3J0IENTVlxyXG4gICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICA8L2Rpdj5cclxuXHJcbiAgICAgIHtsb2FkaW5nID8gKFxyXG4gICAgICAgIDxwIGNsYXNzTmFtZT1cInRleHQteWVsbG93LTMwMFwiPkxvYWRpbmcuLi48L3A+XHJcbiAgICAgICkgOiBmaWx0ZXJlZFVzZXJzLmxlbmd0aCA9PT0gMCA/IChcclxuICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0LWdyYXktNDAwXCI+Tm8gdXNlcnMgZm91bmQuPC9wPlxyXG4gICAgICApIDogKFxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwib3ZlcmZsb3cteC1hdXRvIGJnLWdyYXktODAwIHJvdW5kZWQtbGcgc2hhZG93LXhsXCI+XHJcbiAgICAgICAgICA8dGFibGUgY2xhc3NOYW1lPVwidy1mdWxsIHRleHQtbGVmdCB0YWJsZS1hdXRvXCI+XHJcbiAgICAgICAgICAgIDx0aGVhZCBjbGFzc05hbWU9XCJiZy1ncmF5LTcwMCB0ZXh0LXNtIHVwcGVyY2FzZSB0ZXh0LWdyYXktMzAwXCI+XHJcbiAgICAgICAgICAgICAgPHRyPlxyXG4gICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cInAtM1wiPkVtYWlsPC90aD5cclxuICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJwLTNcIj5CYWxhbmNlPC90aD5cclxuICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJwLTNcIj5EZXBvc2l0ZWQgKDdkKTwvdGg+XHJcbiAgICAgICAgICAgICAgICA8dGggY2xhc3NOYW1lPVwicC0zXCI+V2l0aGRyYXdhbHM8L3RoPlxyXG4gICAgICAgICAgICAgIDwvdHI+XHJcbiAgICAgICAgICAgIDwvdGhlYWQ+XHJcbiAgICAgICAgICAgIDx0Ym9keT5cclxuICAgICAgICAgICAgICB7ZmlsdGVyZWRVc2Vycy5tYXAoKHVzZXIpID0+IChcclxuICAgICAgICAgICAgICAgIDx0ciBrZXk9e3VzZXIudWlkfSBjbGFzc05hbWU9XCJib3JkZXItdCBib3JkZXItZ3JheS03MDAgYWxpZ24tdG9wXCI+XHJcbiAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJwLTNcIj57dXNlci5lbWFpbCB8fCAnTi9BJ308L3RkPlxyXG4gICAgICAgICAgICAgICAgICA8dGQgY2xhc3NOYW1lPVwicC0zXCI+4oK5e3VzZXIuYmFsYW5jZX08L3RkPlxyXG4gICAgICAgICAgICAgICAgICA8dGQgY2xhc3NOYW1lPVwicC0zXCI+4oK5e3VzZXIudG90YWxEZXBvc2l0ZWR9PC90ZD5cclxuICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cInAtMyB0ZXh0LXNtXCI+XHJcbiAgICAgICAgICAgICAgICAgICAge3VzZXIud2l0aGRyYXdhbHM/Lmxlbmd0aCA+IDAgPyAoXHJcbiAgICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3NOYW1lPVwic3BhY2UteS0xXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHt1c2VyLndpdGhkcmF3YWxzLm1hcCgodywgaWR4KSA9PiAoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGtleT17aWR4fT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIOKCuXt3LmFtb3VudH0gb257JyAnfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge3cuYXBwcm92ZWRBdD8udG9Mb2NhbGVEYXRlU3RyaW5nKCl9IGF0eycgJ31cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt3LmFwcHJvdmVkQXQ/LnRvTG9jYWxlVGltZVN0cmluZyhbXSwgeyBob3VyOiAnMi1kaWdpdCcsIG1pbnV0ZTogJzItZGlnaXQnIH0pfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICkpfVxyXG4gICAgICAgICAgICAgICAgICAgICAgPC91bD5cclxuICAgICAgICAgICAgICAgICAgICApIDogKFxyXG4gICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwidGV4dC1ncmF5LTQwMFwiPk5vIHdpdGhkcmF3YWxzPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgICl9XHJcbiAgICAgICAgICAgICAgICAgIDwvdGQ+XHJcbiAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICAgICkpfVxyXG4gICAgICAgICAgICA8L3Rib2R5PlxyXG4gICAgICAgICAgPC90YWJsZT5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgKX1cclxuICAgIDwvZGl2PlxyXG4gIDwvZGl2PlxyXG48L0xheW91dD5cclxuXHJcbiAgKTtcclxufVxyXG5cclxuXHJcblxyXG5cclxuLy8gJ3VzZSBjbGllbnQnO1xyXG5cclxuLy8gaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XHJcbi8vIGltcG9ydCB7XHJcbi8vICAgZ2V0RmlyZXN0b3JlLFxyXG4vLyAgIGNvbGxlY3Rpb24sXHJcbi8vICAgZ2V0RG9jcyxcclxuLy8gICBxdWVyeSxcclxuLy8gICB3aGVyZSxcclxuLy8gICBUaW1lc3RhbXAsXHJcbi8vICAgZG9jLFxyXG4vLyAgIGdldERvYyxcclxuLy8gfSBmcm9tICdmaXJlYmFzZS9maXJlc3RvcmUnO1xyXG4vLyBpbXBvcnQgeyBnZXRBdXRoLCBvbkF1dGhTdGF0ZUNoYW5nZWQgfSBmcm9tICdmaXJlYmFzZS9hdXRoJztcclxuLy8gaW1wb3J0IGZpcmViYXNlQXBwIGZyb20gJ0AvZmlyZWJhc2UnO1xyXG4vLyBpbXBvcnQgTGF5b3V0IGZyb20gJ0AvYXBwL0NvbXBvbmVudHMvTGF5b3V0JztcclxuXHJcbi8vIGV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFBhZ2UoKSB7XHJcbi8vICAgY29uc3QgYXV0aCA9IGdldEF1dGgoZmlyZWJhc2VBcHApO1xyXG4vLyAgIGNvbnN0IGRiID0gZ2V0RmlyZXN0b3JlKGZpcmViYXNlQXBwKTtcclxuXHJcbi8vICAgY29uc3QgW3VzZXJzLCBzZXRVc2Vyc10gPSB1c2VTdGF0ZShbXSk7XHJcbi8vICAgY29uc3QgW2xvYWRpbmcsIHNldExvYWRpbmddID0gdXNlU3RhdGUodHJ1ZSk7XHJcbi8vICAgY29uc3QgW3NlYXJjaCwgc2V0U2VhcmNoXSA9IHVzZVN0YXRlKCcnKTtcclxuLy8gICBjb25zdCBbY3VycmVudFVzZXIsIHNldEN1cnJlbnRVc2VyXSA9IHVzZVN0YXRlKG51bGwpO1xyXG4vLyAgIGNvbnN0IFtyb2xlLCBzZXRSb2xlXSA9IHVzZVN0YXRlKG51bGwpO1xyXG5cclxuLy8gICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4vLyAgICAgY29uc3QgdW5zdWJzY3JpYmUgPSBvbkF1dGhTdGF0ZUNoYW5nZWQoYXV0aCwgYXN5bmMgKHVzZXIpID0+IHtcclxuLy8gICAgICAgc2V0Q3VycmVudFVzZXIodXNlcik7XHJcbi8vICAgICAgIGlmICh1c2VyKSB7XHJcbi8vICAgICAgICAgY29uc3QgdXNlclJlZiA9IGRvYyhkYiwgJ3VzZXJzJywgdXNlci51aWQpO1xyXG4vLyAgICAgICAgIGNvbnN0IHVzZXJTbmFwID0gYXdhaXQgZ2V0RG9jKHVzZXJSZWYpO1xyXG4vLyAgICAgICAgIGNvbnN0IGRhdGEgPSB1c2VyU25hcC5kYXRhKCk7XHJcbi8vICAgICAgICAgY29uc3QgdXNlclJvbGUgPSBkYXRhPy5yb2xlIHx8ICd1c2VyJztcclxuLy8gICAgICAgICBzZXRSb2xlKHVzZXJSb2xlKTtcclxuXHJcbi8vICAgICAgICAgaWYgKHVzZXJSb2xlID09PSAnYWRtaW4nIHx8IHVzZXJSb2xlID09PSAnc3ViYWRtaW4nKSB7XHJcbi8vICAgICAgICAgICBhd2FpdCBmZXRjaFVzZXJXYWxsZXREYXRhKHVzZXIudWlkLCB1c2VyUm9sZSk7XHJcbi8vICAgICAgICAgfSBlbHNlIHtcclxuLy8gICAgICAgICAgIHNldFVzZXJzKFtdKTtcclxuLy8gICAgICAgICAgIHNldExvYWRpbmcoZmFsc2UpO1xyXG4vLyAgICAgICAgIH1cclxuLy8gICAgICAgfSBlbHNlIHtcclxuLy8gICAgICAgICBzZXRMb2FkaW5nKGZhbHNlKTtcclxuLy8gICAgICAgfVxyXG4vLyAgICAgfSk7XHJcblxyXG4vLyAgICAgcmV0dXJuICgpID0+IHVuc3Vic2NyaWJlKCk7XHJcbi8vICAgfSwgW10pO1xyXG5cclxuLy8gICBjb25zdCBmZXRjaFVzZXJXYWxsZXREYXRhID0gYXN5bmMgKHVpZCwgcm9sZSkgPT4ge1xyXG4vLyAgICAgc2V0TG9hZGluZyh0cnVlKTtcclxuXHJcbi8vICAgICB0cnkge1xyXG4vLyAgICAgICBjb25zdCB3YWxsZXRDb2wgPSBjb2xsZWN0aW9uKGRiLCAnc3Vid2FsbGV0cycpO1xyXG4vLyAgICAgICBjb25zdCB3YWxsZXRRdWVyeSA9XHJcbi8vICAgICAgICAgcm9sZSA9PT0gJ2FkbWluJ1xyXG4vLyAgICAgICAgICAgPyB3YWxsZXRDb2xcclxuLy8gICAgICAgICAgIDogcXVlcnkod2FsbGV0Q29sLCB3aGVyZSgnc3ViQWRtaW5JZCcsICc9PScsIHVpZCkpO1xyXG5cclxuLy8gICAgICAgY29uc3Qgd2FsbGV0c1NuYXAgPSBhd2FpdCBnZXREb2NzKHdhbGxldFF1ZXJ5KTtcclxuXHJcbi8vICAgICAgIGNvbnN0IHdhbGxldHMgPSB3YWxsZXRzU25hcC5kb2NzLm1hcCgoZG9jKSA9PiAoe1xyXG4vLyAgICAgICAgIHVpZDogZG9jLmlkLFxyXG4vLyAgICAgICAgIGJhbGFuY2U6IGRvYy5kYXRhKCkuYmFsYW5jZSB8fCAwLFxyXG4vLyAgICAgICAgIGVtYWlsOiBkb2MuZGF0YSgpLmVtYWlsIHx8ICcnLFxyXG4vLyAgICAgICB9KSk7XHJcblxyXG4vLyAgICAgICBjb25zdCBvbmVXZWVrQWdvID0gVGltZXN0YW1wLmZyb21EYXRlKFxyXG4vLyAgICAgICAgIG5ldyBEYXRlKERhdGUubm93KCkgLSA3ICogMjQgKiA2MCAqIDYwICogMTAwMClcclxuLy8gICAgICAgKTtcclxuXHJcbi8vICAgICAgIGNvbnN0IGRlcG9zaXRRdWVyeSA9XHJcbi8vICAgICAgICAgcm9sZSA9PT0gJ2FkbWluJ1xyXG4vLyAgICAgICAgICAgPyBxdWVyeShcclxuLy8gICAgICAgICAgICAgICBjb2xsZWN0aW9uKGRiLCAnc3ViZGVwb3NpdFJlcXVlc3RzJyksXHJcbi8vICAgICAgICAgICAgICAgd2hlcmUoJ3N0YXR1cycsICc9PScsICdhcHByb3ZlZCcpLFxyXG4vLyAgICAgICAgICAgICAgIHdoZXJlKCdjcmVhdGVkQXQnLCAnPj0nLCBvbmVXZWVrQWdvKVxyXG4vLyAgICAgICAgICAgICApXHJcbi8vICAgICAgICAgICA6IHF1ZXJ5KFxyXG4vLyAgICAgICAgICAgICAgIGNvbGxlY3Rpb24oZGIsICdzdWJkZXBvc2l0UmVxdWVzdHMnKSxcclxuLy8gICAgICAgICAgICAgICB3aGVyZSgnc3RhdHVzJywgJz09JywgJ2FwcHJvdmVkJyksXHJcbi8vICAgICAgICAgICAgICAgd2hlcmUoJ2NyZWF0ZWRBdCcsICc+PScsIG9uZVdlZWtBZ28pLFxyXG4vLyAgICAgICAgICAgICAgIHdoZXJlKCdmcm9tVXNlclN1YkFkbWluSWQnLCAnPT0nLCB1aWQpXHJcbi8vICAgICAgICAgICAgICk7XHJcblxyXG4vLyAgICAgICBjb25zdCB3aXRoZHJhd1F1ZXJ5ID1cclxuLy8gICAgICAgICByb2xlID09PSAnYWRtaW4nXHJcbi8vICAgICAgICAgICA/IHF1ZXJ5KFxyXG4vLyAgICAgICAgICAgICAgIGNvbGxlY3Rpb24oZGIsICdzdWJ3aXRoZHJhd1JlcXVlc3RzJyksXHJcbi8vICAgICAgICAgICAgICAgd2hlcmUoJ3N0YXR1cycsICc9PScsICdhcHByb3ZlZCcpLFxyXG4vLyAgICAgICAgICAgICAgIHdoZXJlKCdjcmVhdGVkQXQnLCAnPj0nLCBvbmVXZWVrQWdvKVxyXG4vLyAgICAgICAgICAgICApXHJcbi8vICAgICAgICAgICA6IHF1ZXJ5KFxyXG4vLyAgICAgICAgICAgICAgIGNvbGxlY3Rpb24oZGIsICdzdWJ3aXRoZHJhd1JlcXVlc3RzJyksXHJcbi8vICAgICAgICAgICAgICAgd2hlcmUoJ3N0YXR1cycsICc9PScsICdhcHByb3ZlZCcpLFxyXG4vLyAgICAgICAgICAgICAgIHdoZXJlKCdjcmVhdGVkQXQnLCAnPj0nLCBvbmVXZWVrQWdvKSxcclxuLy8gICAgICAgICAgICAgICB3aGVyZSgnZnJvbVVzZXJTdWJBZG1pbklkJywgJz09JywgdWlkKVxyXG4vLyAgICAgICAgICAgICApO1xyXG5cclxuLy8gICAgICAgY29uc3QgW2RlcG9zaXRTbmFwLCB3aXRoZHJhd1NuYXBdID0gYXdhaXQgUHJvbWlzZS5hbGwoW1xyXG4vLyAgICAgICAgIGdldERvY3MoZGVwb3NpdFF1ZXJ5KSxcclxuLy8gICAgICAgICBnZXREb2NzKHdpdGhkcmF3UXVlcnkpLFxyXG4vLyAgICAgICBdKTtcclxuXHJcbi8vICAgICAgIGNvbnN0IGRlcG9zaXRNYXAgPSB7fTtcclxuLy8gICAgICAgZGVwb3NpdFNuYXAuZm9yRWFjaCgoZG9jKSA9PiB7XHJcbi8vICAgICAgICAgY29uc3QgZGF0YSA9IGRvYy5kYXRhKCk7XHJcbi8vICAgICAgICAgaWYgKCFkYXRhLnVpZCkgcmV0dXJuO1xyXG4vLyAgICAgICAgIGlmICghZGVwb3NpdE1hcFtkYXRhLnVpZF0pIGRlcG9zaXRNYXBbZGF0YS51aWRdID0gMDtcclxuLy8gICAgICAgICBkZXBvc2l0TWFwW2RhdGEudWlkXSArPSBkYXRhLmFtb3VudCB8fCAwO1xyXG4vLyAgICAgICB9KTtcclxuXHJcbi8vICAgICAgIGNvbnN0IHdpdGhkcmF3TWFwID0ge307XHJcbi8vICAgICAgIHdpdGhkcmF3U25hcC5mb3JFYWNoKChkb2MpID0+IHtcclxuLy8gICAgICAgICBjb25zdCBkYXRhID0gZG9jLmRhdGEoKTtcclxuLy8gICAgICAgICBpZiAoIWRhdGEudWlkKSByZXR1cm47XHJcbi8vICAgICAgICAgaWYgKCF3aXRoZHJhd01hcFtkYXRhLnVpZF0pIHdpdGhkcmF3TWFwW2RhdGEudWlkXSA9IDA7XHJcbi8vICAgICAgICAgd2l0aGRyYXdNYXBbZGF0YS51aWRdICs9IGRhdGEuYW1vdW50IHx8IDA7XHJcbi8vICAgICAgIH0pO1xyXG5cclxuLy8gICAgICAgY29uc3QgZmluYWxVc2VycyA9IHdhbGxldHMubWFwKCh1c2VyKSA9PiAoe1xyXG4vLyAgICAgICAgIC4uLnVzZXIsXHJcbi8vICAgICAgICAgdG90YWxEZXBvc2l0ZWQ6IGRlcG9zaXRNYXBbdXNlci51aWRdIHx8IDAsXHJcbi8vICAgICAgICAgdG90YWxXaXRoZHJhd246IHdpdGhkcmF3TWFwW3VzZXIudWlkXSB8fCAwLFxyXG4vLyAgICAgICB9KSk7XHJcblxyXG4vLyAgICAgICBzZXRVc2VycyhmaW5hbFVzZXJzKTtcclxuLy8gICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbi8vICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIHdhbGxldCBkYXRhOicsIGVycm9yKTtcclxuLy8gICAgICAgYWxlcnQoJ0Vycm9yIGxvYWRpbmcgd2FsbGV0IGRhdGEuJyk7XHJcbi8vICAgICB9XHJcblxyXG4vLyAgICAgc2V0TG9hZGluZyhmYWxzZSk7XHJcbi8vICAgfTtcclxuXHJcbi8vICAgY29uc3QgZXhwb3J0VG9DU1YgPSAoKSA9PiB7XHJcbi8vICAgICBjb25zdCBoZWFkZXJzID0gWydFbWFpbCcsICdCYWxhbmNlJywgJ0RlcG9zaXRlZCAoNyBkYXlzKScsICdXaXRoZHJhd24gKDcgZGF5cyknXTtcclxuLy8gICAgIGNvbnN0IHJvd3MgPSB1c2Vycy5tYXAoKHUpID0+IFt1LmVtYWlsLCB1LmJhbGFuY2UsIHUudG90YWxEZXBvc2l0ZWQsIHUudG90YWxXaXRoZHJhd25dKTtcclxuLy8gICAgIGNvbnN0IGNzdkNvbnRlbnQgPSBbaGVhZGVycywgLi4ucm93c10ubWFwKChyKSA9PiByLmpvaW4oJywnKSkuam9pbignXFxuJyk7XHJcblxyXG4vLyAgICAgY29uc3QgYmxvYiA9IG5ldyBCbG9iKFtjc3ZDb250ZW50XSwgeyB0eXBlOiAndGV4dC9jc3Y7Y2hhcnNldD11dGYtODsnIH0pO1xyXG4vLyAgICAgY29uc3QgdXJsID0gVVJMLmNyZWF0ZU9iamVjdFVSTChibG9iKTtcclxuLy8gICAgIGNvbnN0IGxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7XHJcbi8vICAgICBsaW5rLnNldEF0dHJpYnV0ZSgnaHJlZicsIHVybCk7XHJcbi8vICAgICBsaW5rLnNldEF0dHJpYnV0ZSgnZG93bmxvYWQnLCAndXNlcl93YWxsZXRzLmNzdicpO1xyXG4vLyAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChsaW5rKTtcclxuLy8gICAgIGxpbmsuY2xpY2soKTtcclxuLy8gICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQobGluayk7XHJcbi8vICAgfTtcclxuXHJcbi8vICAgY29uc3QgZmlsdGVyZWRVc2VycyA9IHVzZXJzLmZpbHRlcigodSkgPT5cclxuLy8gICAgIHUuZW1haWwudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhzZWFyY2gudG9Mb3dlckNhc2UoKSlcclxuLy8gICApO1xyXG5cclxuLy8gICByZXR1cm4gKFxyXG4vLyAgICAgPExheW91dD5cclxuLy8gICAgICAgPGRpdiBjbGFzc05hbWU9XCJtaW4taC1zY3JlZW4gYmctZ3JheS05MDAgdGV4dC13aGl0ZSBwLThcIj5cclxuLy8gICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1heC13LTV4bCBteC1hdXRvXCI+XHJcbi8vICAgICAgICAgICA8aDEgY2xhc3NOYW1lPVwidGV4dC0zeGwgZm9udC1ib2xkIG1iLTZcIj5cclxuLy8gICAgICAgICAgICAge3JvbGUgPT09ICdhZG1pbidcclxuLy8gICAgICAgICAgICAgICA/ICdBZG1pbjogQWxsIFN1YmFkbWluICYgVXNlciBXYWxsZXRzJ1xyXG4vLyAgICAgICAgICAgICAgIDogJ1N1YmFkbWluOiBZb3VyIFVzZXIgV2FsbGV0cyd9XHJcbi8vICAgICAgICAgICA8L2gxPlxyXG5cclxuLy8gICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTQgbWItNlwiPlxyXG4vLyAgICAgICAgICAgICA8aW5wdXRcclxuLy8gICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiXHJcbi8vICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJTZWFyY2ggYnkgZW1haWwuLi5cIlxyXG4vLyAgICAgICAgICAgICAgIHZhbHVlPXtzZWFyY2h9XHJcbi8vICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiBzZXRTZWFyY2goZS50YXJnZXQudmFsdWUpfVxyXG4vLyAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInB4LTQgcHktMiByb3VuZGVkIGJnLWdyYXktODAwIGJvcmRlciBib3JkZXItZ3JheS02MDAgZm9jdXM6b3V0bGluZS1ub25lXCJcclxuLy8gICAgICAgICAgICAgLz5cclxuLy8gICAgICAgICAgICAgPGJ1dHRvblxyXG4vLyAgICAgICAgICAgICAgIG9uQ2xpY2s9e2V4cG9ydFRvQ1NWfVxyXG4vLyAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInB4LTQgcHktMiBiZy15ZWxsb3ctNTAwIGhvdmVyOmJnLXllbGxvdy02MDAgdGV4dC1ibGFjayByb3VuZGVkIGZvbnQtc2VtaWJvbGRcIlxyXG4vLyAgICAgICAgICAgICA+XHJcbi8vICAgICAgICAgICAgICAgRXhwb3J0IENTVlxyXG4vLyAgICAgICAgICAgICA8L2J1dHRvbj5cclxuLy8gICAgICAgICAgIDwvZGl2PlxyXG5cclxuLy8gICAgICAgICAgIHtsb2FkaW5nID8gKFxyXG4vLyAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0LXllbGxvdy0zMDBcIj5Mb2FkaW5nLi4uPC9wPlxyXG4vLyAgICAgICAgICAgKSA6IGZpbHRlcmVkVXNlcnMubGVuZ3RoID09PSAwID8gKFxyXG4vLyAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0LWdyYXktNDAwXCI+Tm8gdXNlcnMgZm91bmQuPC9wPlxyXG4vLyAgICAgICAgICAgKSA6IChcclxuLy8gICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJvdmVyZmxvdy14LWF1dG8gYmctZ3JheS04MDAgcm91bmRlZC1sZyBzaGFkb3cteGxcIj5cclxuLy8gICAgICAgICAgICAgICA8dGFibGUgY2xhc3NOYW1lPVwidy1mdWxsIHRleHQtbGVmdCB0YWJsZS1hdXRvXCI+XHJcbi8vICAgICAgICAgICAgICAgICA8dGhlYWQgY2xhc3NOYW1lPVwiYmctZ3JheS03MDAgdGV4dC1zbSB1cHBlcmNhc2UgdGV4dC1ncmF5LTMwMFwiPlxyXG4vLyAgICAgICAgICAgICAgICAgICA8dHI+XHJcbi8vICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cInAtM1wiPkVtYWlsPC90aD5cclxuLy8gICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3NOYW1lPVwicC0zXCI+QmFsYW5jZTwvdGg+XHJcbi8vICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cInAtM1wiPkRlcG9zaXRlZCAoN2QpPC90aD5cclxuLy8gICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3NOYW1lPVwicC0zXCI+V2l0aGRyYXduICg3ZCk8L3RoPlxyXG4vLyAgICAgICAgICAgICAgICAgICA8L3RyPlxyXG4vLyAgICAgICAgICAgICAgICAgPC90aGVhZD5cclxuLy8gICAgICAgICAgICAgICAgIDx0Ym9keT5cclxuLy8gICAgICAgICAgICAgICAgICAge2ZpbHRlcmVkVXNlcnMubWFwKCh1c2VyKSA9PiAoXHJcbi8vICAgICAgICAgICAgICAgICAgICAgPHRyIGtleT17dXNlci51aWR9IGNsYXNzTmFtZT1cImJvcmRlci10IGJvcmRlci1ncmF5LTcwMFwiPlxyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cInAtM1wiPnt1c2VyLmVtYWlsIHx8ICdOL0EnfTwvdGQ+XHJcbi8vICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3NOYW1lPVwicC0zXCI+4oK5e3VzZXIuYmFsYW5jZX08L3RkPlxyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cInAtM1wiPuKCuXt1c2VyLnRvdGFsRGVwb3NpdGVkfTwvdGQ+XHJcbi8vICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3NOYW1lPVwicC0zXCI+4oK5e3VzZXIudG90YWxXaXRoZHJhd259PC90ZD5cclxuLy8gICAgICAgICAgICAgICAgICAgICA8L3RyPlxyXG4vLyAgICAgICAgICAgICAgICAgICApKX1cclxuLy8gICAgICAgICAgICAgICAgIDwvdGJvZHk+XHJcbi8vICAgICAgICAgICAgICAgPC90YWJsZT5cclxuLy8gICAgICAgICAgICAgPC9kaXY+XHJcbi8vICAgICAgICAgICApfVxyXG4vLyAgICAgICAgIDwvZGl2PlxyXG4vLyAgICAgICA8L2Rpdj5cclxuLy8gICAgIDwvTGF5b3V0PlxyXG4vLyAgICk7XHJcbi8vIH1cclxuIl0sIm5hbWVzIjpbIlJlYWN0IiwidXNlRWZmZWN0IiwidXNlU3RhdGUiLCJnZXRGaXJlc3RvcmUiLCJjb2xsZWN0aW9uIiwiZ2V0RG9jcyIsInF1ZXJ5Iiwid2hlcmUiLCJUaW1lc3RhbXAiLCJkb2MiLCJnZXREb2MiLCJnZXRBdXRoIiwib25BdXRoU3RhdGVDaGFuZ2VkIiwiZmlyZWJhc2VBcHAiLCJMYXlvdXQiLCJBZG1pblVzZXJXYWxsZXRzUGFnZSIsImF1dGgiLCJkYiIsInVzZXJzIiwic2V0VXNlcnMiLCJsb2FkaW5nIiwic2V0TG9hZGluZyIsInNlYXJjaCIsInNldFNlYXJjaCIsImN1cnJlbnRVc2VyIiwic2V0Q3VycmVudFVzZXIiLCJyb2xlIiwic2V0Um9sZSIsInVuc3Vic2NyaWJlIiwidXNlciIsInVzZXJSZWYiLCJ1aWQiLCJ1c2VyU25hcCIsImRhdGEiLCJ1c2VyUm9sZSIsImZldGNoVXNlcldhbGxldERhdGEiLCJleHBvcnRUb0NTViIsImhlYWRlcnMiLCJyb3dzIiwibWFwIiwidSIsIndpdGhkcmF3YWxEZXRhaWxzIiwid2l0aGRyYXdhbHMiLCJ3IiwiYW1vdW50IiwiYXBwcm92ZWRBdCIsInRvTG9jYWxlRGF0ZVN0cmluZyIsInRvTG9jYWxlVGltZVN0cmluZyIsImhvdXIiLCJtaW51dGUiLCJqb2luIiwiZW1haWwiLCJiYWxhbmNlIiwidG90YWxEZXBvc2l0ZWQiLCJjc3ZDb250ZW50IiwiciIsImJsb2IiLCJCbG9iIiwidHlwZSIsInVybCIsIlVSTCIsImNyZWF0ZU9iamVjdFVSTCIsImxpbmsiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGUiLCJib2R5IiwiYXBwZW5kQ2hpbGQiLCJjbGljayIsInJlbW92ZUNoaWxkIiwiZmlsdGVyZWRVc2VycyIsImZpbHRlciIsInRvTG93ZXJDYXNlIiwiaW5jbHVkZXMiLCJkaXYiLCJjbGFzc05hbWUiLCJoMSIsImlucHV0IiwicGxhY2Vob2xkZXIiLCJ2YWx1ZSIsIm9uQ2hhbmdlIiwiZSIsInRhcmdldCIsImJ1dHRvbiIsIm9uQ2xpY2siLCJwIiwibGVuZ3RoIiwidGFibGUiLCJ0aGVhZCIsInRyIiwidGgiLCJ0Ym9keSIsInRkIiwidWwiLCJpZHgiLCJsaSIsInNwYW4iXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/app/user-details/page.js\n"));

/***/ })

});