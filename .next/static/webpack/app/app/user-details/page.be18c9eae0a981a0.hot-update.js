"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/app/user-details/page",{

/***/ "(app-pages-browser)/./src/app/app/user-details/page.js":
/*!******************************************!*\
  !*** ./src/app/app/user-details/page.js ***!
  \******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ AdminUserWalletsPage)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! firebase/firestore */ \"(app-pages-browser)/./node_modules/firebase/firestore/dist/esm/index.esm.js\");\n/* harmony import */ var firebase_auth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! firebase/auth */ \"(app-pages-browser)/./node_modules/firebase/auth/dist/esm/index.esm.js\");\n/* harmony import */ var _firebase__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/firebase */ \"(app-pages-browser)/./src/firebase.js\");\n/* harmony import */ var _app_Components_Layout__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/app/Components/Layout */ \"(app-pages-browser)/./src/app/Components/Layout/index.js\");\n// 'use client';\n// import React, { useEffect, useState } from 'react';\n// import {\n//   getFirestore,\n//   collection,\n//   getDocs,\n//   query,\n//   where,\n// } from 'firebase/firestore';\n// import firebaseApp from '@/firebase';\n// import Layout from '@/app/Components/Layout';\n// export default function AdminUserWalletsPage() {\n//   const db = getFirestore(firebaseApp);\n//   const [users, setUsers] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [search, setSearch] = useState('');\n//   useEffect(() => {\n//     fetchUserWalletData();\n//   }, []);\n//   const fetchUserWalletData = async () => {\n//     setLoading(true);\n//     try {\n//       const walletsSnap = await getDocs(collection(db, 'wallets'));\n//       const wallets = walletsSnap.docs.map((doc) => ({\n//         uid: doc.id,\n//         balance: doc.data().balance || 0,\n//         email: doc.data().email || '',\n//       }));\n//       const depositSnap = await getDocs(\n//         query(collection(db, 'depositRequests'), where('status', '==', 'approved'))\n//       );\n//       const withdrawSnap = await getDocs(\n//         query(collection(db, 'withdrawRequests'), where('status', '==', 'approved'))\n//       );\n//       const depositMap = {};\n//       depositSnap.forEach((doc) => {\n//         const data = doc.data();\n//         if (!depositMap[data.uid]) depositMap[data.uid] = 0;\n//         depositMap[data.uid] += data.amount || 0;\n//       });\n//       const withdrawMap = {};\n//       withdrawSnap.forEach((doc) => {\n//         const data = doc.data();\n//         if (!withdrawMap[data.uid]) withdrawMap[data.uid] = 0;\n//         withdrawMap[data.uid] += data.amount || 0;\n//       });\n//       const finalUsers = wallets.map((user) => ({\n//         ...user,\n//         totalDeposited: depositMap[user.uid] || 0,\n//         totalWithdrawn: withdrawMap[user.uid] || 0,\n//       }));\n//       setUsers(finalUsers);\n//     } catch (error) {\n//       console.error('Error fetching user wallet data:', error);\n//       alert('Error loading wallet data.');\n//     }\n//     setLoading(false);\n//   };\n//   const exportToCSV = () => {\n//     const headers = ['Email', 'Balance', 'Deposited', 'Withdrawn'];\n//     const rows = users.map(u => [u.email, u.balance, u.totalDeposited, u.totalWithdrawn]);\n//     const csvContent = [headers, ...rows].map(r => r.join(',')).join('\\n');\n//     const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n//     const url = URL.createObjectURL(blob);\n//     const link = document.createElement('a');\n//     link.setAttribute('href', url);\n//     link.setAttribute('download', 'user_wallets.csv');\n//     document.body.appendChild(link);\n//     link.click();\n//     document.body.removeChild(link);\n//   };\n//   const filteredUsers = users.filter(u =>\n//     u.email.toLowerCase().includes(search.toLowerCase())\n//   );\n//   return (\n//     <Layout>\n//       <div className=\"min-h-screen bg-gray-900 text-white p-8\">\n//         <div className=\"max-w-5xl mx-auto\">\n//           <h1 className=\"text-3xl font-bold mb-6\">Admin: User Wallet Overview</h1>\n//           <div className=\"flex items-center gap-4 mb-6\">\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search by email...\"\n//               value={search}\n//               onChange={(e) => setSearch(e.target.value)}\n//               className=\"px-4 py-2 rounded bg-gray-800 border border-gray-600 focus:outline-none\"\n//             />\n//             <button\n//               onClick={exportToCSV}\n//               className=\"px-4 py-2 bg-yellow-500 hover:bg-yellow-600 text-black rounded font-semibold\"\n//             >\n//               Export CSV\n//             </button>\n//           </div>\n//           {loading ? (\n//             <p className=\"text-yellow-300\">Loading...</p>\n//           ) : filteredUsers.length === 0 ? (\n//             <p className=\"text-gray-400\">No users found.</p>\n//           ) : (\n//             <div className=\"overflow-x-auto bg-gray-800 rounded-lg shadow-xl\">\n//               <table className=\"w-full text-left table-auto\">\n//                 <thead className=\"bg-gray-700 text-sm uppercase text-gray-300\">\n//                   <tr>\n//                     <th className=\"p-3\">Email</th>\n//                     <th className=\"p-3\">Balance</th>\n//                     <th className=\"p-3\">Deposited</th>\n//                     <th className=\"p-3\">Withdrawn</th>\n//                   </tr>\n//                 </thead>\n//                 <tbody>\n//                   {filteredUsers.map((user) => (\n//                     <tr key={user.uid} className=\"border-t border-gray-700\">\n//                       <td className=\"p-3\">{user.email || 'N/A'}</td>\n//                       <td className=\"p-3\">₹{user.balance}</td>\n//                       <td className=\"p-3\">₹{user.totalDeposited}</td>\n//                       <td className=\"p-3\">₹{user.totalWithdrawn}</td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             </div>\n//           )}\n//         </div>\n//       </div>\n//     </Layout>\n//   );\n// }\n// 'use client';\n// import React, { useEffect, useState } from 'react';\n// import {\n//   getFirestore,\n//   collection,\n//   getDocs,\n//   query,\n//   where,\n//   Timestamp,\n// } from 'firebase/firestore';\n// import firebaseApp from '@/firebase';\n// import Layout from '@/app/Components/Layout';\n// export default function AdminUserWalletsPage() {\n//   const db = getFirestore(firebaseApp);\n//   const [users, setUsers] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [search, setSearch] = useState('');\n//   useEffect(() => {\n//     fetchUserWalletData();\n//   }, []);\n//   const fetchUserWalletData = async () => {\n//     setLoading(true);\n//     try {\n//       const walletsSnap = await getDocs(collection(db, 'wallets'));\n//       const wallets = walletsSnap.docs.map((doc) => ({\n//         uid: doc.id,\n//         balance: doc.data().balance || 0,\n//         email: doc.data().email || '',\n//       }));\n//       const oneWeekAgo = Timestamp.fromDate(new Date(Date.now() - 7 * 24 * 60 * 60 * 1000));\n//       const depositSnap = await getDocs(\n//         query(\n//           collection(db, 'depositRequests'),\n//           where('status', '==', 'approved'),\n//           where('createdAt', '>=', oneWeekAgo)\n//         )\n//       );\n//       const withdrawSnap = await getDocs(\n//         query(\n//           collection(db, 'withdrawRequests'),\n//           where('status', '==', 'approved'),\n//           where('createdAt', '>=', oneWeekAgo)\n//         )\n//       );\n//       const depositMap = {};\n//       depositSnap.forEach((doc) => {\n//         const data = doc.data();\n//         if (!depositMap[data.uid]) depositMap[data.uid] = 0;\n//         depositMap[data.uid] += data.amount || 0;\n//       });\n//       const withdrawMap = {};\n//       withdrawSnap.forEach((doc) => {\n//         const data = doc.data();\n//         if (!withdrawMap[data.uid]) withdrawMap[data.uid] = 0;\n//         withdrawMap[data.uid] += data.amount || 0;\n//       });\n//       const finalUsers = wallets.map((user) => ({\n//         ...user,\n//         totalDeposited: depositMap[user.uid] || 0,\n//         totalWithdrawn: withdrawMap[user.uid] || 0,\n//       }));\n//       setUsers(finalUsers);\n//     } catch (error) {\n//       console.error('Error fetching user wallet data:', error);\n//       alert('Error loading wallet data.');\n//     }\n//     setLoading(false);\n//   };\n//   const exportToCSV = () => {\n//     const headers = ['Email', 'Balance', 'Deposited (7 days)', 'Withdrawn (7 days)'];\n//     const rows = users.map(u => [u.email, u.balance, u.totalDeposited, u.totalWithdrawn]);\n//     const csvContent = [headers, ...rows].map(r => r.join(',')).join('\\n');\n//     const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n//     const url = URL.createObjectURL(blob);\n//     const link = document.createElement('a');\n//     link.setAttribute('href', url);\n//     link.setAttribute('download', 'user_wallets.csv');\n//     document.body.appendChild(link);\n//     link.click();\n//     document.body.removeChild(link);\n//   };\n//   const filteredUsers = users.filter(u =>\n//     u.email.toLowerCase().includes(search.toLowerCase())\n//   );\n//   return (\n//     <Layout>\n//       <div className=\"min-h-screen bg-gray-900 text-white p-8\">\n//         <div className=\"max-w-5xl mx-auto\">\n//           <h1 className=\"text-3xl font-bold mb-6\">Admin: User Wallet Overview</h1>\n//           <div className=\"flex items-center gap-4 mb-6\">\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search by email...\"\n//               value={search}\n//               onChange={(e) => setSearch(e.target.value)}\n//               className=\"px-4 py-2 rounded bg-gray-800 border border-gray-600 focus:outline-none\"\n//             />\n//             <button\n//               onClick={exportToCSV}\n//               className=\"px-4 py-2 bg-yellow-500 hover:bg-yellow-600 text-black rounded font-semibold\"\n//             >\n//               Export CSV\n//             </button>\n//           </div>\n//           {loading ? (\n//             <p className=\"text-yellow-300\">Loading...</p>\n//           ) : filteredUsers.length === 0 ? (\n//             <p className=\"text-gray-400\">No users found.</p>\n//           ) : (\n//             <div className=\"overflow-x-auto bg-gray-800 rounded-lg shadow-xl\">\n//               <table className=\"w-full text-left table-auto\">\n//                 <thead className=\"bg-gray-700 text-sm uppercase text-gray-300\">\n//                   <tr>\n//                     <th className=\"p-3\">Email</th>\n//                     <th className=\"p-3\">Balance</th>\n//                     <th className=\"p-3\">Deposited (7d)</th>\n//                     <th className=\"p-3\">Withdrawn (7d)</th>\n//                   </tr>\n//                 </thead>\n//                 <tbody>\n//                   {filteredUsers.map((user) => (\n//                     <tr key={user.uid} className=\"border-t border-gray-700\">\n//                       <td className=\"p-3\">{user.email || 'N/A'}</td>\n//                       <td className=\"p-3\">₹{user.balance}</td>\n//                       <td className=\"p-3\">₹{user.totalDeposited}</td>\n//                       <td className=\"p-3\">₹{user.totalWithdrawn}</td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             </div>\n//           )}\n//         </div>\n//       </div>\n//     </Layout>\n//   );\n// }\n// 'use client';\n// import React, { useEffect, useState } from 'react';\n// import {\n//   getFirestore,\n//   collection,\n//   getDocs,\n//   query,\n//   where,\n//   Timestamp,\n// } from 'firebase/firestore';\n// import firebaseApp from '@/firebase';\n// import Layout from '@/app/Components/Layout';\n// export default function AdminUserWalletsPage() {\n//   const db = getFirestore(firebaseApp);\n//   const [users, setUsers] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [search, setSearch] = useState('');\n//   const [selectedUser, setSelectedUser] = useState(null);\n//   const [history, setHistory] = useState({ deposits: [], withdrawals: [] });\n//   const [historyLoading, setHistoryLoading] = useState(false);\n//   useEffect(() => {\n//     fetchUserWalletData();\n//   }, []);\n//   const fetchUserWalletData = async () => {\n//     setLoading(true);\n//     try {\n//       const walletsSnap = await getDocs(collection(db, 'wallets'));\n//       const wallets = walletsSnap.docs.map((doc) => ({\n//         uid: doc.id,\n//         balance: doc.data().balance || 0,\n//         email: doc.data().email || '',\n//       }));\n//       const oneWeekAgo = Timestamp.fromDate(new Date(Date.now() - 7 * 24 * 60 * 60 * 1000));\n//       const depositSnap = await getDocs(\n//         query(\n//           collection(db, 'depositRequests'),\n//           where('status', '==', 'approved'),\n//           where('createdAt', '>=', oneWeekAgo)\n//         )\n//       );\n//       const withdrawSnap = await getDocs(\n//         query(\n//           collection(db, 'withdrawRequests'),\n//           where('status', '==', 'approved'),\n//           where('createdAt', '>=', oneWeekAgo)\n//         )\n//       );\n//       const depositMap = {};\n//       depositSnap.forEach((doc) => {\n//         const data = doc.data();\n//         if (!depositMap[data.uid]) depositMap[data.uid] = 0;\n//         depositMap[data.uid] += data.amount || 0;\n//       });\n//       const withdrawMap = {};\n//       withdrawSnap.forEach((doc) => {\n//         const data = doc.data();\n//         if (!withdrawMap[data.uid]) withdrawMap[data.uid] = 0;\n//         withdrawMap[data.uid] += data.amount || 0;\n//       });\n//       const finalUsers = wallets.map((user) => ({\n//         ...user,\n//         totalDeposited: depositMap[user.uid] || 0,\n//         totalWithdrawn: withdrawMap[user.uid] || 0,\n//       }));\n//       setUsers(finalUsers);\n//     } catch (error) {\n//       console.error('Error fetching user wallet data:', error);\n//       alert('Error loading wallet data.');\n//     }\n//     setLoading(false);\n//   };\n//   const fetchUserHistory = async (uid) => {\n//     setHistoryLoading(true);\n//     try {\n//       const depositsSnap = await getDocs(\n//         query(collection(db, 'depositRequests'), where('uid', '==', uid))\n//       );\n//       const withdrawalsSnap = await getDocs(\n//         query(collection(db, 'withdrawRequests'), where('uid', '==', uid))\n//       );\n//       const deposits = depositsSnap.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\n//       const withdrawals = withdrawalsSnap.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\n//       setHistory({ deposits, withdrawals });\n//     } catch (error) {\n//       console.error('Error loading history:', error);\n//     }\n//     setHistoryLoading(false);\n//   };\n//   const exportToCSV = () => {\n//     const headers = ['Email', 'Balance', 'Deposited (7 days)', 'Withdrawn (7 days)'];\n//     const rows = users.map(u => [u.email, u.balance, u.totalDeposited, u.totalWithdrawn]);\n//     const csvContent = [headers, ...rows].map(r => r.join(',')).join('\\n');\n//     const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n//     const url = URL.createObjectURL(blob);\n//     const link = document.createElement('a');\n//     link.setAttribute('href', url);\n//     link.setAttribute('download', 'user_wallets.csv');\n//     document.body.appendChild(link);\n//     link.click();\n//     document.body.removeChild(link);\n//   };\n//   const filteredUsers = users.filter(u =>\n//     u.email.toLowerCase().includes(search.toLowerCase())\n//   );\n//   return (\n//     <Layout>\n//       <div className=\"min-h-screen bg-gray-900 text-white p-8\">\n//         <div className=\"max-w-6xl mx-auto\">\n//           <h1 className=\"text-3xl font-bold mb-6\">Admin: User Wallet Overview</h1>\n//           <div className=\"flex items-center gap-4 mb-6\">\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search by email...\"\n//               value={search}\n//               onChange={(e) => setSearch(e.target.value)}\n//               className=\"px-4 py-2 rounded bg-gray-800 border border-gray-600 focus:outline-none\"\n//             />\n//             <button\n//               onClick={exportToCSV}\n//               className=\"px-4 py-2 bg-yellow-500 hover:bg-yellow-600 text-black rounded font-semibold\"\n//             >\n//               Export CSV\n//             </button>\n//           </div>\n//           {loading ? (\n//             <p className=\"text-yellow-300\">Loading...</p>\n//           ) : filteredUsers.length === 0 ? (\n//             <p className=\"text-gray-400\">No users found.</p>\n//           ) : (\n//             <div className=\"overflow-x-auto bg-gray-800 rounded-lg shadow-xl\">\n//               <table className=\"w-full text-left table-auto\">\n//                 <thead className=\"bg-gray-700 text-sm uppercase text-gray-300\">\n//                   <tr>\n//                     <th className=\"p-3\">Email</th>\n//                     <th className=\"p-3\">Balance</th>\n//                     <th className=\"p-3\">Deposited (7d)</th>\n//                     <th className=\"p-3\">Withdrawn (7d)</th>\n//                     <th className=\"p-3\">History</th>\n//                   </tr>\n//                 </thead>\n//                 <tbody>\n//                   {filteredUsers.map((user) => (\n//                     <tr key={user.uid} className=\"border-t border-gray-700\">\n//                       <td className=\"p-3\">{user.email || 'N/A'}</td>\n//                       <td className=\"p-3\">₹{user.balance}</td>\n//                       <td className=\"p-3\">₹{user.totalDeposited}</td>\n//                       <td className=\"p-3\">₹{user.totalWithdrawn}</td>\n//                       <td className=\"p-3\">\n//                         <button\n//                           className=\"text-blue-400 underline\"\n//                           onClick={() => {\n//                             setSelectedUser(user);\n//                             fetchUserHistory(user.uid);\n//                           }}\n//                         >\n//                           View\n//                         </button>\n//                       </td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             </div>\n//           )}\n//           {/* Transaction history modal */}\n//           {selectedUser && (\n//             <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n//               <div className=\"bg-gray-900 p-6 rounded-lg w-full max-w-3xl relative\">\n//                 <h2 className=\"text-2xl font-bold mb-4\">\n//                   {selectedUser.email} - Transaction History\n//                 </h2>\n//                 <button\n//                   className=\"absolute top-3 right-3 text-gray-400 hover:text-white\"\n//                   onClick={() => setSelectedUser(null)}\n//                 >\n//                   ✕\n//                 </button>\n//                 {historyLoading ? (\n//                   <p className=\"text-yellow-300\">Loading history...</p>\n//                 ) : (\n//                   <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n//                     <div>\n//                       <h3 className=\"text-lg font-semibold mb-2\">Deposits</h3>\n//                       {history.deposits.length === 0 ? (\n//                         <p className=\"text-gray-400\">No deposit history.</p>\n//                       ) : (\n//                         <ul className=\"space-y-2 text-sm\">\n//                           {history.deposits.map((d) => (\n//                             <li key={d.id} className=\"bg-gray-800 p-2 rounded\">\n//                               ₹{d.amount} - {d.status} - {d.createdAt?.toDate().toLocaleString()}\n//                             </li>\n//                           ))}\n//                         </ul>\n//                       )}\n//                     </div>\n//                     <div>\n//                       <h3 className=\"text-lg font-semibold mb-2\">Withdrawals</h3>\n//                       {history.withdrawals.length === 0 ? (\n//                         <p className=\"text-gray-400\">No withdrawal history.</p>\n//                       ) : (\n//                         <ul className=\"space-y-2 text-sm\">\n//                           {history.withdrawals.map((w) => (\n//                             <li key={w.id} className=\"bg-gray-800 p-2 rounded\">\n//                               ₹{w.amount} - {w.status} - {w.createdAt?.toDate().toLocaleString()}\n//                             </li>\n//                           ))}\n//                         </ul>\n//                       )}\n//                     </div>\n//                   </div>\n//                 )}\n//               </div>\n//             </div>\n//           )}\n//         </div>\n//       </div>\n//     </Layout>\n//   );\n// }\n// 'use client';\n// import React, { useEffect, useState } from 'react';\n// import {\n//   getFirestore,\n//   collection,\n//   getDocs,\n//   query,\n//   where,\n//   Timestamp,\n//   doc,\n//   getDoc,\n// } from 'firebase/firestore';\n// import { getAuth, onAuthStateChanged } from 'firebase/auth';\n// import firebaseApp from '@/firebase';\n// import Layout from '@/app/Components/Layout';\n// export default function AdminUserWalletsPage() {\n//   const auth = getAuth(firebaseApp);\n//   const db = getFirestore(firebaseApp);\n//   const [users, setUsers] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [search, setSearch] = useState('');\n//   const [currentUser, setCurrentUser] = useState(null);\n//   const [role, setRole] = useState(null);\n//   useEffect(() => {\n//     const unsubscribe = onAuthStateChanged(auth, async (user) => {\n//       setCurrentUser(user);\n//       if (user) {\n//         const userRef = doc(db, 'users', user.uid);\n//         const userSnap = await getDoc(userRef);\n//         const data = userSnap.data();\n//         const userRole = data?.role || 'user';\n//         setRole(userRole);\n//         if (userRole === 'admin' || userRole === 'subadmin') {\n//           await fetchUserWalletData(user.uid, userRole);\n//         } else {\n//           setUsers([]);\n//           setLoading(false);\n//         }\n//       } else {\n//         setLoading(false);\n//       }\n//     });\n//     return () => unsubscribe();\n//   }, []);\n//   const fetchUserWalletData = async (uid, role) => {\n//     setLoading(true);\n//     try {\n//       const walletCol = collection(db, 'subwallets');\n//       let walletQuery;\n//       if (role === 'admin') {\n//         walletQuery = walletCol; // get all\n//       } else {\n//         walletQuery = query(walletCol, where('subAdminId', '==', uid)); // only their users\n//       }\n//       const walletsSnap = await getDocs(walletQuery);\n//       const wallets = walletsSnap.docs.map((doc) => ({\n//         uid: doc.id,\n//         balance: doc.data().balance || 0,\n//         email: doc.data().email || '',\n//       }));\n//       const oneWeekAgo = Timestamp.fromDate(new Date(Date.now() - 7 * 24 * 60 * 60 * 1000));\n//       const depositSnap = await getDocs(\n//         query(\n//           collection(db, 'depositRequests'),\n//           where('status', '==', 'approved'),\n//           where('createdAt', '>=', oneWeekAgo)\n//         )\n//       );\n//       const withdrawSnap = await getDocs(\n//         query(\n//           collection(db, 'withdrawRequests'),\n//           where('status', '==', 'approved'),\n//           where('createdAt', '>=', oneWeekAgo)\n//         )\n//       );\n//       const depositMap = {};\n//       depositSnap.forEach((doc) => {\n//         const data = doc.data();\n//         if (!depositMap[data.uid]) depositMap[data.uid] = 0;\n//         depositMap[data.uid] += data.amount || 0;\n//       });\n//       const withdrawMap = {};\n//       withdrawSnap.forEach((doc) => {\n//         const data = doc.data();\n//         if (!withdrawMap[data.uid]) withdrawMap[data.uid] = 0;\n//         withdrawMap[data.uid] += data.amount || 0;\n//       });\n//       const finalUsers = wallets.map((user) => ({\n//         ...user,\n//         totalDeposited: depositMap[user.uid] || 0,\n//         totalWithdrawn: withdrawMap[user.uid] || 0,\n//       }));\n//       setUsers(finalUsers);\n//     } catch (error) {\n//       console.error('Error fetching user wallet data:', error);\n//       alert('Error loading wallet data.');\n//     }\n//     setLoading(false);\n//   };\n//   const exportToCSV = () => {\n//     const headers = ['Email', 'Balance', 'Deposited (7 days)', 'Withdrawn (7 days)'];\n//     const rows = users.map((u) => [u.email, u.balance, u.totalDeposited, u.totalWithdrawn]);\n//     const csvContent = [headers, ...rows].map((r) => r.join(',')).join('\\n');\n//     const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n//     const url = URL.createObjectURL(blob);\n//     const link = document.createElement('a');\n//     link.setAttribute('href', url);\n//     link.setAttribute('download', 'user_wallets.csv');\n//     document.body.appendChild(link);\n//     link.click();\n//     document.body.removeChild(link);\n//   };\n//   const filteredUsers = users.filter((u) =>\n//     u.email.toLowerCase().includes(search.toLowerCase())\n//   );\n//   return (\n//     <Layout>\n//       <div className=\"min-h-screen bg-gray-900 text-white p-8\">\n//         <div className=\"max-w-5xl mx-auto\">\n//           <h1 className=\"text-3xl font-bold mb-6\">\n//             {role === 'admin'\n//               ? 'Admin: All Subadmin & User Wallets'\n//               : 'Subadmin: Your User Wallets'}\n//           </h1>\n//           <div className=\"flex items-center gap-4 mb-6\">\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search by email...\"\n//               value={search}\n//               onChange={(e) => setSearch(e.target.value)}\n//               className=\"px-4 py-2 rounded bg-gray-800 border border-gray-600 focus:outline-none\"\n//             />\n//             <button\n//               onClick={exportToCSV}\n//               className=\"px-4 py-2 bg-yellow-500 hover:bg-yellow-600 text-black rounded font-semibold\"\n//             >\n//               Export CSV dk\n//             </button>\n//           </div>\n//           {loading ? (\n//             <p className=\"text-yellow-300\">Loading...</p>\n//           ) : filteredUsers.length === 0 ? (\n//             <p className=\"text-gray-400\">No users found.</p>\n//           ) : (\n//             <div className=\"overflow-x-auto bg-gray-800 rounded-lg shadow-xl\">\n//               <table className=\"w-full text-left table-auto\">\n//                 <thead className=\"bg-gray-700 text-sm uppercase text-gray-300\">\n//                   <tr>\n//                     <th className=\"p-3\">Email</th>\n//                     <th className=\"p-3\">Balance</th>\n//                     <th className=\"p-3\">Deposited (7d)</th>\n//                     <th className=\"p-3\">Withdrawn (7d)</th>\n//                   </tr>\n//                 </thead>\n//                 <tbody>\n//                   {filteredUsers.map((user) => (\n//                     <tr key={user.uid} className=\"border-t border-gray-700\">\n//                       <td className=\"p-3\">{user.email || 'N/A'}</td>\n//                       <td className=\"p-3\">₹{user.balance}</td>\n//                       <td className=\"p-3\">₹{user.totalDeposited}</td>\n//                       <td className=\"p-3\">₹{user.totalWithdrawn}</td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             </div>\n//           )}\n//         </div>\n//       </div>\n//     </Layout>\n//   );\n// }\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\nfunction AdminUserWalletsPage() {\n    _s();\n    const auth = (0,firebase_auth__WEBPACK_IMPORTED_MODULE_3__.getAuth)(_firebase__WEBPACK_IMPORTED_MODULE_4__[\"default\"]);\n    const db = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.getFirestore)(_firebase__WEBPACK_IMPORTED_MODULE_4__[\"default\"]);\n    const [users, setUsers] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [search, setSearch] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    const [currentUser, setCurrentUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [role, setRole] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AdminUserWalletsPage.useEffect\": ()=>{\n            const unsubscribe = (0,firebase_auth__WEBPACK_IMPORTED_MODULE_3__.onAuthStateChanged)(auth, {\n                \"AdminUserWalletsPage.useEffect.unsubscribe\": async (user)=>{\n                    setCurrentUser(user);\n                    if (user) {\n                        const userRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.doc)(db, 'users', user.uid);\n                        const userSnap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_2__.getDoc)(userRef);\n                        const data = userSnap.data();\n                        const userRole = (data === null || data === void 0 ? void 0 : data.role) || 'user';\n                        setRole(userRole);\n                        if (userRole === 'admin' || userRole === 'subadmin') {\n                            await fetchUserWalletData(user.uid, userRole);\n                        } else {\n                            setUsers([]);\n                            setLoading(false);\n                        }\n                    } else {\n                        setLoading(false);\n                    }\n                }\n            }[\"AdminUserWalletsPage.useEffect.unsubscribe\"]);\n            return ({\n                \"AdminUserWalletsPage.useEffect\": ()=>unsubscribe()\n            })[\"AdminUserWalletsPage.useEffect\"];\n        }\n    }[\"AdminUserWalletsPage.useEffect\"], []);\n    //   const fetchUserWalletData = async (uid, role) => {\n    //     setLoading(true);\n    //     try {\n    //       const walletCol = collection(db, 'subwallets');\n    //       let walletQuery;\n    //       if (role === 'admin') {\n    //         walletQuery = walletCol; // all wallets\n    //       } else {\n    //         walletQuery = query(walletCol, where('subAdminId', '==', uid)); // subadmin-specific\n    //       }\n    //       const walletsSnap = await getDocs(walletQuery);\n    //       const wallets = walletsSnap.docs.map((doc) => ({\n    //         uid: doc.id,\n    //         balance: doc.data().balance || 0,\n    //         email: doc.data().email || '',\n    //       }));\n    //       const oneWeekAgo = Timestamp.fromDate(new Date(Date.now() - 7 * 24 * 60 * 60 * 1000));\n    //       // Deposit Requests (filtered for subadmin)\n    //       const depositSnap = await getDocs(\n    //         // query(\n    //         //   collection(db, 'subdepositRequests'),\n    //         //   where('status', '==', 'approved'),\n    //         //   where('createdAt', '>=', oneWeekAgo),\n    //         //   ...(role === 'subadmin' ? [where('fromUserSubAdminId', '==', uid)] : [])\n    //         // )\n    //         query(\n    //           collection(db, 'subdepositRequests'),\n    //           where('status', '==', 'approved'),\n    //           where('createdAt', '>=', oneWeekAgo),\n    //           where('fromUserSubAdminId', '==', uid)\n    //         )\n    //       );\n    //       // Withdraw Requests (filtered for subadmin)\n    // //       const withdrawSnap = await getDocs(\n    // //         // query(\n    // //         //   collection(db, 'subwithdrawRequests'),\n    // //         //   where('status', '==', 'approved'),\n    // //         //   where('createdAt', '>=', oneWeekAgo),\n    // //         //   ...(role === 'subadmin' ? [where('fromUserSubAdminId', '==', uid)] : [])\n    // //         // )\n    // //         query(\n    // //   collection(db, 'subdepositRequests'),\n    // //   where('status', '==', 'approved'),\n    // //   where('createdAt', '>=', oneWeekAgo),\n    // //   where('fromUserSubAdminId', '==', uid)\n    // // )\n    // //       );\n    // const withdrawSnap = await getDocs(\n    //   query(\n    //     collection(db, 'subwithdrawRequests'),\n    //     where('status', '==', 'approved'),\n    //     ...(role === 'subadmin' ? [where('fromUserSubAdminId', '==', uid)] : [])\n    //   )\n    // );\n    //       // Aggregate deposits\n    //       const depositMap = {};\n    //       depositSnap.forEach((doc) => {\n    //         const data = doc.data();\n    //         if (!depositMap[data.uid]) depositMap[data.uid] = 0;\n    //         depositMap[data.uid] += data.amount || 0;\n    //       });\n    //       // Aggregate withdrawals\n    //       // const withdrawMap = {};\n    //       // withdrawSnap.forEach((doc) => {\n    //       //   const data = doc.data();\n    //       //   if (!withdrawMap[data.uid]) withdrawMap[data.uid] = 0;\n    //       //   withdrawMap[data.uid] += data.amount || 0;\n    //       // });\n    // const withdrawMap = {};\n    // withdrawSnap.forEach((doc) => {\n    //   const data = doc.data();\n    //   if (!withdrawMap[data.uid]) withdrawMap[data.uid] = [];\n    //   withdrawMap[data.uid].push({\n    //     amount: data.amount,\n    //     approvedAt: data.approvedAt?.toDate(),\n    //   });\n    // });\n    //       // Final merged user data\n    //       const finalUsers = wallets.map((user) => ({\n    //         ...user,\n    //         totalDeposited: depositMap[user.uid] || 0,\n    //         // totalWithdrawn: withdrawMap[user.uid] || 0,\n    //         withdrawals: withdrawMap[user.uid] || [],\n    //       }));\n    //       setUsers(finalUsers);\n    //     } catch (error) {\n    //       console.error('Error fetching wallet data:', error);\n    //       alert('Error loading wallet data.');\n    //     }\n    //     setLoading(false);\n    //   };\n    // const exportToCSV = () => {\n    //   const headers = ['Email', 'Balance', 'Deposited (7 days)', 'Withdrawn (7 days)'];\n    //   const rows = users.map((u) => [u.email, u.balance, u.totalDeposited, u.totalWithdrawn]);\n    //   const csvContent = [headers, ...rows].map((r) => r.join(',')).join('\\n');\n    //   const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    //   const url = URL.createObjectURL(blob);\n    //   const link = document.createElement('a');\n    //   link.setAttribute('href', url);\n    //   link.setAttribute('download', 'user_wallets.csv');\n    //   document.body.appendChild(link);\n    //   link.click();\n    //   document.body.removeChild(link);\n    // };\n    const exportToCSV = ()=>{\n        const headers = [\n            'Email',\n            'Balance',\n            'Deposited (7 days)',\n            'Withdrawals (amount + date)'\n        ];\n        const rows = users.map((u)=>{\n            const withdrawalDetails = (u.withdrawals || []).map((w)=>{\n                var _w_approvedAt, _w_approvedAt1;\n                return \"₹\".concat(w.amount, \" on \").concat((_w_approvedAt = w.approvedAt) === null || _w_approvedAt === void 0 ? void 0 : _w_approvedAt.toLocaleDateString(), \" at \").concat((_w_approvedAt1 = w.approvedAt) === null || _w_approvedAt1 === void 0 ? void 0 : _w_approvedAt1.toLocaleTimeString([], {\n                    hour: '2-digit',\n                    minute: '2-digit'\n                }));\n            }).join(' | '); // Use pipe or semicolon to separate multiple withdrawals in one cell\n            return [\n                u.email,\n                u.balance,\n                u.totalDeposited,\n                withdrawalDetails\n            ];\n        });\n        const csvContent = [\n            headers,\n            ...rows\n        ].map((r)=>r.join(',')).join('\\n');\n        const blob = new Blob([\n            csvContent\n        ], {\n            type: 'text/csv;charset=utf-8;'\n        });\n        const url = URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.setAttribute('href', url);\n        link.setAttribute('download', 'user_wallets.csv');\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    };\n    const filteredUsers = users.filter((u)=>u.email.toLowerCase().includes(search.toLowerCase()));\n    return(// <Layout>\n    //   <div className=\"min-h-screen bg-gray-900 text-white p-8\">\n    //     <div className=\"max-w-5xl mx-auto\">\n    //       <h1 className=\"text-3xl font-bold mb-6\">\n    //         {role === 'admin'\n    //           ? 'Admin: All Subadmin & User Wallets'\n    //           : 'Subadmin: Your User Wallets'}\n    //       </h1>\n    //       <div className=\"flex items-center gap-4 mb-6\">\n    //         <input\n    //           type=\"text\"\n    //           placeholder=\"Search by email...\"\n    //           value={search}\n    //           onChange={(e) => setSearch(e.target.value)}\n    //           className=\"px-4 py-2 rounded bg-gray-800 border border-gray-600 focus:outline-none\"\n    //         />\n    //         <button\n    //           onClick={exportToCSV}\n    //           className=\"px-4 py-2 bg-yellow-500 hover:bg-yellow-600 text-black rounded font-semibold\"\n    //         >\n    //           Export CSV\n    //         </button>\n    //       </div>\n    //       {loading ? (\n    //         <p className=\"text-yellow-300\">Loading...</p>\n    //       ) : filteredUsers.length === 0 ? (\n    //         <p className=\"text-gray-400\">No users found.</p>\n    //       ) : (\n    //         <div className=\"overflow-x-auto bg-gray-800 rounded-lg shadow-xl\">\n    //           <table className=\"w-full text-left table-auto\">\n    //             <thead className=\"bg-gray-700 text-sm uppercase text-gray-300\">\n    //               <tr>\n    //                 <th className=\"p-3\">Email</th>\n    //                 <th className=\"p-3\">Balance</th>\n    //                 <th className=\"p-3\">Deposited (7d)</th>\n    //                 {/* <th className=\"p-3\">Withdrawn (7d)</th>\n    //               </tr> */}\n    //               <th className=\"p-3\">Withdrawals</th>\n    //             </thead>\n    //             <tbody>\n    //               {filteredUsers.map((user) => (\n    //                 <tr key={user.uid} className=\"border-t border-gray-700\">\n    //                   <td className=\"p-3\">{user.email || 'N/A'}</td>\n    //                   <td className=\"p-3\">₹{user.balance}</td>\n    //                   <td className=\"p-3\">₹{user.totalDeposited}</td>\n    //                   <td className=\"p-3\">₹{user.Withdrawn}</td>\n    //                 </tr>\n    //               ))}\n    //             </tbody>\n    //           </table>\n    //         </div>\n    //       )}\n    //     </div>\n    //   </div>\n    // </Layout>\n    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_Components_Layout__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"min-h-screen bg-gray-900 text-white p-8\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"max-w-5xl mx-auto\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                        className: \"text-3xl font-bold mb-6\",\n                        children: role === 'admin' ? 'Admin: All Subadmin & User Wallets' : 'Subadmin: Your User Wallets'\n                    }, void 0, false, {\n                        fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                        lineNumber: 1019,\n                        columnNumber: 7\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-center gap-4 mb-6\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                type: \"text\",\n                                placeholder: \"Search by email...\",\n                                value: search,\n                                onChange: (e)=>setSearch(e.target.value),\n                                className: \"px-4 py-2 rounded bg-gray-800 border border-gray-600 focus:outline-none\"\n                            }, void 0, false, {\n                                fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                lineNumber: 1026,\n                                columnNumber: 9\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: exportToCSV,\n                                className: \"px-4 py-2 bg-yellow-500 hover:bg-yellow-600 text-black rounded font-semibold\",\n                                children: \"Export CSV\"\n                            }, void 0, false, {\n                                fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                lineNumber: 1033,\n                                columnNumber: 9\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                        lineNumber: 1025,\n                        columnNumber: 7\n                    }, this),\n                    loading ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-yellow-300\",\n                        children: \"Loading...\"\n                    }, void 0, false, {\n                        fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                        lineNumber: 1042,\n                        columnNumber: 9\n                    }, this) : filteredUsers.length === 0 ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-gray-400\",\n                        children: \"No users found.\"\n                    }, void 0, false, {\n                        fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                        lineNumber: 1044,\n                        columnNumber: 9\n                    }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"overflow-x-auto bg-gray-800 rounded-lg shadow-xl\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"table\", {\n                            className: \"w-full text-left table-auto\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"thead\", {\n                                    className: \"bg-gray-700 text-sm uppercase text-gray-300\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"tr\", {\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                                className: \"p-3\",\n                                                children: \"Email\"\n                                            }, void 0, false, {\n                                                fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                                lineNumber: 1050,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                                className: \"p-3\",\n                                                children: \"Balance\"\n                                            }, void 0, false, {\n                                                fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                                lineNumber: 1051,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                                className: \"p-3\",\n                                                children: \"Deposited (7d)\"\n                                            }, void 0, false, {\n                                                fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                                lineNumber: 1052,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                                className: \"p-3\",\n                                                children: \"Withdrawals\"\n                                            }, void 0, false, {\n                                                fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                                lineNumber: 1053,\n                                                columnNumber: 17\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                        lineNumber: 1049,\n                                        columnNumber: 15\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                    lineNumber: 1048,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"tbody\", {\n                                    children: filteredUsers.map((user)=>{\n                                        var _user_withdrawals;\n                                        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"tr\", {\n                                            className: \"border-t border-gray-700 align-top\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                    className: \"p-3\",\n                                                    children: user.email || 'N/A'\n                                                }, void 0, false, {\n                                                    fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                                    lineNumber: 1059,\n                                                    columnNumber: 19\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                    className: \"p-3\",\n                                                    children: [\n                                                        \"₹\",\n                                                        user.balance\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                                    lineNumber: 1060,\n                                                    columnNumber: 19\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                    className: \"p-3\",\n                                                    children: [\n                                                        \"₹\",\n                                                        user.totalDeposited\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                                    lineNumber: 1061,\n                                                    columnNumber: 19\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                    className: \"p-3 text-sm\",\n                                                    children: ((_user_withdrawals = user.withdrawals) === null || _user_withdrawals === void 0 ? void 0 : _user_withdrawals.length) > 0 ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                                                        className: \"space-y-1\",\n                                                        children: user.withdrawals.map((w, idx)=>{\n                                                            var _w_approvedAt, _w_approvedAt1;\n                                                            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                                children: [\n                                                                    \"₹\",\n                                                                    w.amount,\n                                                                    \" on\",\n                                                                    ' ',\n                                                                    (_w_approvedAt = w.approvedAt) === null || _w_approvedAt === void 0 ? void 0 : _w_approvedAt.toLocaleDateString(),\n                                                                    \" at\",\n                                                                    ' ',\n                                                                    (_w_approvedAt1 = w.approvedAt) === null || _w_approvedAt1 === void 0 ? void 0 : _w_approvedAt1.toLocaleTimeString([], {\n                                                                        hour: '2-digit',\n                                                                        minute: '2-digit'\n                                                                    })\n                                                                ]\n                                                            }, idx, true, {\n                                                                fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                                                lineNumber: 1066,\n                                                                columnNumber: 27\n                                                            }, this);\n                                                        })\n                                                    }, void 0, false, {\n                                                        fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                                        lineNumber: 1064,\n                                                        columnNumber: 23\n                                                    }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                        className: \"text-gray-400\",\n                                                        children: \"No withdrawals\"\n                                                    }, void 0, false, {\n                                                        fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                                        lineNumber: 1074,\n                                                        columnNumber: 23\n                                                    }, this)\n                                                }, void 0, false, {\n                                                    fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                                    lineNumber: 1062,\n                                                    columnNumber: 19\n                                                }, this)\n                                            ]\n                                        }, user.uid, true, {\n                                            fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                            lineNumber: 1058,\n                                            columnNumber: 17\n                                        }, this);\n                                    })\n                                }, void 0, false, {\n                                    fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                    lineNumber: 1056,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                            lineNumber: 1047,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                        lineNumber: 1046,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                lineNumber: 1018,\n                columnNumber: 5\n            }, this)\n        }, void 0, false, {\n            fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n            lineNumber: 1017,\n            columnNumber: 3\n        }, this)\n    }, void 0, false, {\n        fileName: \"E:\\\\Nagaland\\\\gamling\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n        lineNumber: 1016,\n        columnNumber: 5\n    }, this));\n} // 'use client';\n // import React, { useEffect, useState } from 'react';\n // import {\n //   getFirestore,\n //   collection,\n //   getDocs,\n //   query,\n //   where,\n //   Timestamp,\n //   doc,\n //   getDoc,\n // } from 'firebase/firestore';\n // import { getAuth, onAuthStateChanged } from 'firebase/auth';\n // import firebaseApp from '@/firebase';\n // import Layout from '@/app/Components/Layout';\n // export default function Page() {\n //   const auth = getAuth(firebaseApp);\n //   const db = getFirestore(firebaseApp);\n //   const [users, setUsers] = useState([]);\n //   const [loading, setLoading] = useState(true);\n //   const [search, setSearch] = useState('');\n //   const [currentUser, setCurrentUser] = useState(null);\n //   const [role, setRole] = useState(null);\n //   useEffect(() => {\n //     const unsubscribe = onAuthStateChanged(auth, async (user) => {\n //       setCurrentUser(user);\n //       if (user) {\n //         const userRef = doc(db, 'users', user.uid);\n //         const userSnap = await getDoc(userRef);\n //         const data = userSnap.data();\n //         const userRole = data?.role || 'user';\n //         setRole(userRole);\n //         if (userRole === 'admin' || userRole === 'subadmin') {\n //           await fetchUserWalletData(user.uid, userRole);\n //         } else {\n //           setUsers([]);\n //           setLoading(false);\n //         }\n //       } else {\n //         setLoading(false);\n //       }\n //     });\n //     return () => unsubscribe();\n //   }, []);\n //   const fetchUserWalletData = async (uid, role) => {\n //     setLoading(true);\n //     try {\n //       const walletCol = collection(db, 'subwallets');\n //       const walletQuery =\n //         role === 'admin'\n //           ? walletCol\n //           : query(walletCol, where('subAdminId', '==', uid));\n //       const walletsSnap = await getDocs(walletQuery);\n //       const wallets = walletsSnap.docs.map((doc) => ({\n //         uid: doc.id,\n //         balance: doc.data().balance || 0,\n //         email: doc.data().email || '',\n //       }));\n //       const oneWeekAgo = Timestamp.fromDate(\n //         new Date(Date.now() - 7 * 24 * 60 * 60 * 1000)\n //       );\n //       const depositQuery =\n //         role === 'admin'\n //           ? query(\n //               collection(db, 'subdepositRequests'),\n //               where('status', '==', 'approved'),\n //               where('createdAt', '>=', oneWeekAgo)\n //             )\n //           : query(\n //               collection(db, 'subdepositRequests'),\n //               where('status', '==', 'approved'),\n //               where('createdAt', '>=', oneWeekAgo),\n //               where('fromUserSubAdminId', '==', uid)\n //             );\n //       const withdrawQuery =\n //         role === 'admin'\n //           ? query(\n //               collection(db, 'subwithdrawRequests'),\n //               where('status', '==', 'approved'),\n //               where('createdAt', '>=', oneWeekAgo)\n //             )\n //           : query(\n //               collection(db, 'subwithdrawRequests'),\n //               where('status', '==', 'approved'),\n //               where('createdAt', '>=', oneWeekAgo),\n //               where('fromUserSubAdminId', '==', uid)\n //             );\n //       const [depositSnap, withdrawSnap] = await Promise.all([\n //         getDocs(depositQuery),\n //         getDocs(withdrawQuery),\n //       ]);\n //       const depositMap = {};\n //       depositSnap.forEach((doc) => {\n //         const data = doc.data();\n //         if (!data.uid) return;\n //         if (!depositMap[data.uid]) depositMap[data.uid] = 0;\n //         depositMap[data.uid] += data.amount || 0;\n //       });\n //       const withdrawMap = {};\n //       withdrawSnap.forEach((doc) => {\n //         const data = doc.data();\n //         if (!data.uid) return;\n //         if (!withdrawMap[data.uid]) withdrawMap[data.uid] = 0;\n //         withdrawMap[data.uid] += data.amount || 0;\n //       });\n //       const finalUsers = wallets.map((user) => ({\n //         ...user,\n //         totalDeposited: depositMap[user.uid] || 0,\n //         totalWithdrawn: withdrawMap[user.uid] || 0,\n //       }));\n //       setUsers(finalUsers);\n //     } catch (error) {\n //       console.error('Error fetching wallet data:', error);\n //       alert('Error loading wallet data.');\n //     }\n //     setLoading(false);\n //   };\n //   const exportToCSV = () => {\n //     const headers = ['Email', 'Balance', 'Deposited (7 days)', 'Withdrawn (7 days)'];\n //     const rows = users.map((u) => [u.email, u.balance, u.totalDeposited, u.totalWithdrawn]);\n //     const csvContent = [headers, ...rows].map((r) => r.join(',')).join('\\n');\n //     const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n //     const url = URL.createObjectURL(blob);\n //     const link = document.createElement('a');\n //     link.setAttribute('href', url);\n //     link.setAttribute('download', 'user_wallets.csv');\n //     document.body.appendChild(link);\n //     link.click();\n //     document.body.removeChild(link);\n //   };\n //   const filteredUsers = users.filter((u) =>\n //     u.email.toLowerCase().includes(search.toLowerCase())\n //   );\n //   return (\n //     <Layout>\n //       <div className=\"min-h-screen bg-gray-900 text-white p-8\">\n //         <div className=\"max-w-5xl mx-auto\">\n //           <h1 className=\"text-3xl font-bold mb-6\">\n //             {role === 'admin'\n //               ? 'Admin: All Subadmin & User Wallets'\n //               : 'Subadmin: Your User Wallets'}\n //           </h1>\n //           <div className=\"flex items-center gap-4 mb-6\">\n //             <input\n //               type=\"text\"\n //               placeholder=\"Search by email...\"\n //               value={search}\n //               onChange={(e) => setSearch(e.target.value)}\n //               className=\"px-4 py-2 rounded bg-gray-800 border border-gray-600 focus:outline-none\"\n //             />\n //             <button\n //               onClick={exportToCSV}\n //               className=\"px-4 py-2 bg-yellow-500 hover:bg-yellow-600 text-black rounded font-semibold\"\n //             >\n //               Export CSV\n //             </button>\n //           </div>\n //           {loading ? (\n //             <p className=\"text-yellow-300\">Loading...</p>\n //           ) : filteredUsers.length === 0 ? (\n //             <p className=\"text-gray-400\">No users found.</p>\n //           ) : (\n //             <div className=\"overflow-x-auto bg-gray-800 rounded-lg shadow-xl\">\n //               <table className=\"w-full text-left table-auto\">\n //                 <thead className=\"bg-gray-700 text-sm uppercase text-gray-300\">\n //                   <tr>\n //                     <th className=\"p-3\">Email</th>\n //                     <th className=\"p-3\">Balance</th>\n //                     <th className=\"p-3\">Deposited (7d)</th>\n //                     <th className=\"p-3\">Withdrawn (7d)</th>\n //                   </tr>\n //                 </thead>\n //                 <tbody>\n //                   {filteredUsers.map((user) => (\n //                     <tr key={user.uid} className=\"border-t border-gray-700\">\n //                       <td className=\"p-3\">{user.email || 'N/A'}</td>\n //                       <td className=\"p-3\">₹{user.balance}</td>\n //                       <td className=\"p-3\">₹{user.totalDeposited}</td>\n //                       <td className=\"p-3\">₹{user.totalWithdrawn}</td>\n //                     </tr>\n //                   ))}\n //                 </tbody>\n //               </table>\n //             </div>\n //           )}\n //         </div>\n //       </div>\n //     </Layout>\n //   );\n // }\n_s(AdminUserWalletsPage, \"C12x+Eo2ZT+RyeBp7B7m4eg8rUQ=\");\n_c = AdminUserWalletsPage;\nvar _c;\n$RefreshReg$(_c, \"AdminUserWalletsPage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvYXBwL3VzZXItZGV0YWlscy9wYWdlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUEsZ0JBQWdCO0FBRWhCLHNEQUFzRDtBQUN0RCxXQUFXO0FBQ1gsa0JBQWtCO0FBQ2xCLGdCQUFnQjtBQUNoQixhQUFhO0FBQ2IsV0FBVztBQUNYLFdBQVc7QUFDWCwrQkFBK0I7QUFDL0Isd0NBQXdDO0FBQ3hDLGdEQUFnRDtBQUVoRCxtREFBbUQ7QUFDbkQsMENBQTBDO0FBRTFDLDRDQUE0QztBQUM1QyxrREFBa0Q7QUFDbEQsOENBQThDO0FBRTlDLHNCQUFzQjtBQUN0Qiw2QkFBNkI7QUFDN0IsWUFBWTtBQUVaLDhDQUE4QztBQUM5Qyx3QkFBd0I7QUFFeEIsWUFBWTtBQUNaLHNFQUFzRTtBQUN0RSx5REFBeUQ7QUFDekQsdUJBQXVCO0FBQ3ZCLDRDQUE0QztBQUM1Qyx5Q0FBeUM7QUFDekMsYUFBYTtBQUViLDJDQUEyQztBQUMzQyxzRkFBc0Y7QUFDdEYsV0FBVztBQUVYLDRDQUE0QztBQUM1Qyx1RkFBdUY7QUFDdkYsV0FBVztBQUVYLCtCQUErQjtBQUMvQix1Q0FBdUM7QUFDdkMsbUNBQW1DO0FBQ25DLCtEQUErRDtBQUMvRCxvREFBb0Q7QUFDcEQsWUFBWTtBQUVaLGdDQUFnQztBQUNoQyx3Q0FBd0M7QUFDeEMsbUNBQW1DO0FBQ25DLGlFQUFpRTtBQUNqRSxxREFBcUQ7QUFDckQsWUFBWTtBQUVaLG9EQUFvRDtBQUNwRCxtQkFBbUI7QUFDbkIscURBQXFEO0FBQ3JELHNEQUFzRDtBQUN0RCxhQUFhO0FBRWIsOEJBQThCO0FBQzlCLHdCQUF3QjtBQUN4QixrRUFBa0U7QUFDbEUsNkNBQTZDO0FBQzdDLFFBQVE7QUFFUix5QkFBeUI7QUFDekIsT0FBTztBQUVQLGdDQUFnQztBQUNoQyxzRUFBc0U7QUFDdEUsNkZBQTZGO0FBQzdGLDhFQUE4RTtBQUU5RSxnRkFBZ0Y7QUFDaEYsNkNBQTZDO0FBQzdDLGdEQUFn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RDtDQUN2RCxpREFBaUQ7Q0FDakQsa0JBQWtCO0NBRWxCLDJEQUEyRDtDQUMzRCxxQkFBcUI7Q0FDckIsNEJBQTRCO0NBQzVCLGlEQUFpRDtDQUNqRCwrQkFBK0I7Q0FDL0IsNERBQTREO0NBQzVELG9HQUFvRztDQUNwRyxpQkFBaUI7Q0FDakIsc0JBQXNCO0NBQ3RCLHNDQUFzQztDQUN0Qyx5R0FBeUc7Q0FDekcsZ0JBQWdCO0NBQ2hCLDJCQUEyQjtDQUMzQix3QkFBd0I7Q0FDeEIsbUJBQW1CO0NBRW5CLHlCQUF5QjtDQUN6Qiw0REFBNEQ7Q0FDNUQsK0NBQStDO0NBQy9DLCtEQUErRDtDQUMvRCxrQkFBa0I7Q0FDbEIsaUZBQWlGO0NBQ2pGLGdFQUFnRTtDQUNoRSxrRkFBa0Y7Q0FDbEYseUJBQXlCO0NBQ3pCLHFEQUFxRDtDQUNyRCx1REFBdUQ7Q0FDdkQsOERBQThEO0NBQzlELDhEQUE4RDtDQUM5RCwwQkFBMEI7Q0FDMUIsMkJBQTJCO0NBQzNCLDBCQUEwQjtDQUMxQixtREFBbUQ7Q0FDbkQsK0VBQStFO0NBQy9FLHVFQUF1RTtDQUN2RSxpRUFBaUU7Q0FDakUsd0VBQXdFO0NBQ3hFLHdFQUF3RTtDQUN4RSw0QkFBNEI7Q0FDNUIsd0JBQXdCO0NBQ3hCLDJCQUEyQjtDQUMzQix5QkFBeUI7Q0FDekIscUJBQXFCO0NBQ3JCLGVBQWU7Q0FDZixpQkFBaUI7Q0FDakIsZUFBZTtDQUNmLGdCQUFnQjtDQUNoQixPQUFPO0NBQ1AsSUFBSTtHQXpoQm9CaEI7S0FBQUEiLCJzb3VyY2VzIjpbIkU6XFxOYWdhbGFuZFxcZ2FtbGluZ1xcbWVnYWVuZC1uZXdcXHNyY1xcYXBwXFxhcHBcXHVzZXItZGV0YWlsc1xccGFnZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAndXNlIGNsaWVudCc7XHJcblxyXG4vLyBpbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcclxuLy8gaW1wb3J0IHtcclxuLy8gICBnZXRGaXJlc3RvcmUsXHJcbi8vICAgY29sbGVjdGlvbixcclxuLy8gICBnZXREb2NzLFxyXG4vLyAgIHF1ZXJ5LFxyXG4vLyAgIHdoZXJlLFxyXG4vLyB9IGZyb20gJ2ZpcmViYXNlL2ZpcmVzdG9yZSc7XHJcbi8vIGltcG9ydCBmaXJlYmFzZUFwcCBmcm9tICdAL2ZpcmViYXNlJztcclxuLy8gaW1wb3J0IExheW91dCBmcm9tICdAL2FwcC9Db21wb25lbnRzL0xheW91dCc7XHJcblxyXG4vLyBleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBBZG1pblVzZXJXYWxsZXRzUGFnZSgpIHtcclxuLy8gICBjb25zdCBkYiA9IGdldEZpcmVzdG9yZShmaXJlYmFzZUFwcCk7XHJcblxyXG4vLyAgIGNvbnN0IFt1c2Vycywgc2V0VXNlcnNdID0gdXNlU3RhdGUoW10pO1xyXG4vLyAgIGNvbnN0IFtsb2FkaW5nLCBzZXRMb2FkaW5nXSA9IHVzZVN0YXRlKHRydWUpO1xyXG4vLyAgIGNvbnN0IFtzZWFyY2gsIHNldFNlYXJjaF0gPSB1c2VTdGF0ZSgnJyk7XHJcblxyXG4vLyAgIHVzZUVmZmVjdCgoKSA9PiB7XHJcbi8vICAgICBmZXRjaFVzZXJXYWxsZXREYXRhKCk7XHJcbi8vICAgfSwgW10pO1xyXG5cclxuLy8gICBjb25zdCBmZXRjaFVzZXJXYWxsZXREYXRhID0gYXN5bmMgKCkgPT4ge1xyXG4vLyAgICAgc2V0TG9hZGluZyh0cnVlKTtcclxuXHJcbi8vICAgICB0cnkge1xyXG4vLyAgICAgICBjb25zdCB3YWxsZXRzU25hcCA9IGF3YWl0IGdldERvY3MoY29sbGVjdGlvbihkYiwgJ3dhbGxldHMnKSk7XHJcbi8vICAgICAgIGNvbnN0IHdhbGxldHMgPSB3YWxsZXRzU25hcC5kb2NzLm1hcCgoZG9jKSA9PiAoe1xyXG4vLyAgICAgICAgIHVpZDogZG9jLmlkLFxyXG4vLyAgICAgICAgIGJhbGFuY2U6IGRvYy5kYXRhKCkuYmFsYW5jZSB8fCAwLFxyXG4vLyAgICAgICAgIGVtYWlsOiBkb2MuZGF0YSgpLmVtYWlsIHx8ICcnLFxyXG4vLyAgICAgICB9KSk7XHJcblxyXG4vLyAgICAgICBjb25zdCBkZXBvc2l0U25hcCA9IGF3YWl0IGdldERvY3MoXHJcbi8vICAgICAgICAgcXVlcnkoY29sbGVjdGlvbihkYiwgJ2RlcG9zaXRSZXF1ZXN0cycpLCB3aGVyZSgnc3RhdHVzJywgJz09JywgJ2FwcHJvdmVkJykpXHJcbi8vICAgICAgICk7XHJcblxyXG4vLyAgICAgICBjb25zdCB3aXRoZHJhd1NuYXAgPSBhd2FpdCBnZXREb2NzKFxyXG4vLyAgICAgICAgIHF1ZXJ5KGNvbGxlY3Rpb24oZGIsICd3aXRoZHJhd1JlcXVlc3RzJyksIHdoZXJlKCdzdGF0dXMnLCAnPT0nLCAnYXBwcm92ZWQnKSlcclxuLy8gICAgICAgKTtcclxuXHJcbi8vICAgICAgIGNvbnN0IGRlcG9zaXRNYXAgPSB7fTtcclxuLy8gICAgICAgZGVwb3NpdFNuYXAuZm9yRWFjaCgoZG9jKSA9PiB7XHJcbi8vICAgICAgICAgY29uc3QgZGF0YSA9IGRvYy5kYXRhKCk7XHJcbi8vICAgICAgICAgaWYgKCFkZXBvc2l0TWFwW2RhdGEudWlkXSkgZGVwb3NpdE1hcFtkYXRhLnVpZF0gPSAwO1xyXG4vLyAgICAgICAgIGRlcG9zaXRNYXBbZGF0YS51aWRdICs9IGRhdGEuYW1vdW50IHx8IDA7XHJcbi8vICAgICAgIH0pO1xyXG5cclxuLy8gICAgICAgY29uc3Qgd2l0aGRyYXdNYXAgPSB7fTtcclxuLy8gICAgICAgd2l0aGRyYXdTbmFwLmZvckVhY2goKGRvYykgPT4ge1xyXG4vLyAgICAgICAgIGNvbnN0IGRhdGEgPSBkb2MuZGF0YSgpO1xyXG4vLyAgICAgICAgIGlmICghd2l0aGRyYXdNYXBbZGF0YS51aWRdKSB3aXRoZHJhd01hcFtkYXRhLnVpZF0gPSAwO1xyXG4vLyAgICAgICAgIHdpdGhkcmF3TWFwW2RhdGEudWlkXSArPSBkYXRhLmFtb3VudCB8fCAwO1xyXG4vLyAgICAgICB9KTtcclxuXHJcbi8vICAgICAgIGNvbnN0IGZpbmFsVXNlcnMgPSB3YWxsZXRzLm1hcCgodXNlcikgPT4gKHtcclxuLy8gICAgICAgICAuLi51c2VyLFxyXG4vLyAgICAgICAgIHRvdGFsRGVwb3NpdGVkOiBkZXBvc2l0TWFwW3VzZXIudWlkXSB8fCAwLFxyXG4vLyAgICAgICAgIHRvdGFsV2l0aGRyYXduOiB3aXRoZHJhd01hcFt1c2VyLnVpZF0gfHwgMCxcclxuLy8gICAgICAgfSkpO1xyXG5cclxuLy8gICAgICAgc2V0VXNlcnMoZmluYWxVc2Vycyk7XHJcbi8vICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4vLyAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBmZXRjaGluZyB1c2VyIHdhbGxldCBkYXRhOicsIGVycm9yKTtcclxuLy8gICAgICAgYWxlcnQoJ0Vycm9yIGxvYWRpbmcgd2FsbGV0IGRhdGEuJyk7XHJcbi8vICAgICB9XHJcblxyXG4vLyAgICAgc2V0TG9hZGluZyhmYWxzZSk7XHJcbi8vICAgfTtcclxuXHJcbi8vICAgY29uc3QgZXhwb3J0VG9DU1YgPSAoKSA9PiB7XHJcbi8vICAgICBjb25zdCBoZWFkZXJzID0gWydFbWFpbCcsICdCYWxhbmNlJywgJ0RlcG9zaXRlZCcsICdXaXRoZHJhd24nXTtcclxuLy8gICAgIGNvbnN0IHJvd3MgPSB1c2Vycy5tYXAodSA9PiBbdS5lbWFpbCwgdS5iYWxhbmNlLCB1LnRvdGFsRGVwb3NpdGVkLCB1LnRvdGFsV2l0aGRyYXduXSk7XHJcbi8vICAgICBjb25zdCBjc3ZDb250ZW50ID0gW2hlYWRlcnMsIC4uLnJvd3NdLm1hcChyID0+IHIuam9pbignLCcpKS5qb2luKCdcXG4nKTtcclxuXHJcbi8vICAgICBjb25zdCBibG9iID0gbmV3IEJsb2IoW2NzdkNvbnRlbnRdLCB7IHR5cGU6ICd0ZXh0L2NzdjtjaGFyc2V0PXV0Zi04OycgfSk7XHJcbi8vICAgICBjb25zdCB1cmwgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpO1xyXG4vLyAgICAgY29uc3QgbGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTtcclxuLy8gICAgIGxpbmsuc2V0QXR0cmlidXRlKCdocmVmJywgdXJsKTtcclxuLy8gICAgIGxpbmsuc2V0QXR0cmlidXRlKCdkb3dubG9hZCcsICd1c2VyX3dhbGxldHMuY3N2Jyk7XHJcbi8vICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGxpbmspO1xyXG4vLyAgICAgbGluay5jbGljaygpO1xyXG4vLyAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChsaW5rKTtcclxuLy8gICB9O1xyXG5cclxuLy8gICBjb25zdCBmaWx0ZXJlZFVzZXJzID0gdXNlcnMuZmlsdGVyKHUgPT5cclxuLy8gICAgIHUuZW1haWwudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhzZWFyY2gudG9Mb3dlckNhc2UoKSlcclxuLy8gICApO1xyXG5cclxuLy8gICByZXR1cm4gKFxyXG4vLyAgICAgPExheW91dD5cclxuLy8gICAgICAgPGRpdiBjbGFzc05hbWU9XCJtaW4taC1zY3JlZW4gYmctZ3JheS05MDAgdGV4dC13aGl0ZSBwLThcIj5cclxuLy8gICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1heC13LTV4bCBteC1hdXRvXCI+XHJcbi8vICAgICAgICAgICA8aDEgY2xhc3NOYW1lPVwidGV4dC0zeGwgZm9udC1ib2xkIG1iLTZcIj5BZG1pbjogVXNlciBXYWxsZXQgT3ZlcnZpZXc8L2gxPlxyXG5cclxuLy8gICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTQgbWItNlwiPlxyXG4vLyAgICAgICAgICAgICA8aW5wdXRcclxuLy8gICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiXHJcbi8vICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJTZWFyY2ggYnkgZW1haWwuLi5cIlxyXG4vLyAgICAgICAgICAgICAgIHZhbHVlPXtzZWFyY2h9XHJcbi8vICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiBzZXRTZWFyY2goZS50YXJnZXQudmFsdWUpfVxyXG4vLyAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInB4LTQgcHktMiByb3VuZGVkIGJnLWdyYXktODAwIGJvcmRlciBib3JkZXItZ3JheS02MDAgZm9jdXM6b3V0bGluZS1ub25lXCJcclxuLy8gICAgICAgICAgICAgLz5cclxuLy8gICAgICAgICAgICAgPGJ1dHRvblxyXG4vLyAgICAgICAgICAgICAgIG9uQ2xpY2s9e2V4cG9ydFRvQ1NWfVxyXG4vLyAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInB4LTQgcHktMiBiZy15ZWxsb3ctNTAwIGhvdmVyOmJnLXllbGxvdy02MDAgdGV4dC1ibGFjayByb3VuZGVkIGZvbnQtc2VtaWJvbGRcIlxyXG4vLyAgICAgICAgICAgICA+XHJcbi8vICAgICAgICAgICAgICAgRXhwb3J0IENTVlxyXG4vLyAgICAgICAgICAgICA8L2J1dHRvbj5cclxuLy8gICAgICAgICAgIDwvZGl2PlxyXG5cclxuLy8gICAgICAgICAgIHtsb2FkaW5nID8gKFxyXG4vLyAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0LXllbGxvdy0zMDBcIj5Mb2FkaW5nLi4uPC9wPlxyXG4vLyAgICAgICAgICAgKSA6IGZpbHRlcmVkVXNlcnMubGVuZ3RoID09PSAwID8gKFxyXG4vLyAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0LWdyYXktNDAwXCI+Tm8gdXNlcnMgZm91bmQuPC9wPlxyXG4vLyAgICAgICAgICAgKSA6IChcclxuLy8gICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJvdmVyZmxvdy14LWF1dG8gYmctZ3JheS04MDAgcm91bmRlZC1sZyBzaGFkb3cteGxcIj5cclxuLy8gICAgICAgICAgICAgICA8dGFibGUgY2xhc3NOYW1lPVwidy1mdWxsIHRleHQtbGVmdCB0YWJsZS1hdXRvXCI+XHJcbi8vICAgICAgICAgICAgICAgICA8dGhlYWQgY2xhc3NOYW1lPVwiYmctZ3JheS03MDAgdGV4dC1zbSB1cHBlcmNhc2UgdGV4dC1ncmF5LTMwMFwiPlxyXG4vLyAgICAgICAgICAgICAgICAgICA8dHI+XHJcbi8vICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cInAtM1wiPkVtYWlsPC90aD5cclxuLy8gICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3NOYW1lPVwicC0zXCI+QmFsYW5jZTwvdGg+XHJcbi8vICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cInAtM1wiPkRlcG9zaXRlZDwvdGg+XHJcbi8vICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cInAtM1wiPldpdGhkcmF3bjwvdGg+XHJcbi8vICAgICAgICAgICAgICAgICAgIDwvdHI+XHJcbi8vICAgICAgICAgICAgICAgICA8L3RoZWFkPlxyXG4vLyAgICAgICAgICAgICAgICAgPHRib2R5PlxyXG4vLyAgICAgICAgICAgICAgICAgICB7ZmlsdGVyZWRVc2Vycy5tYXAoKHVzZXIpID0+IChcclxuLy8gICAgICAgICAgICAgICAgICAgICA8dHIga2V5PXt1c2VyLnVpZH0gY2xhc3NOYW1lPVwiYm9yZGVyLXQgYm9yZGVyLWdyYXktNzAwXCI+XHJcbi8vICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3NOYW1lPVwicC0zXCI+e3VzZXIuZW1haWwgfHwgJ04vQSd9PC90ZD5cclxuLy8gICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJwLTNcIj7igrl7dXNlci5iYWxhbmNlfTwvdGQ+XHJcbi8vICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3NOYW1lPVwicC0zXCI+4oK5e3VzZXIudG90YWxEZXBvc2l0ZWR9PC90ZD5cclxuLy8gICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJwLTNcIj7igrl7dXNlci50b3RhbFdpdGhkcmF3bn08L3RkPlxyXG4vLyAgICAgICAgICAgICAgICAgICAgIDwvdHI+XHJcbi8vICAgICAgICAgICAgICAgICAgICkpfVxyXG4vLyAgICAgICAgICAgICAgICAgPC90Ym9keT5cclxuLy8gICAgICAgICAgICAgICA8L3RhYmxlPlxyXG4vLyAgICAgICAgICAgICA8L2Rpdj5cclxuLy8gICAgICAgICAgICl9XHJcbi8vICAgICAgICAgPC9kaXY+XHJcbi8vICAgICAgIDwvZGl2PlxyXG4vLyAgICAgPC9MYXlvdXQ+XHJcbi8vICAgKTtcclxuLy8gfVxyXG5cclxuXHJcbi8vICd1c2UgY2xpZW50JztcclxuXHJcbi8vIGltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xyXG4vLyBpbXBvcnQge1xyXG4vLyAgIGdldEZpcmVzdG9yZSxcclxuLy8gICBjb2xsZWN0aW9uLFxyXG4vLyAgIGdldERvY3MsXHJcbi8vICAgcXVlcnksXHJcbi8vICAgd2hlcmUsXHJcbi8vICAgVGltZXN0YW1wLFxyXG4vLyB9IGZyb20gJ2ZpcmViYXNlL2ZpcmVzdG9yZSc7XHJcbi8vIGltcG9ydCBmaXJlYmFzZUFwcCBmcm9tICdAL2ZpcmViYXNlJztcclxuLy8gaW1wb3J0IExheW91dCBmcm9tICdAL2FwcC9Db21wb25lbnRzL0xheW91dCc7XHJcblxyXG4vLyBleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBBZG1pblVzZXJXYWxsZXRzUGFnZSgpIHtcclxuLy8gICBjb25zdCBkYiA9IGdldEZpcmVzdG9yZShmaXJlYmFzZUFwcCk7XHJcblxyXG4vLyAgIGNvbnN0IFt1c2Vycywgc2V0VXNlcnNdID0gdXNlU3RhdGUoW10pO1xyXG4vLyAgIGNvbnN0IFtsb2FkaW5nLCBzZXRMb2FkaW5nXSA9IHVzZVN0YXRlKHRydWUpO1xyXG4vLyAgIGNvbnN0IFtzZWFyY2gsIHNldFNlYXJjaF0gPSB1c2VTdGF0ZSgnJyk7XHJcblxyXG4vLyAgIHVzZUVmZmVjdCgoKSA9PiB7XHJcbi8vICAgICBmZXRjaFVzZXJXYWxsZXREYXRhKCk7XHJcbi8vICAgfSwgW10pO1xyXG5cclxuLy8gICBjb25zdCBmZXRjaFVzZXJXYWxsZXREYXRhID0gYXN5bmMgKCkgPT4ge1xyXG4vLyAgICAgc2V0TG9hZGluZyh0cnVlKTtcclxuXHJcbi8vICAgICB0cnkge1xyXG4vLyAgICAgICBjb25zdCB3YWxsZXRzU25hcCA9IGF3YWl0IGdldERvY3MoY29sbGVjdGlvbihkYiwgJ3dhbGxldHMnKSk7XHJcbi8vICAgICAgIGNvbnN0IHdhbGxldHMgPSB3YWxsZXRzU25hcC5kb2NzLm1hcCgoZG9jKSA9PiAoe1xyXG4vLyAgICAgICAgIHVpZDogZG9jLmlkLFxyXG4vLyAgICAgICAgIGJhbGFuY2U6IGRvYy5kYXRhKCkuYmFsYW5jZSB8fCAwLFxyXG4vLyAgICAgICAgIGVtYWlsOiBkb2MuZGF0YSgpLmVtYWlsIHx8ICcnLFxyXG4vLyAgICAgICB9KSk7XHJcblxyXG4vLyAgICAgICBjb25zdCBvbmVXZWVrQWdvID0gVGltZXN0YW1wLmZyb21EYXRlKG5ldyBEYXRlKERhdGUubm93KCkgLSA3ICogMjQgKiA2MCAqIDYwICogMTAwMCkpO1xyXG5cclxuLy8gICAgICAgY29uc3QgZGVwb3NpdFNuYXAgPSBhd2FpdCBnZXREb2NzKFxyXG4vLyAgICAgICAgIHF1ZXJ5KFxyXG4vLyAgICAgICAgICAgY29sbGVjdGlvbihkYiwgJ2RlcG9zaXRSZXF1ZXN0cycpLFxyXG4vLyAgICAgICAgICAgd2hlcmUoJ3N0YXR1cycsICc9PScsICdhcHByb3ZlZCcpLFxyXG4vLyAgICAgICAgICAgd2hlcmUoJ2NyZWF0ZWRBdCcsICc+PScsIG9uZVdlZWtBZ28pXHJcbi8vICAgICAgICAgKVxyXG4vLyAgICAgICApO1xyXG5cclxuLy8gICAgICAgY29uc3Qgd2l0aGRyYXdTbmFwID0gYXdhaXQgZ2V0RG9jcyhcclxuLy8gICAgICAgICBxdWVyeShcclxuLy8gICAgICAgICAgIGNvbGxlY3Rpb24oZGIsICd3aXRoZHJhd1JlcXVlc3RzJyksXHJcbi8vICAgICAgICAgICB3aGVyZSgnc3RhdHVzJywgJz09JywgJ2FwcHJvdmVkJyksXHJcbi8vICAgICAgICAgICB3aGVyZSgnY3JlYXRlZEF0JywgJz49Jywgb25lV2Vla0FnbylcclxuLy8gICAgICAgICApXHJcbi8vICAgICAgICk7XHJcblxyXG4vLyAgICAgICBjb25zdCBkZXBvc2l0TWFwID0ge307XHJcbi8vICAgICAgIGRlcG9zaXRTbmFwLmZvckVhY2goKGRvYykgPT4ge1xyXG4vLyAgICAgICAgIGNvbnN0IGRhdGEgPSBkb2MuZGF0YSgpO1xyXG4vLyAgICAgICAgIGlmICghZGVwb3NpdE1hcFtkYXRhLnVpZF0pIGRlcG9zaXRNYXBbZGF0YS51aWRdID0gMDtcclxuLy8gICAgICAgICBkZXBvc2l0TWFwW2RhdGEudWlkXSArPSBkYXRhLmFtb3VudCB8fCAwO1xyXG4vLyAgICAgICB9KTtcclxuXHJcbi8vICAgICAgIGNvbnN0IHdpdGhkcmF3TWFwID0ge307XHJcbi8vICAgICAgIHdpdGhkcmF3U25hcC5mb3JFYWNoKChkb2MpID0+IHtcclxuLy8gICAgICAgICBjb25zdCBkYXRhID0gZG9jLmRhdGEoKTtcclxuLy8gICAgICAgICBpZiAoIXdpdGhkcmF3TWFwW2RhdGEudWlkXSkgd2l0aGRyYXdNYXBbZGF0YS51aWRdID0gMDtcclxuLy8gICAgICAgICB3aXRoZHJhd01hcFtkYXRhLnVpZF0gKz0gZGF0YS5hbW91bnQgfHwgMDtcclxuLy8gICAgICAgfSk7XHJcblxyXG4vLyAgICAgICBjb25zdCBmaW5hbFVzZXJzID0gd2FsbGV0cy5tYXAoKHVzZXIpID0+ICh7XHJcbi8vICAgICAgICAgLi4udXNlcixcclxuLy8gICAgICAgICB0b3RhbERlcG9zaXRlZDogZGVwb3NpdE1hcFt1c2VyLnVpZF0gfHwgMCxcclxuLy8gICAgICAgICB0b3RhbFdpdGhkcmF3bjogd2l0aGRyYXdNYXBbdXNlci51aWRdIHx8IDAsXHJcbi8vICAgICAgIH0pKTtcclxuXHJcbi8vICAgICAgIHNldFVzZXJzKGZpbmFsVXNlcnMpO1xyXG4vLyAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuLy8gICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgdXNlciB3YWxsZXQgZGF0YTonLCBlcnJvcik7XHJcbi8vICAgICAgIGFsZXJ0KCdFcnJvciBsb2FkaW5nIHdhbGxldCBkYXRhLicpO1xyXG4vLyAgICAgfVxyXG5cclxuLy8gICAgIHNldExvYWRpbmcoZmFsc2UpO1xyXG4vLyAgIH07XHJcblxyXG4vLyAgIGNvbnN0IGV4cG9ydFRvQ1NWID0gKCkgPT4ge1xyXG4vLyAgICAgY29uc3QgaGVhZGVycyA9IFsnRW1haWwnLCAnQmFsYW5jZScsICdEZXBvc2l0ZWQgKDcgZGF5cyknLCAnV2l0aGRyYXduICg3IGRheXMpJ107XHJcbi8vICAgICBjb25zdCByb3dzID0gdXNlcnMubWFwKHUgPT4gW3UuZW1haWwsIHUuYmFsYW5jZSwgdS50b3RhbERlcG9zaXRlZCwgdS50b3RhbFdpdGhkcmF3bl0pO1xyXG4vLyAgICAgY29uc3QgY3N2Q29udGVudCA9IFtoZWFkZXJzLCAuLi5yb3dzXS5tYXAociA9PiByLmpvaW4oJywnKSkuam9pbignXFxuJyk7XHJcblxyXG4vLyAgICAgY29uc3QgYmxvYiA9IG5ldyBCbG9iKFtjc3ZDb250ZW50XSwgeyB0eXBlOiAndGV4dC9jc3Y7Y2hhcnNldD11dGYtODsnIH0pO1xyXG4vLyAgICAgY29uc3QgdXJsID0gVVJMLmNyZWF0ZU9iamVjdFVSTChibG9iKTtcclxuLy8gICAgIGNvbnN0IGxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7XHJcbi8vICAgICBsaW5rLnNldEF0dHJpYnV0ZSgnaHJlZicsIHVybCk7XHJcbi8vICAgICBsaW5rLnNldEF0dHJpYnV0ZSgnZG93bmxvYWQnLCAndXNlcl93YWxsZXRzLmNzdicpO1xyXG4vLyAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChsaW5rKTtcclxuLy8gICAgIGxpbmsuY2xpY2soKTtcclxuLy8gICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQobGluayk7XHJcbi8vICAgfTtcclxuXHJcbi8vICAgY29uc3QgZmlsdGVyZWRVc2VycyA9IHVzZXJzLmZpbHRlcih1ID0+XHJcbi8vICAgICB1LmVtYWlsLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoc2VhcmNoLnRvTG93ZXJDYXNlKCkpXHJcbi8vICAgKTtcclxuXHJcbi8vICAgcmV0dXJuIChcclxuLy8gICAgIDxMYXlvdXQ+XHJcbi8vICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWluLWgtc2NyZWVuIGJnLWdyYXktOTAwIHRleHQtd2hpdGUgcC04XCI+XHJcbi8vICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYXgtdy01eGwgbXgtYXV0b1wiPlxyXG4vLyAgICAgICAgICAgPGgxIGNsYXNzTmFtZT1cInRleHQtM3hsIGZvbnQtYm9sZCBtYi02XCI+QWRtaW46IFVzZXIgV2FsbGV0IE92ZXJ2aWV3PC9oMT5cclxuXHJcbi8vICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIGdhcC00IG1iLTZcIj5cclxuLy8gICAgICAgICAgICAgPGlucHV0XHJcbi8vICAgICAgICAgICAgICAgdHlwZT1cInRleHRcIlxyXG4vLyAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiU2VhcmNoIGJ5IGVtYWlsLi4uXCJcclxuLy8gICAgICAgICAgICAgICB2YWx1ZT17c2VhcmNofVxyXG4vLyAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gc2V0U2VhcmNoKGUudGFyZ2V0LnZhbHVlKX1cclxuLy8gICAgICAgICAgICAgICBjbGFzc05hbWU9XCJweC00IHB5LTIgcm91bmRlZCBiZy1ncmF5LTgwMCBib3JkZXIgYm9yZGVyLWdyYXktNjAwIGZvY3VzOm91dGxpbmUtbm9uZVwiXHJcbi8vICAgICAgICAgICAgIC8+XHJcbi8vICAgICAgICAgICAgIDxidXR0b25cclxuLy8gICAgICAgICAgICAgICBvbkNsaWNrPXtleHBvcnRUb0NTVn1cclxuLy8gICAgICAgICAgICAgICBjbGFzc05hbWU9XCJweC00IHB5LTIgYmcteWVsbG93LTUwMCBob3ZlcjpiZy15ZWxsb3ctNjAwIHRleHQtYmxhY2sgcm91bmRlZCBmb250LXNlbWlib2xkXCJcclxuLy8gICAgICAgICAgICAgPlxyXG4vLyAgICAgICAgICAgICAgIEV4cG9ydCBDU1ZcclxuLy8gICAgICAgICAgICAgPC9idXR0b24+XHJcbi8vICAgICAgICAgICA8L2Rpdj5cclxuXHJcbi8vICAgICAgICAgICB7bG9hZGluZyA/IChcclxuLy8gICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dC15ZWxsb3ctMzAwXCI+TG9hZGluZy4uLjwvcD5cclxuLy8gICAgICAgICAgICkgOiBmaWx0ZXJlZFVzZXJzLmxlbmd0aCA9PT0gMCA/IChcclxuLy8gICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dC1ncmF5LTQwMFwiPk5vIHVzZXJzIGZvdW5kLjwvcD5cclxuLy8gICAgICAgICAgICkgOiAoXHJcbi8vICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwib3ZlcmZsb3cteC1hdXRvIGJnLWdyYXktODAwIHJvdW5kZWQtbGcgc2hhZG93LXhsXCI+XHJcbi8vICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzTmFtZT1cInctZnVsbCB0ZXh0LWxlZnQgdGFibGUtYXV0b1wiPlxyXG4vLyAgICAgICAgICAgICAgICAgPHRoZWFkIGNsYXNzTmFtZT1cImJnLWdyYXktNzAwIHRleHQtc20gdXBwZXJjYXNlIHRleHQtZ3JheS0zMDBcIj5cclxuLy8gICAgICAgICAgICAgICAgICAgPHRyPlxyXG4vLyAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJwLTNcIj5FbWFpbDwvdGg+XHJcbi8vICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cInAtM1wiPkJhbGFuY2U8L3RoPlxyXG4vLyAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJwLTNcIj5EZXBvc2l0ZWQgKDdkKTwvdGg+XHJcbi8vICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cInAtM1wiPldpdGhkcmF3biAoN2QpPC90aD5cclxuLy8gICAgICAgICAgICAgICAgICAgPC90cj5cclxuLy8gICAgICAgICAgICAgICAgIDwvdGhlYWQ+XHJcbi8vICAgICAgICAgICAgICAgICA8dGJvZHk+XHJcbi8vICAgICAgICAgICAgICAgICAgIHtmaWx0ZXJlZFVzZXJzLm1hcCgodXNlcikgPT4gKFxyXG4vLyAgICAgICAgICAgICAgICAgICAgIDx0ciBrZXk9e3VzZXIudWlkfSBjbGFzc05hbWU9XCJib3JkZXItdCBib3JkZXItZ3JheS03MDBcIj5cclxuLy8gICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJwLTNcIj57dXNlci5lbWFpbCB8fCAnTi9BJ308L3RkPlxyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cInAtM1wiPuKCuXt1c2VyLmJhbGFuY2V9PC90ZD5cclxuLy8gICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJwLTNcIj7igrl7dXNlci50b3RhbERlcG9zaXRlZH08L3RkPlxyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cInAtM1wiPuKCuXt1c2VyLnRvdGFsV2l0aGRyYXdufTwvdGQ+XHJcbi8vICAgICAgICAgICAgICAgICAgICAgPC90cj5cclxuLy8gICAgICAgICAgICAgICAgICAgKSl9XHJcbi8vICAgICAgICAgICAgICAgICA8L3Rib2R5PlxyXG4vLyAgICAgICAgICAgICAgIDwvdGFibGU+XHJcbi8vICAgICAgICAgICAgIDwvZGl2PlxyXG4vLyAgICAgICAgICAgKX1cclxuLy8gICAgICAgICA8L2Rpdj5cclxuLy8gICAgICAgPC9kaXY+XHJcbi8vICAgICA8L0xheW91dD5cclxuLy8gICApO1xyXG4vLyB9XHJcblxyXG5cclxuLy8gJ3VzZSBjbGllbnQnO1xyXG5cclxuLy8gaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XHJcbi8vIGltcG9ydCB7XHJcbi8vICAgZ2V0RmlyZXN0b3JlLFxyXG4vLyAgIGNvbGxlY3Rpb24sXHJcbi8vICAgZ2V0RG9jcyxcclxuLy8gICBxdWVyeSxcclxuLy8gICB3aGVyZSxcclxuLy8gICBUaW1lc3RhbXAsXHJcbi8vIH0gZnJvbSAnZmlyZWJhc2UvZmlyZXN0b3JlJztcclxuLy8gaW1wb3J0IGZpcmViYXNlQXBwIGZyb20gJ0AvZmlyZWJhc2UnO1xyXG4vLyBpbXBvcnQgTGF5b3V0IGZyb20gJ0AvYXBwL0NvbXBvbmVudHMvTGF5b3V0JztcclxuXHJcbi8vIGV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEFkbWluVXNlcldhbGxldHNQYWdlKCkge1xyXG4vLyAgIGNvbnN0IGRiID0gZ2V0RmlyZXN0b3JlKGZpcmViYXNlQXBwKTtcclxuXHJcbi8vICAgY29uc3QgW3VzZXJzLCBzZXRVc2Vyc10gPSB1c2VTdGF0ZShbXSk7XHJcbi8vICAgY29uc3QgW2xvYWRpbmcsIHNldExvYWRpbmddID0gdXNlU3RhdGUodHJ1ZSk7XHJcbi8vICAgY29uc3QgW3NlYXJjaCwgc2V0U2VhcmNoXSA9IHVzZVN0YXRlKCcnKTtcclxuLy8gICBjb25zdCBbc2VsZWN0ZWRVc2VyLCBzZXRTZWxlY3RlZFVzZXJdID0gdXNlU3RhdGUobnVsbCk7XHJcbi8vICAgY29uc3QgW2hpc3RvcnksIHNldEhpc3RvcnldID0gdXNlU3RhdGUoeyBkZXBvc2l0czogW10sIHdpdGhkcmF3YWxzOiBbXSB9KTtcclxuLy8gICBjb25zdCBbaGlzdG9yeUxvYWRpbmcsIHNldEhpc3RvcnlMb2FkaW5nXSA9IHVzZVN0YXRlKGZhbHNlKTtcclxuXHJcbi8vICAgdXNlRWZmZWN0KCgpID0+IHtcclxuLy8gICAgIGZldGNoVXNlcldhbGxldERhdGEoKTtcclxuLy8gICB9LCBbXSk7XHJcblxyXG4vLyAgIGNvbnN0IGZldGNoVXNlcldhbGxldERhdGEgPSBhc3luYyAoKSA9PiB7XHJcbi8vICAgICBzZXRMb2FkaW5nKHRydWUpO1xyXG5cclxuLy8gICAgIHRyeSB7XHJcbi8vICAgICAgIGNvbnN0IHdhbGxldHNTbmFwID0gYXdhaXQgZ2V0RG9jcyhjb2xsZWN0aW9uKGRiLCAnd2FsbGV0cycpKTtcclxuLy8gICAgICAgY29uc3Qgd2FsbGV0cyA9IHdhbGxldHNTbmFwLmRvY3MubWFwKChkb2MpID0+ICh7XHJcbi8vICAgICAgICAgdWlkOiBkb2MuaWQsXHJcbi8vICAgICAgICAgYmFsYW5jZTogZG9jLmRhdGEoKS5iYWxhbmNlIHx8IDAsXHJcbi8vICAgICAgICAgZW1haWw6IGRvYy5kYXRhKCkuZW1haWwgfHwgJycsXHJcbi8vICAgICAgIH0pKTtcclxuXHJcbi8vICAgICAgIGNvbnN0IG9uZVdlZWtBZ28gPSBUaW1lc3RhbXAuZnJvbURhdGUobmV3IERhdGUoRGF0ZS5ub3coKSAtIDcgKiAyNCAqIDYwICogNjAgKiAxMDAwKSk7XHJcblxyXG4vLyAgICAgICBjb25zdCBkZXBvc2l0U25hcCA9IGF3YWl0IGdldERvY3MoXHJcbi8vICAgICAgICAgcXVlcnkoXHJcbi8vICAgICAgICAgICBjb2xsZWN0aW9uKGRiLCAnZGVwb3NpdFJlcXVlc3RzJyksXHJcbi8vICAgICAgICAgICB3aGVyZSgnc3RhdHVzJywgJz09JywgJ2FwcHJvdmVkJyksXHJcbi8vICAgICAgICAgICB3aGVyZSgnY3JlYXRlZEF0JywgJz49Jywgb25lV2Vla0FnbylcclxuLy8gICAgICAgICApXHJcbi8vICAgICAgICk7XHJcblxyXG4vLyAgICAgICBjb25zdCB3aXRoZHJhd1NuYXAgPSBhd2FpdCBnZXREb2NzKFxyXG4vLyAgICAgICAgIHF1ZXJ5KFxyXG4vLyAgICAgICAgICAgY29sbGVjdGlvbihkYiwgJ3dpdGhkcmF3UmVxdWVzdHMnKSxcclxuLy8gICAgICAgICAgIHdoZXJlKCdzdGF0dXMnLCAnPT0nLCAnYXBwcm92ZWQnKSxcclxuLy8gICAgICAgICAgIHdoZXJlKCdjcmVhdGVkQXQnLCAnPj0nLCBvbmVXZWVrQWdvKVxyXG4vLyAgICAgICAgIClcclxuLy8gICAgICAgKTtcclxuXHJcbi8vICAgICAgIGNvbnN0IGRlcG9zaXRNYXAgPSB7fTtcclxuLy8gICAgICAgZGVwb3NpdFNuYXAuZm9yRWFjaCgoZG9jKSA9PiB7XHJcbi8vICAgICAgICAgY29uc3QgZGF0YSA9IGRvYy5kYXRhKCk7XHJcbi8vICAgICAgICAgaWYgKCFkZXBvc2l0TWFwW2RhdGEudWlkXSkgZGVwb3NpdE1hcFtkYXRhLnVpZF0gPSAwO1xyXG4vLyAgICAgICAgIGRlcG9zaXRNYXBbZGF0YS51aWRdICs9IGRhdGEuYW1vdW50IHx8IDA7XHJcbi8vICAgICAgIH0pO1xyXG5cclxuLy8gICAgICAgY29uc3Qgd2l0aGRyYXdNYXAgPSB7fTtcclxuLy8gICAgICAgd2l0aGRyYXdTbmFwLmZvckVhY2goKGRvYykgPT4ge1xyXG4vLyAgICAgICAgIGNvbnN0IGRhdGEgPSBkb2MuZGF0YSgpO1xyXG4vLyAgICAgICAgIGlmICghd2l0aGRyYXdNYXBbZGF0YS51aWRdKSB3aXRoZHJhd01hcFtkYXRhLnVpZF0gPSAwO1xyXG4vLyAgICAgICAgIHdpdGhkcmF3TWFwW2RhdGEudWlkXSArPSBkYXRhLmFtb3VudCB8fCAwO1xyXG4vLyAgICAgICB9KTtcclxuXHJcbi8vICAgICAgIGNvbnN0IGZpbmFsVXNlcnMgPSB3YWxsZXRzLm1hcCgodXNlcikgPT4gKHtcclxuLy8gICAgICAgICAuLi51c2VyLFxyXG4vLyAgICAgICAgIHRvdGFsRGVwb3NpdGVkOiBkZXBvc2l0TWFwW3VzZXIudWlkXSB8fCAwLFxyXG4vLyAgICAgICAgIHRvdGFsV2l0aGRyYXduOiB3aXRoZHJhd01hcFt1c2VyLnVpZF0gfHwgMCxcclxuLy8gICAgICAgfSkpO1xyXG5cclxuLy8gICAgICAgc2V0VXNlcnMoZmluYWxVc2Vycyk7XHJcbi8vICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4vLyAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBmZXRjaGluZyB1c2VyIHdhbGxldCBkYXRhOicsIGVycm9yKTtcclxuLy8gICAgICAgYWxlcnQoJ0Vycm9yIGxvYWRpbmcgd2FsbGV0IGRhdGEuJyk7XHJcbi8vICAgICB9XHJcblxyXG4vLyAgICAgc2V0TG9hZGluZyhmYWxzZSk7XHJcbi8vICAgfTtcclxuXHJcbi8vICAgY29uc3QgZmV0Y2hVc2VySGlzdG9yeSA9IGFzeW5jICh1aWQpID0+IHtcclxuLy8gICAgIHNldEhpc3RvcnlMb2FkaW5nKHRydWUpO1xyXG4vLyAgICAgdHJ5IHtcclxuLy8gICAgICAgY29uc3QgZGVwb3NpdHNTbmFwID0gYXdhaXQgZ2V0RG9jcyhcclxuLy8gICAgICAgICBxdWVyeShjb2xsZWN0aW9uKGRiLCAnZGVwb3NpdFJlcXVlc3RzJyksIHdoZXJlKCd1aWQnLCAnPT0nLCB1aWQpKVxyXG4vLyAgICAgICApO1xyXG4vLyAgICAgICBjb25zdCB3aXRoZHJhd2Fsc1NuYXAgPSBhd2FpdCBnZXREb2NzKFxyXG4vLyAgICAgICAgIHF1ZXJ5KGNvbGxlY3Rpb24oZGIsICd3aXRoZHJhd1JlcXVlc3RzJyksIHdoZXJlKCd1aWQnLCAnPT0nLCB1aWQpKVxyXG4vLyAgICAgICApO1xyXG5cclxuLy8gICAgICAgY29uc3QgZGVwb3NpdHMgPSBkZXBvc2l0c1NuYXAuZG9jcy5tYXAoKGRvYykgPT4gKHsgaWQ6IGRvYy5pZCwgLi4uZG9jLmRhdGEoKSB9KSk7XHJcbi8vICAgICAgIGNvbnN0IHdpdGhkcmF3YWxzID0gd2l0aGRyYXdhbHNTbmFwLmRvY3MubWFwKChkb2MpID0+ICh7IGlkOiBkb2MuaWQsIC4uLmRvYy5kYXRhKCkgfSkpO1xyXG5cclxuLy8gICAgICAgc2V0SGlzdG9yeSh7IGRlcG9zaXRzLCB3aXRoZHJhd2FscyB9KTtcclxuLy8gICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbi8vICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGxvYWRpbmcgaGlzdG9yeTonLCBlcnJvcik7XHJcbi8vICAgICB9XHJcbi8vICAgICBzZXRIaXN0b3J5TG9hZGluZyhmYWxzZSk7XHJcbi8vICAgfTtcclxuXHJcbi8vICAgY29uc3QgZXhwb3J0VG9DU1YgPSAoKSA9PiB7XHJcbi8vICAgICBjb25zdCBoZWFkZXJzID0gWydFbWFpbCcsICdCYWxhbmNlJywgJ0RlcG9zaXRlZCAoNyBkYXlzKScsICdXaXRoZHJhd24gKDcgZGF5cyknXTtcclxuLy8gICAgIGNvbnN0IHJvd3MgPSB1c2Vycy5tYXAodSA9PiBbdS5lbWFpbCwgdS5iYWxhbmNlLCB1LnRvdGFsRGVwb3NpdGVkLCB1LnRvdGFsV2l0aGRyYXduXSk7XHJcbi8vICAgICBjb25zdCBjc3ZDb250ZW50ID0gW2hlYWRlcnMsIC4uLnJvd3NdLm1hcChyID0+IHIuam9pbignLCcpKS5qb2luKCdcXG4nKTtcclxuXHJcbi8vICAgICBjb25zdCBibG9iID0gbmV3IEJsb2IoW2NzdkNvbnRlbnRdLCB7IHR5cGU6ICd0ZXh0L2NzdjtjaGFyc2V0PXV0Zi04OycgfSk7XHJcbi8vICAgICBjb25zdCB1cmwgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpO1xyXG4vLyAgICAgY29uc3QgbGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTtcclxuLy8gICAgIGxpbmsuc2V0QXR0cmlidXRlKCdocmVmJywgdXJsKTtcclxuLy8gICAgIGxpbmsuc2V0QXR0cmlidXRlKCdkb3dubG9hZCcsICd1c2VyX3dhbGxldHMuY3N2Jyk7XHJcbi8vICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGxpbmspO1xyXG4vLyAgICAgbGluay5jbGljaygpO1xyXG4vLyAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChsaW5rKTtcclxuLy8gICB9O1xyXG5cclxuLy8gICBjb25zdCBmaWx0ZXJlZFVzZXJzID0gdXNlcnMuZmlsdGVyKHUgPT5cclxuLy8gICAgIHUuZW1haWwudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhzZWFyY2gudG9Mb3dlckNhc2UoKSlcclxuLy8gICApO1xyXG5cclxuLy8gICByZXR1cm4gKFxyXG4vLyAgICAgPExheW91dD5cclxuLy8gICAgICAgPGRpdiBjbGFzc05hbWU9XCJtaW4taC1zY3JlZW4gYmctZ3JheS05MDAgdGV4dC13aGl0ZSBwLThcIj5cclxuLy8gICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1heC13LTZ4bCBteC1hdXRvXCI+XHJcbi8vICAgICAgICAgICA8aDEgY2xhc3NOYW1lPVwidGV4dC0zeGwgZm9udC1ib2xkIG1iLTZcIj5BZG1pbjogVXNlciBXYWxsZXQgT3ZlcnZpZXc8L2gxPlxyXG5cclxuLy8gICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTQgbWItNlwiPlxyXG4vLyAgICAgICAgICAgICA8aW5wdXRcclxuLy8gICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiXHJcbi8vICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJTZWFyY2ggYnkgZW1haWwuLi5cIlxyXG4vLyAgICAgICAgICAgICAgIHZhbHVlPXtzZWFyY2h9XHJcbi8vICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiBzZXRTZWFyY2goZS50YXJnZXQudmFsdWUpfVxyXG4vLyAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInB4LTQgcHktMiByb3VuZGVkIGJnLWdyYXktODAwIGJvcmRlciBib3JkZXItZ3JheS02MDAgZm9jdXM6b3V0bGluZS1ub25lXCJcclxuLy8gICAgICAgICAgICAgLz5cclxuLy8gICAgICAgICAgICAgPGJ1dHRvblxyXG4vLyAgICAgICAgICAgICAgIG9uQ2xpY2s9e2V4cG9ydFRvQ1NWfVxyXG4vLyAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInB4LTQgcHktMiBiZy15ZWxsb3ctNTAwIGhvdmVyOmJnLXllbGxvdy02MDAgdGV4dC1ibGFjayByb3VuZGVkIGZvbnQtc2VtaWJvbGRcIlxyXG4vLyAgICAgICAgICAgICA+XHJcbi8vICAgICAgICAgICAgICAgRXhwb3J0IENTVlxyXG4vLyAgICAgICAgICAgICA8L2J1dHRvbj5cclxuLy8gICAgICAgICAgIDwvZGl2PlxyXG5cclxuLy8gICAgICAgICAgIHtsb2FkaW5nID8gKFxyXG4vLyAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0LXllbGxvdy0zMDBcIj5Mb2FkaW5nLi4uPC9wPlxyXG4vLyAgICAgICAgICAgKSA6IGZpbHRlcmVkVXNlcnMubGVuZ3RoID09PSAwID8gKFxyXG4vLyAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0LWdyYXktNDAwXCI+Tm8gdXNlcnMgZm91bmQuPC9wPlxyXG4vLyAgICAgICAgICAgKSA6IChcclxuLy8gICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJvdmVyZmxvdy14LWF1dG8gYmctZ3JheS04MDAgcm91bmRlZC1sZyBzaGFkb3cteGxcIj5cclxuLy8gICAgICAgICAgICAgICA8dGFibGUgY2xhc3NOYW1lPVwidy1mdWxsIHRleHQtbGVmdCB0YWJsZS1hdXRvXCI+XHJcbi8vICAgICAgICAgICAgICAgICA8dGhlYWQgY2xhc3NOYW1lPVwiYmctZ3JheS03MDAgdGV4dC1zbSB1cHBlcmNhc2UgdGV4dC1ncmF5LTMwMFwiPlxyXG4vLyAgICAgICAgICAgICAgICAgICA8dHI+XHJcbi8vICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cInAtM1wiPkVtYWlsPC90aD5cclxuLy8gICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3NOYW1lPVwicC0zXCI+QmFsYW5jZTwvdGg+XHJcbi8vICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cInAtM1wiPkRlcG9zaXRlZCAoN2QpPC90aD5cclxuLy8gICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3NOYW1lPVwicC0zXCI+V2l0aGRyYXduICg3ZCk8L3RoPlxyXG4vLyAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJwLTNcIj5IaXN0b3J5PC90aD5cclxuLy8gICAgICAgICAgICAgICAgICAgPC90cj5cclxuLy8gICAgICAgICAgICAgICAgIDwvdGhlYWQ+XHJcbi8vICAgICAgICAgICAgICAgICA8dGJvZHk+XHJcbi8vICAgICAgICAgICAgICAgICAgIHtmaWx0ZXJlZFVzZXJzLm1hcCgodXNlcikgPT4gKFxyXG4vLyAgICAgICAgICAgICAgICAgICAgIDx0ciBrZXk9e3VzZXIudWlkfSBjbGFzc05hbWU9XCJib3JkZXItdCBib3JkZXItZ3JheS03MDBcIj5cclxuLy8gICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJwLTNcIj57dXNlci5lbWFpbCB8fCAnTi9BJ308L3RkPlxyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cInAtM1wiPuKCuXt1c2VyLmJhbGFuY2V9PC90ZD5cclxuLy8gICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJwLTNcIj7igrl7dXNlci50b3RhbERlcG9zaXRlZH08L3RkPlxyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cInAtM1wiPuKCuXt1c2VyLnRvdGFsV2l0aGRyYXdufTwvdGQ+XHJcbi8vICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3NOYW1lPVwicC0zXCI+XHJcbi8vICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b25cclxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJ0ZXh0LWJsdWUtNDAwIHVuZGVybGluZVwiXHJcbi8vICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4ge1xyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0U2VsZWN0ZWRVc2VyKHVzZXIpO1xyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmV0Y2hVc2VySGlzdG9yeSh1c2VyLnVpZCk7XHJcbi8vICAgICAgICAgICAgICAgICAgICAgICAgICAgfX1cclxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgPlxyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICAgIFZpZXdcclxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XHJcbi8vICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxyXG4vLyAgICAgICAgICAgICAgICAgICAgIDwvdHI+XHJcbi8vICAgICAgICAgICAgICAgICAgICkpfVxyXG4vLyAgICAgICAgICAgICAgICAgPC90Ym9keT5cclxuLy8gICAgICAgICAgICAgICA8L3RhYmxlPlxyXG4vLyAgICAgICAgICAgICA8L2Rpdj5cclxuLy8gICAgICAgICAgICl9XHJcblxyXG4vLyAgICAgICAgICAgey8qIFRyYW5zYWN0aW9uIGhpc3RvcnkgbW9kYWwgKi99XHJcbi8vICAgICAgICAgICB7c2VsZWN0ZWRVc2VyICYmIChcclxuLy8gICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmaXhlZCBpbnNldC0wIGJnLWJsYWNrIGJnLW9wYWNpdHktNTAgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgei01MFwiPlxyXG4vLyAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYmctZ3JheS05MDAgcC02IHJvdW5kZWQtbGcgdy1mdWxsIG1heC13LTN4bCByZWxhdGl2ZVwiPlxyXG4vLyAgICAgICAgICAgICAgICAgPGgyIGNsYXNzTmFtZT1cInRleHQtMnhsIGZvbnQtYm9sZCBtYi00XCI+XHJcbi8vICAgICAgICAgICAgICAgICAgIHtzZWxlY3RlZFVzZXIuZW1haWx9IC0gVHJhbnNhY3Rpb24gSGlzdG9yeVxyXG4vLyAgICAgICAgICAgICAgICAgPC9oMj5cclxuLy8gICAgICAgICAgICAgICAgIDxidXR0b25cclxuLy8gICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiYWJzb2x1dGUgdG9wLTMgcmlnaHQtMyB0ZXh0LWdyYXktNDAwIGhvdmVyOnRleHQtd2hpdGVcIlxyXG4vLyAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBzZXRTZWxlY3RlZFVzZXIobnVsbCl9XHJcbi8vICAgICAgICAgICAgICAgICA+XHJcbi8vICAgICAgICAgICAgICAgICAgIOKclVxyXG4vLyAgICAgICAgICAgICAgICAgPC9idXR0b24+XHJcblxyXG4vLyAgICAgICAgICAgICAgICAge2hpc3RvcnlMb2FkaW5nID8gKFxyXG4vLyAgICAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0LXllbGxvdy0zMDBcIj5Mb2FkaW5nIGhpc3RvcnkuLi48L3A+XHJcbi8vICAgICAgICAgICAgICAgICApIDogKFxyXG4vLyAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImdyaWQgZ3JpZC1jb2xzLTEgbWQ6Z3JpZC1jb2xzLTIgZ2FwLTZcIj5cclxuLy8gICAgICAgICAgICAgICAgICAgICA8ZGl2PlxyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgPGgzIGNsYXNzTmFtZT1cInRleHQtbGcgZm9udC1zZW1pYm9sZCBtYi0yXCI+RGVwb3NpdHM8L2gzPlxyXG4vLyAgICAgICAgICAgICAgICAgICAgICAge2hpc3RvcnkuZGVwb3NpdHMubGVuZ3RoID09PSAwID8gKFxyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0LWdyYXktNDAwXCI+Tm8gZGVwb3NpdCBoaXN0b3J5LjwvcD5cclxuLy8gICAgICAgICAgICAgICAgICAgICAgICkgOiAoXHJcbi8vICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzc05hbWU9XCJzcGFjZS15LTIgdGV4dC1zbVwiPlxyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICAgIHtoaXN0b3J5LmRlcG9zaXRzLm1hcCgoZCkgPT4gKFxyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGtleT17ZC5pZH0gY2xhc3NOYW1lPVwiYmctZ3JheS04MDAgcC0yIHJvdW5kZWRcIj5cclxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg4oK5e2QuYW1vdW50fSAtIHtkLnN0YXR1c30gLSB7ZC5jcmVhdGVkQXQ/LnRvRGF0ZSgpLnRvTG9jYWxlU3RyaW5nKCl9XHJcbi8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPlxyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICAgICkpfVxyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPlxyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgKX1cclxuLy8gICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuLy8gICAgICAgICAgICAgICAgICAgICA8ZGl2PlxyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgPGgzIGNsYXNzTmFtZT1cInRleHQtbGcgZm9udC1zZW1pYm9sZCBtYi0yXCI+V2l0aGRyYXdhbHM8L2gzPlxyXG4vLyAgICAgICAgICAgICAgICAgICAgICAge2hpc3Rvcnkud2l0aGRyYXdhbHMubGVuZ3RoID09PSAwID8gKFxyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0LWdyYXktNDAwXCI+Tm8gd2l0aGRyYXdhbCBoaXN0b3J5LjwvcD5cclxuLy8gICAgICAgICAgICAgICAgICAgICAgICkgOiAoXHJcbi8vICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzc05hbWU9XCJzcGFjZS15LTIgdGV4dC1zbVwiPlxyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICAgIHtoaXN0b3J5LndpdGhkcmF3YWxzLm1hcCgodykgPT4gKFxyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGtleT17dy5pZH0gY2xhc3NOYW1lPVwiYmctZ3JheS04MDAgcC0yIHJvdW5kZWRcIj5cclxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg4oK5e3cuYW1vdW50fSAtIHt3LnN0YXR1c30gLSB7dy5jcmVhdGVkQXQ/LnRvRGF0ZSgpLnRvTG9jYWxlU3RyaW5nKCl9XHJcbi8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPlxyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICAgICkpfVxyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPlxyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgKX1cclxuLy8gICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuLy8gICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbi8vICAgICAgICAgICAgICAgICApfVxyXG4vLyAgICAgICAgICAgICAgIDwvZGl2PlxyXG4vLyAgICAgICAgICAgICA8L2Rpdj5cclxuLy8gICAgICAgICAgICl9XHJcbi8vICAgICAgICAgPC9kaXY+XHJcbi8vICAgICAgIDwvZGl2PlxyXG4vLyAgICAgPC9MYXlvdXQ+XHJcbi8vICAgKTtcclxuLy8gfVxyXG5cclxuXHJcbi8vICd1c2UgY2xpZW50JztcclxuXHJcbi8vIGltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xyXG4vLyBpbXBvcnQge1xyXG4vLyAgIGdldEZpcmVzdG9yZSxcclxuLy8gICBjb2xsZWN0aW9uLFxyXG4vLyAgIGdldERvY3MsXHJcbi8vICAgcXVlcnksXHJcbi8vICAgd2hlcmUsXHJcbi8vICAgVGltZXN0YW1wLFxyXG4vLyAgIGRvYyxcclxuLy8gICBnZXREb2MsXHJcbi8vIH0gZnJvbSAnZmlyZWJhc2UvZmlyZXN0b3JlJztcclxuLy8gaW1wb3J0IHsgZ2V0QXV0aCwgb25BdXRoU3RhdGVDaGFuZ2VkIH0gZnJvbSAnZmlyZWJhc2UvYXV0aCc7XHJcbi8vIGltcG9ydCBmaXJlYmFzZUFwcCBmcm9tICdAL2ZpcmViYXNlJztcclxuLy8gaW1wb3J0IExheW91dCBmcm9tICdAL2FwcC9Db21wb25lbnRzL0xheW91dCc7XHJcblxyXG4vLyBleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBBZG1pblVzZXJXYWxsZXRzUGFnZSgpIHtcclxuLy8gICBjb25zdCBhdXRoID0gZ2V0QXV0aChmaXJlYmFzZUFwcCk7XHJcbi8vICAgY29uc3QgZGIgPSBnZXRGaXJlc3RvcmUoZmlyZWJhc2VBcHApO1xyXG5cclxuLy8gICBjb25zdCBbdXNlcnMsIHNldFVzZXJzXSA9IHVzZVN0YXRlKFtdKTtcclxuLy8gICBjb25zdCBbbG9hZGluZywgc2V0TG9hZGluZ10gPSB1c2VTdGF0ZSh0cnVlKTtcclxuLy8gICBjb25zdCBbc2VhcmNoLCBzZXRTZWFyY2hdID0gdXNlU3RhdGUoJycpO1xyXG4vLyAgIGNvbnN0IFtjdXJyZW50VXNlciwgc2V0Q3VycmVudFVzZXJdID0gdXNlU3RhdGUobnVsbCk7XHJcbi8vICAgY29uc3QgW3JvbGUsIHNldFJvbGVdID0gdXNlU3RhdGUobnVsbCk7XHJcblxyXG4vLyAgIHVzZUVmZmVjdCgoKSA9PiB7XHJcbi8vICAgICBjb25zdCB1bnN1YnNjcmliZSA9IG9uQXV0aFN0YXRlQ2hhbmdlZChhdXRoLCBhc3luYyAodXNlcikgPT4ge1xyXG4vLyAgICAgICBzZXRDdXJyZW50VXNlcih1c2VyKTtcclxuLy8gICAgICAgaWYgKHVzZXIpIHtcclxuLy8gICAgICAgICBjb25zdCB1c2VyUmVmID0gZG9jKGRiLCAndXNlcnMnLCB1c2VyLnVpZCk7XHJcbi8vICAgICAgICAgY29uc3QgdXNlclNuYXAgPSBhd2FpdCBnZXREb2ModXNlclJlZik7XHJcbi8vICAgICAgICAgY29uc3QgZGF0YSA9IHVzZXJTbmFwLmRhdGEoKTtcclxuLy8gICAgICAgICBjb25zdCB1c2VyUm9sZSA9IGRhdGE/LnJvbGUgfHwgJ3VzZXInO1xyXG4vLyAgICAgICAgIHNldFJvbGUodXNlclJvbGUpO1xyXG5cclxuLy8gICAgICAgICBpZiAodXNlclJvbGUgPT09ICdhZG1pbicgfHwgdXNlclJvbGUgPT09ICdzdWJhZG1pbicpIHtcclxuLy8gICAgICAgICAgIGF3YWl0IGZldGNoVXNlcldhbGxldERhdGEodXNlci51aWQsIHVzZXJSb2xlKTtcclxuLy8gICAgICAgICB9IGVsc2Uge1xyXG4vLyAgICAgICAgICAgc2V0VXNlcnMoW10pO1xyXG4vLyAgICAgICAgICAgc2V0TG9hZGluZyhmYWxzZSk7XHJcbi8vICAgICAgICAgfVxyXG4vLyAgICAgICB9IGVsc2Uge1xyXG4vLyAgICAgICAgIHNldExvYWRpbmcoZmFsc2UpO1xyXG4vLyAgICAgICB9XHJcbi8vICAgICB9KTtcclxuXHJcbi8vICAgICByZXR1cm4gKCkgPT4gdW5zdWJzY3JpYmUoKTtcclxuLy8gICB9LCBbXSk7XHJcblxyXG4vLyAgIGNvbnN0IGZldGNoVXNlcldhbGxldERhdGEgPSBhc3luYyAodWlkLCByb2xlKSA9PiB7XHJcbi8vICAgICBzZXRMb2FkaW5nKHRydWUpO1xyXG5cclxuLy8gICAgIHRyeSB7XHJcbi8vICAgICAgIGNvbnN0IHdhbGxldENvbCA9IGNvbGxlY3Rpb24oZGIsICdzdWJ3YWxsZXRzJyk7XHJcbi8vICAgICAgIGxldCB3YWxsZXRRdWVyeTtcclxuXHJcbi8vICAgICAgIGlmIChyb2xlID09PSAnYWRtaW4nKSB7XHJcbi8vICAgICAgICAgd2FsbGV0UXVlcnkgPSB3YWxsZXRDb2w7IC8vIGdldCBhbGxcclxuLy8gICAgICAgfSBlbHNlIHtcclxuLy8gICAgICAgICB3YWxsZXRRdWVyeSA9IHF1ZXJ5KHdhbGxldENvbCwgd2hlcmUoJ3N1YkFkbWluSWQnLCAnPT0nLCB1aWQpKTsgLy8gb25seSB0aGVpciB1c2Vyc1xyXG4vLyAgICAgICB9XHJcblxyXG4vLyAgICAgICBjb25zdCB3YWxsZXRzU25hcCA9IGF3YWl0IGdldERvY3Mod2FsbGV0UXVlcnkpO1xyXG5cclxuLy8gICAgICAgY29uc3Qgd2FsbGV0cyA9IHdhbGxldHNTbmFwLmRvY3MubWFwKChkb2MpID0+ICh7XHJcbi8vICAgICAgICAgdWlkOiBkb2MuaWQsXHJcbi8vICAgICAgICAgYmFsYW5jZTogZG9jLmRhdGEoKS5iYWxhbmNlIHx8IDAsXHJcbi8vICAgICAgICAgZW1haWw6IGRvYy5kYXRhKCkuZW1haWwgfHwgJycsXHJcbi8vICAgICAgIH0pKTtcclxuXHJcbi8vICAgICAgIGNvbnN0IG9uZVdlZWtBZ28gPSBUaW1lc3RhbXAuZnJvbURhdGUobmV3IERhdGUoRGF0ZS5ub3coKSAtIDcgKiAyNCAqIDYwICogNjAgKiAxMDAwKSk7XHJcblxyXG4vLyAgICAgICBjb25zdCBkZXBvc2l0U25hcCA9IGF3YWl0IGdldERvY3MoXHJcbi8vICAgICAgICAgcXVlcnkoXHJcbi8vICAgICAgICAgICBjb2xsZWN0aW9uKGRiLCAnZGVwb3NpdFJlcXVlc3RzJyksXHJcbi8vICAgICAgICAgICB3aGVyZSgnc3RhdHVzJywgJz09JywgJ2FwcHJvdmVkJyksXHJcbi8vICAgICAgICAgICB3aGVyZSgnY3JlYXRlZEF0JywgJz49Jywgb25lV2Vla0FnbylcclxuLy8gICAgICAgICApXHJcbi8vICAgICAgICk7XHJcblxyXG4vLyAgICAgICBjb25zdCB3aXRoZHJhd1NuYXAgPSBhd2FpdCBnZXREb2NzKFxyXG4vLyAgICAgICAgIHF1ZXJ5KFxyXG4vLyAgICAgICAgICAgY29sbGVjdGlvbihkYiwgJ3dpdGhkcmF3UmVxdWVzdHMnKSxcclxuLy8gICAgICAgICAgIHdoZXJlKCdzdGF0dXMnLCAnPT0nLCAnYXBwcm92ZWQnKSxcclxuLy8gICAgICAgICAgIHdoZXJlKCdjcmVhdGVkQXQnLCAnPj0nLCBvbmVXZWVrQWdvKVxyXG4vLyAgICAgICAgIClcclxuLy8gICAgICAgKTtcclxuXHJcbi8vICAgICAgIGNvbnN0IGRlcG9zaXRNYXAgPSB7fTtcclxuLy8gICAgICAgZGVwb3NpdFNuYXAuZm9yRWFjaCgoZG9jKSA9PiB7XHJcbi8vICAgICAgICAgY29uc3QgZGF0YSA9IGRvYy5kYXRhKCk7XHJcbi8vICAgICAgICAgaWYgKCFkZXBvc2l0TWFwW2RhdGEudWlkXSkgZGVwb3NpdE1hcFtkYXRhLnVpZF0gPSAwO1xyXG4vLyAgICAgICAgIGRlcG9zaXRNYXBbZGF0YS51aWRdICs9IGRhdGEuYW1vdW50IHx8IDA7XHJcbi8vICAgICAgIH0pO1xyXG5cclxuLy8gICAgICAgY29uc3Qgd2l0aGRyYXdNYXAgPSB7fTtcclxuLy8gICAgICAgd2l0aGRyYXdTbmFwLmZvckVhY2goKGRvYykgPT4ge1xyXG4vLyAgICAgICAgIGNvbnN0IGRhdGEgPSBkb2MuZGF0YSgpO1xyXG4vLyAgICAgICAgIGlmICghd2l0aGRyYXdNYXBbZGF0YS51aWRdKSB3aXRoZHJhd01hcFtkYXRhLnVpZF0gPSAwO1xyXG4vLyAgICAgICAgIHdpdGhkcmF3TWFwW2RhdGEudWlkXSArPSBkYXRhLmFtb3VudCB8fCAwO1xyXG4vLyAgICAgICB9KTtcclxuXHJcbi8vICAgICAgIGNvbnN0IGZpbmFsVXNlcnMgPSB3YWxsZXRzLm1hcCgodXNlcikgPT4gKHtcclxuLy8gICAgICAgICAuLi51c2VyLFxyXG4vLyAgICAgICAgIHRvdGFsRGVwb3NpdGVkOiBkZXBvc2l0TWFwW3VzZXIudWlkXSB8fCAwLFxyXG4vLyAgICAgICAgIHRvdGFsV2l0aGRyYXduOiB3aXRoZHJhd01hcFt1c2VyLnVpZF0gfHwgMCxcclxuLy8gICAgICAgfSkpO1xyXG5cclxuLy8gICAgICAgc2V0VXNlcnMoZmluYWxVc2Vycyk7XHJcbi8vICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4vLyAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBmZXRjaGluZyB1c2VyIHdhbGxldCBkYXRhOicsIGVycm9yKTtcclxuLy8gICAgICAgYWxlcnQoJ0Vycm9yIGxvYWRpbmcgd2FsbGV0IGRhdGEuJyk7XHJcbi8vICAgICB9XHJcblxyXG4vLyAgICAgc2V0TG9hZGluZyhmYWxzZSk7XHJcbi8vICAgfTtcclxuXHJcbi8vICAgY29uc3QgZXhwb3J0VG9DU1YgPSAoKSA9PiB7XHJcbi8vICAgICBjb25zdCBoZWFkZXJzID0gWydFbWFpbCcsICdCYWxhbmNlJywgJ0RlcG9zaXRlZCAoNyBkYXlzKScsICdXaXRoZHJhd24gKDcgZGF5cyknXTtcclxuLy8gICAgIGNvbnN0IHJvd3MgPSB1c2Vycy5tYXAoKHUpID0+IFt1LmVtYWlsLCB1LmJhbGFuY2UsIHUudG90YWxEZXBvc2l0ZWQsIHUudG90YWxXaXRoZHJhd25dKTtcclxuLy8gICAgIGNvbnN0IGNzdkNvbnRlbnQgPSBbaGVhZGVycywgLi4ucm93c10ubWFwKChyKSA9PiByLmpvaW4oJywnKSkuam9pbignXFxuJyk7XHJcblxyXG4vLyAgICAgY29uc3QgYmxvYiA9IG5ldyBCbG9iKFtjc3ZDb250ZW50XSwgeyB0eXBlOiAndGV4dC9jc3Y7Y2hhcnNldD11dGYtODsnIH0pO1xyXG4vLyAgICAgY29uc3QgdXJsID0gVVJMLmNyZWF0ZU9iamVjdFVSTChibG9iKTtcclxuLy8gICAgIGNvbnN0IGxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7XHJcbi8vICAgICBsaW5rLnNldEF0dHJpYnV0ZSgnaHJlZicsIHVybCk7XHJcbi8vICAgICBsaW5rLnNldEF0dHJpYnV0ZSgnZG93bmxvYWQnLCAndXNlcl93YWxsZXRzLmNzdicpO1xyXG4vLyAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChsaW5rKTtcclxuLy8gICAgIGxpbmsuY2xpY2soKTtcclxuLy8gICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQobGluayk7XHJcbi8vICAgfTtcclxuXHJcbi8vICAgY29uc3QgZmlsdGVyZWRVc2VycyA9IHVzZXJzLmZpbHRlcigodSkgPT5cclxuLy8gICAgIHUuZW1haWwudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhzZWFyY2gudG9Mb3dlckNhc2UoKSlcclxuLy8gICApO1xyXG5cclxuLy8gICByZXR1cm4gKFxyXG4vLyAgICAgPExheW91dD5cclxuLy8gICAgICAgPGRpdiBjbGFzc05hbWU9XCJtaW4taC1zY3JlZW4gYmctZ3JheS05MDAgdGV4dC13aGl0ZSBwLThcIj5cclxuLy8gICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1heC13LTV4bCBteC1hdXRvXCI+XHJcbi8vICAgICAgICAgICA8aDEgY2xhc3NOYW1lPVwidGV4dC0zeGwgZm9udC1ib2xkIG1iLTZcIj5cclxuLy8gICAgICAgICAgICAge3JvbGUgPT09ICdhZG1pbidcclxuLy8gICAgICAgICAgICAgICA/ICdBZG1pbjogQWxsIFN1YmFkbWluICYgVXNlciBXYWxsZXRzJ1xyXG4vLyAgICAgICAgICAgICAgIDogJ1N1YmFkbWluOiBZb3VyIFVzZXIgV2FsbGV0cyd9XHJcbi8vICAgICAgICAgICA8L2gxPlxyXG5cclxuLy8gICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTQgbWItNlwiPlxyXG4vLyAgICAgICAgICAgICA8aW5wdXRcclxuLy8gICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiXHJcbi8vICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJTZWFyY2ggYnkgZW1haWwuLi5cIlxyXG4vLyAgICAgICAgICAgICAgIHZhbHVlPXtzZWFyY2h9XHJcbi8vICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiBzZXRTZWFyY2goZS50YXJnZXQudmFsdWUpfVxyXG4vLyAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInB4LTQgcHktMiByb3VuZGVkIGJnLWdyYXktODAwIGJvcmRlciBib3JkZXItZ3JheS02MDAgZm9jdXM6b3V0bGluZS1ub25lXCJcclxuLy8gICAgICAgICAgICAgLz5cclxuLy8gICAgICAgICAgICAgPGJ1dHRvblxyXG4vLyAgICAgICAgICAgICAgIG9uQ2xpY2s9e2V4cG9ydFRvQ1NWfVxyXG4vLyAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInB4LTQgcHktMiBiZy15ZWxsb3ctNTAwIGhvdmVyOmJnLXllbGxvdy02MDAgdGV4dC1ibGFjayByb3VuZGVkIGZvbnQtc2VtaWJvbGRcIlxyXG4vLyAgICAgICAgICAgICA+XHJcbi8vICAgICAgICAgICAgICAgRXhwb3J0IENTViBka1xyXG4vLyAgICAgICAgICAgICA8L2J1dHRvbj5cclxuLy8gICAgICAgICAgIDwvZGl2PlxyXG5cclxuLy8gICAgICAgICAgIHtsb2FkaW5nID8gKFxyXG4vLyAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0LXllbGxvdy0zMDBcIj5Mb2FkaW5nLi4uPC9wPlxyXG4vLyAgICAgICAgICAgKSA6IGZpbHRlcmVkVXNlcnMubGVuZ3RoID09PSAwID8gKFxyXG4vLyAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0LWdyYXktNDAwXCI+Tm8gdXNlcnMgZm91bmQuPC9wPlxyXG4vLyAgICAgICAgICAgKSA6IChcclxuLy8gICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJvdmVyZmxvdy14LWF1dG8gYmctZ3JheS04MDAgcm91bmRlZC1sZyBzaGFkb3cteGxcIj5cclxuLy8gICAgICAgICAgICAgICA8dGFibGUgY2xhc3NOYW1lPVwidy1mdWxsIHRleHQtbGVmdCB0YWJsZS1hdXRvXCI+XHJcbi8vICAgICAgICAgICAgICAgICA8dGhlYWQgY2xhc3NOYW1lPVwiYmctZ3JheS03MDAgdGV4dC1zbSB1cHBlcmNhc2UgdGV4dC1ncmF5LTMwMFwiPlxyXG4vLyAgICAgICAgICAgICAgICAgICA8dHI+XHJcbi8vICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cInAtM1wiPkVtYWlsPC90aD5cclxuLy8gICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3NOYW1lPVwicC0zXCI+QmFsYW5jZTwvdGg+XHJcbi8vICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cInAtM1wiPkRlcG9zaXRlZCAoN2QpPC90aD5cclxuLy8gICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3NOYW1lPVwicC0zXCI+V2l0aGRyYXduICg3ZCk8L3RoPlxyXG4vLyAgICAgICAgICAgICAgICAgICA8L3RyPlxyXG4vLyAgICAgICAgICAgICAgICAgPC90aGVhZD5cclxuLy8gICAgICAgICAgICAgICAgIDx0Ym9keT5cclxuLy8gICAgICAgICAgICAgICAgICAge2ZpbHRlcmVkVXNlcnMubWFwKCh1c2VyKSA9PiAoXHJcbi8vICAgICAgICAgICAgICAgICAgICAgPHRyIGtleT17dXNlci51aWR9IGNsYXNzTmFtZT1cImJvcmRlci10IGJvcmRlci1ncmF5LTcwMFwiPlxyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cInAtM1wiPnt1c2VyLmVtYWlsIHx8ICdOL0EnfTwvdGQ+XHJcbi8vICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3NOYW1lPVwicC0zXCI+4oK5e3VzZXIuYmFsYW5jZX08L3RkPlxyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cInAtM1wiPuKCuXt1c2VyLnRvdGFsRGVwb3NpdGVkfTwvdGQ+XHJcbi8vICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3NOYW1lPVwicC0zXCI+4oK5e3VzZXIudG90YWxXaXRoZHJhd259PC90ZD5cclxuLy8gICAgICAgICAgICAgICAgICAgICA8L3RyPlxyXG4vLyAgICAgICAgICAgICAgICAgICApKX1cclxuLy8gICAgICAgICAgICAgICAgIDwvdGJvZHk+XHJcbi8vICAgICAgICAgICAgICAgPC90YWJsZT5cclxuLy8gICAgICAgICAgICAgPC9kaXY+XHJcbi8vICAgICAgICAgICApfVxyXG4vLyAgICAgICAgIDwvZGl2PlxyXG4vLyAgICAgICA8L2Rpdj5cclxuLy8gICAgIDwvTGF5b3V0PlxyXG4vLyAgICk7XHJcbi8vIH1cclxuXHJcblxyXG4ndXNlIGNsaWVudCc7XHJcblxyXG5pbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHtcclxuICBnZXRGaXJlc3RvcmUsXHJcbiAgY29sbGVjdGlvbixcclxuICBnZXREb2NzLFxyXG4gIHF1ZXJ5LFxyXG4gIHdoZXJlLFxyXG4gIFRpbWVzdGFtcCxcclxuICBkb2MsXHJcbiAgZ2V0RG9jLFxyXG59IGZyb20gJ2ZpcmViYXNlL2ZpcmVzdG9yZSc7XHJcbmltcG9ydCB7IGdldEF1dGgsIG9uQXV0aFN0YXRlQ2hhbmdlZCB9IGZyb20gJ2ZpcmViYXNlL2F1dGgnO1xyXG5pbXBvcnQgZmlyZWJhc2VBcHAgZnJvbSAnQC9maXJlYmFzZSc7XHJcbmltcG9ydCBMYXlvdXQgZnJvbSAnQC9hcHAvQ29tcG9uZW50cy9MYXlvdXQnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQWRtaW5Vc2VyV2FsbGV0c1BhZ2UoKSB7XHJcbiAgY29uc3QgYXV0aCA9IGdldEF1dGgoZmlyZWJhc2VBcHApO1xyXG4gIGNvbnN0IGRiID0gZ2V0RmlyZXN0b3JlKGZpcmViYXNlQXBwKTtcclxuXHJcbiAgY29uc3QgW3VzZXJzLCBzZXRVc2Vyc10gPSB1c2VTdGF0ZShbXSk7XHJcbiAgY29uc3QgW2xvYWRpbmcsIHNldExvYWRpbmddID0gdXNlU3RhdGUodHJ1ZSk7XHJcbiAgY29uc3QgW3NlYXJjaCwgc2V0U2VhcmNoXSA9IHVzZVN0YXRlKCcnKTtcclxuICBjb25zdCBbY3VycmVudFVzZXIsIHNldEN1cnJlbnRVc2VyXSA9IHVzZVN0YXRlKG51bGwpO1xyXG4gIGNvbnN0IFtyb2xlLCBzZXRSb2xlXSA9IHVzZVN0YXRlKG51bGwpO1xyXG5cclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgY29uc3QgdW5zdWJzY3JpYmUgPSBvbkF1dGhTdGF0ZUNoYW5nZWQoYXV0aCwgYXN5bmMgKHVzZXIpID0+IHtcclxuICAgICAgc2V0Q3VycmVudFVzZXIodXNlcik7XHJcbiAgICAgIGlmICh1c2VyKSB7XHJcbiAgICAgICAgY29uc3QgdXNlclJlZiA9IGRvYyhkYiwgJ3VzZXJzJywgdXNlci51aWQpO1xyXG4gICAgICAgIGNvbnN0IHVzZXJTbmFwID0gYXdhaXQgZ2V0RG9jKHVzZXJSZWYpO1xyXG4gICAgICAgIGNvbnN0IGRhdGEgPSB1c2VyU25hcC5kYXRhKCk7XHJcbiAgICAgICAgY29uc3QgdXNlclJvbGUgPSBkYXRhPy5yb2xlIHx8ICd1c2VyJztcclxuICAgICAgICBzZXRSb2xlKHVzZXJSb2xlKTtcclxuXHJcbiAgICAgICAgaWYgKHVzZXJSb2xlID09PSAnYWRtaW4nIHx8IHVzZXJSb2xlID09PSAnc3ViYWRtaW4nKSB7XHJcbiAgICAgICAgICBhd2FpdCBmZXRjaFVzZXJXYWxsZXREYXRhKHVzZXIudWlkLCB1c2VyUm9sZSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHNldFVzZXJzKFtdKTtcclxuICAgICAgICAgIHNldExvYWRpbmcoZmFsc2UpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBzZXRMb2FkaW5nKGZhbHNlKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgcmV0dXJuICgpID0+IHVuc3Vic2NyaWJlKCk7XHJcbiAgfSwgW10pO1xyXG5cclxuLy8gICBjb25zdCBmZXRjaFVzZXJXYWxsZXREYXRhID0gYXN5bmMgKHVpZCwgcm9sZSkgPT4ge1xyXG4vLyAgICAgc2V0TG9hZGluZyh0cnVlKTtcclxuXHJcbi8vICAgICB0cnkge1xyXG4vLyAgICAgICBjb25zdCB3YWxsZXRDb2wgPSBjb2xsZWN0aW9uKGRiLCAnc3Vid2FsbGV0cycpO1xyXG4vLyAgICAgICBsZXQgd2FsbGV0UXVlcnk7XHJcblxyXG4vLyAgICAgICBpZiAocm9sZSA9PT0gJ2FkbWluJykge1xyXG4vLyAgICAgICAgIHdhbGxldFF1ZXJ5ID0gd2FsbGV0Q29sOyAvLyBhbGwgd2FsbGV0c1xyXG4vLyAgICAgICB9IGVsc2Uge1xyXG4vLyAgICAgICAgIHdhbGxldFF1ZXJ5ID0gcXVlcnkod2FsbGV0Q29sLCB3aGVyZSgnc3ViQWRtaW5JZCcsICc9PScsIHVpZCkpOyAvLyBzdWJhZG1pbi1zcGVjaWZpY1xyXG4vLyAgICAgICB9XHJcblxyXG4vLyAgICAgICBjb25zdCB3YWxsZXRzU25hcCA9IGF3YWl0IGdldERvY3Mod2FsbGV0UXVlcnkpO1xyXG5cclxuLy8gICAgICAgY29uc3Qgd2FsbGV0cyA9IHdhbGxldHNTbmFwLmRvY3MubWFwKChkb2MpID0+ICh7XHJcbi8vICAgICAgICAgdWlkOiBkb2MuaWQsXHJcbi8vICAgICAgICAgYmFsYW5jZTogZG9jLmRhdGEoKS5iYWxhbmNlIHx8IDAsXHJcbi8vICAgICAgICAgZW1haWw6IGRvYy5kYXRhKCkuZW1haWwgfHwgJycsXHJcbi8vICAgICAgIH0pKTtcclxuXHJcbi8vICAgICAgIGNvbnN0IG9uZVdlZWtBZ28gPSBUaW1lc3RhbXAuZnJvbURhdGUobmV3IERhdGUoRGF0ZS5ub3coKSAtIDcgKiAyNCAqIDYwICogNjAgKiAxMDAwKSk7XHJcblxyXG4vLyAgICAgICAvLyBEZXBvc2l0IFJlcXVlc3RzIChmaWx0ZXJlZCBmb3Igc3ViYWRtaW4pXHJcbi8vICAgICAgIGNvbnN0IGRlcG9zaXRTbmFwID0gYXdhaXQgZ2V0RG9jcyhcclxuLy8gICAgICAgICAvLyBxdWVyeShcclxuLy8gICAgICAgICAvLyAgIGNvbGxlY3Rpb24oZGIsICdzdWJkZXBvc2l0UmVxdWVzdHMnKSxcclxuLy8gICAgICAgICAvLyAgIHdoZXJlKCdzdGF0dXMnLCAnPT0nLCAnYXBwcm92ZWQnKSxcclxuLy8gICAgICAgICAvLyAgIHdoZXJlKCdjcmVhdGVkQXQnLCAnPj0nLCBvbmVXZWVrQWdvKSxcclxuLy8gICAgICAgICAvLyAgIC4uLihyb2xlID09PSAnc3ViYWRtaW4nID8gW3doZXJlKCdmcm9tVXNlclN1YkFkbWluSWQnLCAnPT0nLCB1aWQpXSA6IFtdKVxyXG4vLyAgICAgICAgIC8vIClcclxuLy8gICAgICAgICBxdWVyeShcclxuLy8gICAgICAgICAgIGNvbGxlY3Rpb24oZGIsICdzdWJkZXBvc2l0UmVxdWVzdHMnKSxcclxuLy8gICAgICAgICAgIHdoZXJlKCdzdGF0dXMnLCAnPT0nLCAnYXBwcm92ZWQnKSxcclxuLy8gICAgICAgICAgIHdoZXJlKCdjcmVhdGVkQXQnLCAnPj0nLCBvbmVXZWVrQWdvKSxcclxuLy8gICAgICAgICAgIHdoZXJlKCdmcm9tVXNlclN1YkFkbWluSWQnLCAnPT0nLCB1aWQpXHJcbi8vICAgICAgICAgKVxyXG4vLyAgICAgICApO1xyXG5cclxuLy8gICAgICAgLy8gV2l0aGRyYXcgUmVxdWVzdHMgKGZpbHRlcmVkIGZvciBzdWJhZG1pbilcclxuLy8gLy8gICAgICAgY29uc3Qgd2l0aGRyYXdTbmFwID0gYXdhaXQgZ2V0RG9jcyhcclxuLy8gLy8gICAgICAgICAvLyBxdWVyeShcclxuLy8gLy8gICAgICAgICAvLyAgIGNvbGxlY3Rpb24oZGIsICdzdWJ3aXRoZHJhd1JlcXVlc3RzJyksXHJcbi8vIC8vICAgICAgICAgLy8gICB3aGVyZSgnc3RhdHVzJywgJz09JywgJ2FwcHJvdmVkJyksXHJcbi8vIC8vICAgICAgICAgLy8gICB3aGVyZSgnY3JlYXRlZEF0JywgJz49Jywgb25lV2Vla0FnbyksXHJcbi8vIC8vICAgICAgICAgLy8gICAuLi4ocm9sZSA9PT0gJ3N1YmFkbWluJyA/IFt3aGVyZSgnZnJvbVVzZXJTdWJBZG1pbklkJywgJz09JywgdWlkKV0gOiBbXSlcclxuLy8gLy8gICAgICAgICAvLyApXHJcbi8vIC8vICAgICAgICAgcXVlcnkoXHJcbi8vIC8vICAgY29sbGVjdGlvbihkYiwgJ3N1YmRlcG9zaXRSZXF1ZXN0cycpLFxyXG4vLyAvLyAgIHdoZXJlKCdzdGF0dXMnLCAnPT0nLCAnYXBwcm92ZWQnKSxcclxuLy8gLy8gICB3aGVyZSgnY3JlYXRlZEF0JywgJz49Jywgb25lV2Vla0FnbyksXHJcbi8vIC8vICAgd2hlcmUoJ2Zyb21Vc2VyU3ViQWRtaW5JZCcsICc9PScsIHVpZClcclxuLy8gLy8gKVxyXG5cclxuLy8gLy8gICAgICAgKTtcclxuLy8gY29uc3Qgd2l0aGRyYXdTbmFwID0gYXdhaXQgZ2V0RG9jcyhcclxuLy8gICBxdWVyeShcclxuLy8gICAgIGNvbGxlY3Rpb24oZGIsICdzdWJ3aXRoZHJhd1JlcXVlc3RzJyksXHJcbi8vICAgICB3aGVyZSgnc3RhdHVzJywgJz09JywgJ2FwcHJvdmVkJyksXHJcbi8vICAgICAuLi4ocm9sZSA9PT0gJ3N1YmFkbWluJyA/IFt3aGVyZSgnZnJvbVVzZXJTdWJBZG1pbklkJywgJz09JywgdWlkKV0gOiBbXSlcclxuLy8gICApXHJcbi8vICk7XHJcblxyXG4vLyAgICAgICAvLyBBZ2dyZWdhdGUgZGVwb3NpdHNcclxuLy8gICAgICAgY29uc3QgZGVwb3NpdE1hcCA9IHt9O1xyXG4vLyAgICAgICBkZXBvc2l0U25hcC5mb3JFYWNoKChkb2MpID0+IHtcclxuLy8gICAgICAgICBjb25zdCBkYXRhID0gZG9jLmRhdGEoKTtcclxuLy8gICAgICAgICBpZiAoIWRlcG9zaXRNYXBbZGF0YS51aWRdKSBkZXBvc2l0TWFwW2RhdGEudWlkXSA9IDA7XHJcbi8vICAgICAgICAgZGVwb3NpdE1hcFtkYXRhLnVpZF0gKz0gZGF0YS5hbW91bnQgfHwgMDtcclxuLy8gICAgICAgfSk7XHJcblxyXG4vLyAgICAgICAvLyBBZ2dyZWdhdGUgd2l0aGRyYXdhbHNcclxuLy8gICAgICAgLy8gY29uc3Qgd2l0aGRyYXdNYXAgPSB7fTtcclxuLy8gICAgICAgLy8gd2l0aGRyYXdTbmFwLmZvckVhY2goKGRvYykgPT4ge1xyXG4vLyAgICAgICAvLyAgIGNvbnN0IGRhdGEgPSBkb2MuZGF0YSgpO1xyXG4vLyAgICAgICAvLyAgIGlmICghd2l0aGRyYXdNYXBbZGF0YS51aWRdKSB3aXRoZHJhd01hcFtkYXRhLnVpZF0gPSAwO1xyXG4vLyAgICAgICAvLyAgIHdpdGhkcmF3TWFwW2RhdGEudWlkXSArPSBkYXRhLmFtb3VudCB8fCAwO1xyXG4vLyAgICAgICAvLyB9KTtcclxuLy8gY29uc3Qgd2l0aGRyYXdNYXAgPSB7fTtcclxuLy8gd2l0aGRyYXdTbmFwLmZvckVhY2goKGRvYykgPT4ge1xyXG4vLyAgIGNvbnN0IGRhdGEgPSBkb2MuZGF0YSgpO1xyXG4vLyAgIGlmICghd2l0aGRyYXdNYXBbZGF0YS51aWRdKSB3aXRoZHJhd01hcFtkYXRhLnVpZF0gPSBbXTtcclxuLy8gICB3aXRoZHJhd01hcFtkYXRhLnVpZF0ucHVzaCh7XHJcbi8vICAgICBhbW91bnQ6IGRhdGEuYW1vdW50LFxyXG4vLyAgICAgYXBwcm92ZWRBdDogZGF0YS5hcHByb3ZlZEF0Py50b0RhdGUoKSxcclxuLy8gICB9KTtcclxuLy8gfSk7XHJcblxyXG4vLyAgICAgICAvLyBGaW5hbCBtZXJnZWQgdXNlciBkYXRhXHJcbi8vICAgICAgIGNvbnN0IGZpbmFsVXNlcnMgPSB3YWxsZXRzLm1hcCgodXNlcikgPT4gKHtcclxuLy8gICAgICAgICAuLi51c2VyLFxyXG4vLyAgICAgICAgIHRvdGFsRGVwb3NpdGVkOiBkZXBvc2l0TWFwW3VzZXIudWlkXSB8fCAwLFxyXG4vLyAgICAgICAgIC8vIHRvdGFsV2l0aGRyYXduOiB3aXRoZHJhd01hcFt1c2VyLnVpZF0gfHwgMCxcclxuLy8gICAgICAgICB3aXRoZHJhd2Fsczogd2l0aGRyYXdNYXBbdXNlci51aWRdIHx8IFtdLFxyXG5cclxuLy8gICAgICAgfSkpO1xyXG5cclxuLy8gICAgICAgc2V0VXNlcnMoZmluYWxVc2Vycyk7XHJcbi8vICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4vLyAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBmZXRjaGluZyB3YWxsZXQgZGF0YTonLCBlcnJvcik7XHJcbi8vICAgICAgIGFsZXJ0KCdFcnJvciBsb2FkaW5nIHdhbGxldCBkYXRhLicpO1xyXG4vLyAgICAgfVxyXG5cclxuLy8gICAgIHNldExvYWRpbmcoZmFsc2UpO1xyXG4vLyAgIH07XHJcblxyXG4gIC8vIGNvbnN0IGV4cG9ydFRvQ1NWID0gKCkgPT4ge1xyXG4gIC8vICAgY29uc3QgaGVhZGVycyA9IFsnRW1haWwnLCAnQmFsYW5jZScsICdEZXBvc2l0ZWQgKDcgZGF5cyknLCAnV2l0aGRyYXduICg3IGRheXMpJ107XHJcbiAgLy8gICBjb25zdCByb3dzID0gdXNlcnMubWFwKCh1KSA9PiBbdS5lbWFpbCwgdS5iYWxhbmNlLCB1LnRvdGFsRGVwb3NpdGVkLCB1LnRvdGFsV2l0aGRyYXduXSk7XHJcbiAgLy8gICBjb25zdCBjc3ZDb250ZW50ID0gW2hlYWRlcnMsIC4uLnJvd3NdLm1hcCgocikgPT4gci5qb2luKCcsJykpLmpvaW4oJ1xcbicpO1xyXG5cclxuICAvLyAgIGNvbnN0IGJsb2IgPSBuZXcgQmxvYihbY3N2Q29udGVudF0sIHsgdHlwZTogJ3RleHQvY3N2O2NoYXJzZXQ9dXRmLTg7JyB9KTtcclxuICAvLyAgIGNvbnN0IHVybCA9IFVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYik7XHJcbiAgLy8gICBjb25zdCBsaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xyXG4gIC8vICAgbGluay5zZXRBdHRyaWJ1dGUoJ2hyZWYnLCB1cmwpO1xyXG4gIC8vICAgbGluay5zZXRBdHRyaWJ1dGUoJ2Rvd25sb2FkJywgJ3VzZXJfd2FsbGV0cy5jc3YnKTtcclxuICAvLyAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQobGluayk7XHJcbiAgLy8gICBsaW5rLmNsaWNrKCk7XHJcbiAgLy8gICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGxpbmspO1xyXG4gIC8vIH07XHJcbmNvbnN0IGV4cG9ydFRvQ1NWID0gKCkgPT4ge1xyXG4gIGNvbnN0IGhlYWRlcnMgPSBbJ0VtYWlsJywgJ0JhbGFuY2UnLCAnRGVwb3NpdGVkICg3IGRheXMpJywgJ1dpdGhkcmF3YWxzIChhbW91bnQgKyBkYXRlKSddO1xyXG5cclxuICBjb25zdCByb3dzID0gdXNlcnMubWFwKCh1KSA9PiB7XHJcbiAgICBjb25zdCB3aXRoZHJhd2FsRGV0YWlscyA9ICh1LndpdGhkcmF3YWxzIHx8IFtdKVxyXG4gICAgICAubWFwKFxyXG4gICAgICAgICh3KSA9PlxyXG4gICAgICAgICAgYOKCuSR7dy5hbW91bnR9IG9uICR7dy5hcHByb3ZlZEF0Py50b0xvY2FsZURhdGVTdHJpbmcoKX0gYXQgJHt3LmFwcHJvdmVkQXQ/LnRvTG9jYWxlVGltZVN0cmluZyhbXSwge1xyXG4gICAgICAgICAgICBob3VyOiAnMi1kaWdpdCcsXHJcbiAgICAgICAgICAgIG1pbnV0ZTogJzItZGlnaXQnLFxyXG4gICAgICAgICAgfSl9YFxyXG4gICAgICApXHJcbiAgICAgIC5qb2luKCcgfCAnKTsgLy8gVXNlIHBpcGUgb3Igc2VtaWNvbG9uIHRvIHNlcGFyYXRlIG11bHRpcGxlIHdpdGhkcmF3YWxzIGluIG9uZSBjZWxsXHJcblxyXG4gICAgcmV0dXJuIFt1LmVtYWlsLCB1LmJhbGFuY2UsIHUudG90YWxEZXBvc2l0ZWQsIHdpdGhkcmF3YWxEZXRhaWxzXTtcclxuICB9KTtcclxuXHJcbiAgY29uc3QgY3N2Q29udGVudCA9IFtoZWFkZXJzLCAuLi5yb3dzXS5tYXAoKHIpID0+IHIuam9pbignLCcpKS5qb2luKCdcXG4nKTtcclxuXHJcbiAgY29uc3QgYmxvYiA9IG5ldyBCbG9iKFtjc3ZDb250ZW50XSwgeyB0eXBlOiAndGV4dC9jc3Y7Y2hhcnNldD11dGYtODsnIH0pO1xyXG4gIGNvbnN0IHVybCA9IFVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYik7XHJcbiAgY29uc3QgbGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTtcclxuICBsaW5rLnNldEF0dHJpYnV0ZSgnaHJlZicsIHVybCk7XHJcbiAgbGluay5zZXRBdHRyaWJ1dGUoJ2Rvd25sb2FkJywgJ3VzZXJfd2FsbGV0cy5jc3YnKTtcclxuICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGxpbmspO1xyXG4gIGxpbmsuY2xpY2soKTtcclxuICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGxpbmspO1xyXG59O1xyXG5cclxuICBjb25zdCBmaWx0ZXJlZFVzZXJzID0gdXNlcnMuZmlsdGVyKCh1KSA9PlxyXG4gICAgdS5lbWFpbC50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKHNlYXJjaC50b0xvd2VyQ2FzZSgpKVxyXG4gICk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICAvLyA8TGF5b3V0PlxyXG4gICAgLy8gICA8ZGl2IGNsYXNzTmFtZT1cIm1pbi1oLXNjcmVlbiBiZy1ncmF5LTkwMCB0ZXh0LXdoaXRlIHAtOFwiPlxyXG4gICAgLy8gICAgIDxkaXYgY2xhc3NOYW1lPVwibWF4LXctNXhsIG14LWF1dG9cIj5cclxuICAgIC8vICAgICAgIDxoMSBjbGFzc05hbWU9XCJ0ZXh0LTN4bCBmb250LWJvbGQgbWItNlwiPlxyXG4gICAgLy8gICAgICAgICB7cm9sZSA9PT0gJ2FkbWluJ1xyXG4gICAgLy8gICAgICAgICAgID8gJ0FkbWluOiBBbGwgU3ViYWRtaW4gJiBVc2VyIFdhbGxldHMnXHJcbiAgICAvLyAgICAgICAgICAgOiAnU3ViYWRtaW46IFlvdXIgVXNlciBXYWxsZXRzJ31cclxuICAgIC8vICAgICAgIDwvaDE+XHJcblxyXG4gICAgLy8gICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlciBnYXAtNCBtYi02XCI+XHJcbiAgICAvLyAgICAgICAgIDxpbnB1dFxyXG4gICAgLy8gICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcclxuICAgIC8vICAgICAgICAgICBwbGFjZWhvbGRlcj1cIlNlYXJjaCBieSBlbWFpbC4uLlwiXHJcbiAgICAvLyAgICAgICAgICAgdmFsdWU9e3NlYXJjaH1cclxuICAgIC8vICAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHNldFNlYXJjaChlLnRhcmdldC52YWx1ZSl9XHJcbiAgICAvLyAgICAgICAgICAgY2xhc3NOYW1lPVwicHgtNCBweS0yIHJvdW5kZWQgYmctZ3JheS04MDAgYm9yZGVyIGJvcmRlci1ncmF5LTYwMCBmb2N1czpvdXRsaW5lLW5vbmVcIlxyXG4gICAgLy8gICAgICAgICAvPlxyXG4gICAgLy8gICAgICAgICA8YnV0dG9uXHJcbiAgICAvLyAgICAgICAgICAgb25DbGljaz17ZXhwb3J0VG9DU1Z9XHJcbiAgICAvLyAgICAgICAgICAgY2xhc3NOYW1lPVwicHgtNCBweS0yIGJnLXllbGxvdy01MDAgaG92ZXI6YmcteWVsbG93LTYwMCB0ZXh0LWJsYWNrIHJvdW5kZWQgZm9udC1zZW1pYm9sZFwiXHJcbiAgICAvLyAgICAgICAgID5cclxuICAgIC8vICAgICAgICAgICBFeHBvcnQgQ1NWXHJcbiAgICAvLyAgICAgICAgIDwvYnV0dG9uPlxyXG4gICAgLy8gICAgICAgPC9kaXY+XHJcblxyXG4gICAgLy8gICAgICAge2xvYWRpbmcgPyAoXHJcbiAgICAvLyAgICAgICAgIDxwIGNsYXNzTmFtZT1cInRleHQteWVsbG93LTMwMFwiPkxvYWRpbmcuLi48L3A+XHJcbiAgICAvLyAgICAgICApIDogZmlsdGVyZWRVc2Vycy5sZW5ndGggPT09IDAgPyAoXHJcbiAgICAvLyAgICAgICAgIDxwIGNsYXNzTmFtZT1cInRleHQtZ3JheS00MDBcIj5ObyB1c2VycyBmb3VuZC48L3A+XHJcbiAgICAvLyAgICAgICApIDogKFxyXG4gICAgLy8gICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm92ZXJmbG93LXgtYXV0byBiZy1ncmF5LTgwMCByb3VuZGVkLWxnIHNoYWRvdy14bFwiPlxyXG4gICAgLy8gICAgICAgICAgIDx0YWJsZSBjbGFzc05hbWU9XCJ3LWZ1bGwgdGV4dC1sZWZ0IHRhYmxlLWF1dG9cIj5cclxuICAgIC8vICAgICAgICAgICAgIDx0aGVhZCBjbGFzc05hbWU9XCJiZy1ncmF5LTcwMCB0ZXh0LXNtIHVwcGVyY2FzZSB0ZXh0LWdyYXktMzAwXCI+XHJcbiAgICAvLyAgICAgICAgICAgICAgIDx0cj5cclxuICAgIC8vICAgICAgICAgICAgICAgICA8dGggY2xhc3NOYW1lPVwicC0zXCI+RW1haWw8L3RoPlxyXG4gICAgLy8gICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJwLTNcIj5CYWxhbmNlPC90aD5cclxuICAgIC8vICAgICAgICAgICAgICAgICA8dGggY2xhc3NOYW1lPVwicC0zXCI+RGVwb3NpdGVkICg3ZCk8L3RoPlxyXG4gICAgLy8gICAgICAgICAgICAgICAgIHsvKiA8dGggY2xhc3NOYW1lPVwicC0zXCI+V2l0aGRyYXduICg3ZCk8L3RoPlxyXG4gICAgLy8gICAgICAgICAgICAgICA8L3RyPiAqL31cclxuICAgIC8vICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cInAtM1wiPldpdGhkcmF3YWxzPC90aD5cclxuXHJcbiAgICAvLyAgICAgICAgICAgICA8L3RoZWFkPlxyXG4gICAgLy8gICAgICAgICAgICAgPHRib2R5PlxyXG4gICAgLy8gICAgICAgICAgICAgICB7ZmlsdGVyZWRVc2Vycy5tYXAoKHVzZXIpID0+IChcclxuICAgIC8vICAgICAgICAgICAgICAgICA8dHIga2V5PXt1c2VyLnVpZH0gY2xhc3NOYW1lPVwiYm9yZGVyLXQgYm9yZGVyLWdyYXktNzAwXCI+XHJcbiAgICAvLyAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3NOYW1lPVwicC0zXCI+e3VzZXIuZW1haWwgfHwgJ04vQSd9PC90ZD5cclxuICAgIC8vICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJwLTNcIj7igrl7dXNlci5iYWxhbmNlfTwvdGQ+XHJcbiAgICAvLyAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3NOYW1lPVwicC0zXCI+4oK5e3VzZXIudG90YWxEZXBvc2l0ZWR9PC90ZD5cclxuICAgIC8vICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJwLTNcIj7igrl7dXNlci5XaXRoZHJhd259PC90ZD5cclxuICAgIC8vICAgICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgLy8gICAgICAgICAgICAgICApKX1cclxuICAgIC8vICAgICAgICAgICAgIDwvdGJvZHk+XHJcbiAgICAvLyAgICAgICAgICAgPC90YWJsZT5cclxuICAgIC8vICAgICAgICAgPC9kaXY+XHJcbiAgICAvLyAgICAgICApfVxyXG4gICAgLy8gICAgIDwvZGl2PlxyXG4gICAgLy8gICA8L2Rpdj5cclxuICAgIC8vIDwvTGF5b3V0PlxyXG4gICAgPExheW91dD5cclxuICA8ZGl2IGNsYXNzTmFtZT1cIm1pbi1oLXNjcmVlbiBiZy1ncmF5LTkwMCB0ZXh0LXdoaXRlIHAtOFwiPlxyXG4gICAgPGRpdiBjbGFzc05hbWU9XCJtYXgtdy01eGwgbXgtYXV0b1wiPlxyXG4gICAgICA8aDEgY2xhc3NOYW1lPVwidGV4dC0zeGwgZm9udC1ib2xkIG1iLTZcIj5cclxuICAgICAgICB7cm9sZSA9PT0gJ2FkbWluJ1xyXG4gICAgICAgICAgPyAnQWRtaW46IEFsbCBTdWJhZG1pbiAmIFVzZXIgV2FsbGV0cydcclxuICAgICAgICAgIDogJ1N1YmFkbWluOiBZb3VyIFVzZXIgV2FsbGV0cyd9XHJcbiAgICAgIDwvaDE+XHJcblxyXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIGdhcC00IG1iLTZcIj5cclxuICAgICAgICA8aW5wdXRcclxuICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcclxuICAgICAgICAgIHBsYWNlaG9sZGVyPVwiU2VhcmNoIGJ5IGVtYWlsLi4uXCJcclxuICAgICAgICAgIHZhbHVlPXtzZWFyY2h9XHJcbiAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHNldFNlYXJjaChlLnRhcmdldC52YWx1ZSl9XHJcbiAgICAgICAgICBjbGFzc05hbWU9XCJweC00IHB5LTIgcm91bmRlZCBiZy1ncmF5LTgwMCBib3JkZXIgYm9yZGVyLWdyYXktNjAwIGZvY3VzOm91dGxpbmUtbm9uZVwiXHJcbiAgICAgICAgLz5cclxuICAgICAgICA8YnV0dG9uXHJcbiAgICAgICAgICBvbkNsaWNrPXtleHBvcnRUb0NTVn1cclxuICAgICAgICAgIGNsYXNzTmFtZT1cInB4LTQgcHktMiBiZy15ZWxsb3ctNTAwIGhvdmVyOmJnLXllbGxvdy02MDAgdGV4dC1ibGFjayByb3VuZGVkIGZvbnQtc2VtaWJvbGRcIlxyXG4gICAgICAgID5cclxuICAgICAgICAgIEV4cG9ydCBDU1ZcclxuICAgICAgICA8L2J1dHRvbj5cclxuICAgICAgPC9kaXY+XHJcblxyXG4gICAgICB7bG9hZGluZyA/IChcclxuICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0LXllbGxvdy0zMDBcIj5Mb2FkaW5nLi4uPC9wPlxyXG4gICAgICApIDogZmlsdGVyZWRVc2Vycy5sZW5ndGggPT09IDAgPyAoXHJcbiAgICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dC1ncmF5LTQwMFwiPk5vIHVzZXJzIGZvdW5kLjwvcD5cclxuICAgICAgKSA6IChcclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm92ZXJmbG93LXgtYXV0byBiZy1ncmF5LTgwMCByb3VuZGVkLWxnIHNoYWRvdy14bFwiPlxyXG4gICAgICAgICAgPHRhYmxlIGNsYXNzTmFtZT1cInctZnVsbCB0ZXh0LWxlZnQgdGFibGUtYXV0b1wiPlxyXG4gICAgICAgICAgICA8dGhlYWQgY2xhc3NOYW1lPVwiYmctZ3JheS03MDAgdGV4dC1zbSB1cHBlcmNhc2UgdGV4dC1ncmF5LTMwMFwiPlxyXG4gICAgICAgICAgICAgIDx0cj5cclxuICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJwLTNcIj5FbWFpbDwvdGg+XHJcbiAgICAgICAgICAgICAgICA8dGggY2xhc3NOYW1lPVwicC0zXCI+QmFsYW5jZTwvdGg+XHJcbiAgICAgICAgICAgICAgICA8dGggY2xhc3NOYW1lPVwicC0zXCI+RGVwb3NpdGVkICg3ZCk8L3RoPlxyXG4gICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cInAtM1wiPldpdGhkcmF3YWxzPC90aD5cclxuICAgICAgICAgICAgICA8L3RyPlxyXG4gICAgICAgICAgICA8L3RoZWFkPlxyXG4gICAgICAgICAgICA8dGJvZHk+XHJcbiAgICAgICAgICAgICAge2ZpbHRlcmVkVXNlcnMubWFwKCh1c2VyKSA9PiAoXHJcbiAgICAgICAgICAgICAgICA8dHIga2V5PXt1c2VyLnVpZH0gY2xhc3NOYW1lPVwiYm9yZGVyLXQgYm9yZGVyLWdyYXktNzAwIGFsaWduLXRvcFwiPlxyXG4gICAgICAgICAgICAgICAgICA8dGQgY2xhc3NOYW1lPVwicC0zXCI+e3VzZXIuZW1haWwgfHwgJ04vQSd9PC90ZD5cclxuICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cInAtM1wiPuKCuXt1c2VyLmJhbGFuY2V9PC90ZD5cclxuICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cInAtM1wiPuKCuXt1c2VyLnRvdGFsRGVwb3NpdGVkfTwvdGQ+XHJcbiAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJwLTMgdGV4dC1zbVwiPlxyXG4gICAgICAgICAgICAgICAgICAgIHt1c2VyLndpdGhkcmF3YWxzPy5sZW5ndGggPiAwID8gKFxyXG4gICAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzTmFtZT1cInNwYWNlLXktMVwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICB7dXNlci53aXRoZHJhd2Fscy5tYXAoKHcsIGlkeCkgPT4gKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBrZXk9e2lkeH0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICDigrl7dy5hbW91bnR9IG9ueycgJ31cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt3LmFwcHJvdmVkQXQ/LnRvTG9jYWxlRGF0ZVN0cmluZygpfSBhdHsnICd9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dy5hcHByb3ZlZEF0Py50b0xvY2FsZVRpbWVTdHJpbmcoW10sIHsgaG91cjogJzItZGlnaXQnLCBtaW51dGU6ICcyLWRpZ2l0JyB9KX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICApKX1cclxuICAgICAgICAgICAgICAgICAgICAgIDwvdWw+XHJcbiAgICAgICAgICAgICAgICAgICAgKSA6IChcclxuICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInRleHQtZ3JheS00MDBcIj5ObyB3aXRoZHJhd2Fsczwvc3Bhbj5cclxuICAgICAgICAgICAgICAgICAgICApfVxyXG4gICAgICAgICAgICAgICAgICA8L3RkPlxyXG4gICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICApKX1cclxuICAgICAgICAgICAgPC90Ym9keT5cclxuICAgICAgICAgIDwvdGFibGU+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICl9XHJcbiAgICA8L2Rpdj5cclxuICA8L2Rpdj5cclxuPC9MYXlvdXQ+XHJcblxyXG4gICk7XHJcbn1cclxuXHJcblxyXG5cclxuXHJcbi8vICd1c2UgY2xpZW50JztcclxuXHJcbi8vIGltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xyXG4vLyBpbXBvcnQge1xyXG4vLyAgIGdldEZpcmVzdG9yZSxcclxuLy8gICBjb2xsZWN0aW9uLFxyXG4vLyAgIGdldERvY3MsXHJcbi8vICAgcXVlcnksXHJcbi8vICAgd2hlcmUsXHJcbi8vICAgVGltZXN0YW1wLFxyXG4vLyAgIGRvYyxcclxuLy8gICBnZXREb2MsXHJcbi8vIH0gZnJvbSAnZmlyZWJhc2UvZmlyZXN0b3JlJztcclxuLy8gaW1wb3J0IHsgZ2V0QXV0aCwgb25BdXRoU3RhdGVDaGFuZ2VkIH0gZnJvbSAnZmlyZWJhc2UvYXV0aCc7XHJcbi8vIGltcG9ydCBmaXJlYmFzZUFwcCBmcm9tICdAL2ZpcmViYXNlJztcclxuLy8gaW1wb3J0IExheW91dCBmcm9tICdAL2FwcC9Db21wb25lbnRzL0xheW91dCc7XHJcblxyXG4vLyBleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBQYWdlKCkge1xyXG4vLyAgIGNvbnN0IGF1dGggPSBnZXRBdXRoKGZpcmViYXNlQXBwKTtcclxuLy8gICBjb25zdCBkYiA9IGdldEZpcmVzdG9yZShmaXJlYmFzZUFwcCk7XHJcblxyXG4vLyAgIGNvbnN0IFt1c2Vycywgc2V0VXNlcnNdID0gdXNlU3RhdGUoW10pO1xyXG4vLyAgIGNvbnN0IFtsb2FkaW5nLCBzZXRMb2FkaW5nXSA9IHVzZVN0YXRlKHRydWUpO1xyXG4vLyAgIGNvbnN0IFtzZWFyY2gsIHNldFNlYXJjaF0gPSB1c2VTdGF0ZSgnJyk7XHJcbi8vICAgY29uc3QgW2N1cnJlbnRVc2VyLCBzZXRDdXJyZW50VXNlcl0gPSB1c2VTdGF0ZShudWxsKTtcclxuLy8gICBjb25zdCBbcm9sZSwgc2V0Um9sZV0gPSB1c2VTdGF0ZShudWxsKTtcclxuXHJcbi8vICAgdXNlRWZmZWN0KCgpID0+IHtcclxuLy8gICAgIGNvbnN0IHVuc3Vic2NyaWJlID0gb25BdXRoU3RhdGVDaGFuZ2VkKGF1dGgsIGFzeW5jICh1c2VyKSA9PiB7XHJcbi8vICAgICAgIHNldEN1cnJlbnRVc2VyKHVzZXIpO1xyXG4vLyAgICAgICBpZiAodXNlcikge1xyXG4vLyAgICAgICAgIGNvbnN0IHVzZXJSZWYgPSBkb2MoZGIsICd1c2VycycsIHVzZXIudWlkKTtcclxuLy8gICAgICAgICBjb25zdCB1c2VyU25hcCA9IGF3YWl0IGdldERvYyh1c2VyUmVmKTtcclxuLy8gICAgICAgICBjb25zdCBkYXRhID0gdXNlclNuYXAuZGF0YSgpO1xyXG4vLyAgICAgICAgIGNvbnN0IHVzZXJSb2xlID0gZGF0YT8ucm9sZSB8fCAndXNlcic7XHJcbi8vICAgICAgICAgc2V0Um9sZSh1c2VyUm9sZSk7XHJcblxyXG4vLyAgICAgICAgIGlmICh1c2VyUm9sZSA9PT0gJ2FkbWluJyB8fCB1c2VyUm9sZSA9PT0gJ3N1YmFkbWluJykge1xyXG4vLyAgICAgICAgICAgYXdhaXQgZmV0Y2hVc2VyV2FsbGV0RGF0YSh1c2VyLnVpZCwgdXNlclJvbGUpO1xyXG4vLyAgICAgICAgIH0gZWxzZSB7XHJcbi8vICAgICAgICAgICBzZXRVc2VycyhbXSk7XHJcbi8vICAgICAgICAgICBzZXRMb2FkaW5nKGZhbHNlKTtcclxuLy8gICAgICAgICB9XHJcbi8vICAgICAgIH0gZWxzZSB7XHJcbi8vICAgICAgICAgc2V0TG9hZGluZyhmYWxzZSk7XHJcbi8vICAgICAgIH1cclxuLy8gICAgIH0pO1xyXG5cclxuLy8gICAgIHJldHVybiAoKSA9PiB1bnN1YnNjcmliZSgpO1xyXG4vLyAgIH0sIFtdKTtcclxuXHJcbi8vICAgY29uc3QgZmV0Y2hVc2VyV2FsbGV0RGF0YSA9IGFzeW5jICh1aWQsIHJvbGUpID0+IHtcclxuLy8gICAgIHNldExvYWRpbmcodHJ1ZSk7XHJcblxyXG4vLyAgICAgdHJ5IHtcclxuLy8gICAgICAgY29uc3Qgd2FsbGV0Q29sID0gY29sbGVjdGlvbihkYiwgJ3N1YndhbGxldHMnKTtcclxuLy8gICAgICAgY29uc3Qgd2FsbGV0UXVlcnkgPVxyXG4vLyAgICAgICAgIHJvbGUgPT09ICdhZG1pbidcclxuLy8gICAgICAgICAgID8gd2FsbGV0Q29sXHJcbi8vICAgICAgICAgICA6IHF1ZXJ5KHdhbGxldENvbCwgd2hlcmUoJ3N1YkFkbWluSWQnLCAnPT0nLCB1aWQpKTtcclxuXHJcbi8vICAgICAgIGNvbnN0IHdhbGxldHNTbmFwID0gYXdhaXQgZ2V0RG9jcyh3YWxsZXRRdWVyeSk7XHJcblxyXG4vLyAgICAgICBjb25zdCB3YWxsZXRzID0gd2FsbGV0c1NuYXAuZG9jcy5tYXAoKGRvYykgPT4gKHtcclxuLy8gICAgICAgICB1aWQ6IGRvYy5pZCxcclxuLy8gICAgICAgICBiYWxhbmNlOiBkb2MuZGF0YSgpLmJhbGFuY2UgfHwgMCxcclxuLy8gICAgICAgICBlbWFpbDogZG9jLmRhdGEoKS5lbWFpbCB8fCAnJyxcclxuLy8gICAgICAgfSkpO1xyXG5cclxuLy8gICAgICAgY29uc3Qgb25lV2Vla0FnbyA9IFRpbWVzdGFtcC5mcm9tRGF0ZShcclxuLy8gICAgICAgICBuZXcgRGF0ZShEYXRlLm5vdygpIC0gNyAqIDI0ICogNjAgKiA2MCAqIDEwMDApXHJcbi8vICAgICAgICk7XHJcblxyXG4vLyAgICAgICBjb25zdCBkZXBvc2l0UXVlcnkgPVxyXG4vLyAgICAgICAgIHJvbGUgPT09ICdhZG1pbidcclxuLy8gICAgICAgICAgID8gcXVlcnkoXHJcbi8vICAgICAgICAgICAgICAgY29sbGVjdGlvbihkYiwgJ3N1YmRlcG9zaXRSZXF1ZXN0cycpLFxyXG4vLyAgICAgICAgICAgICAgIHdoZXJlKCdzdGF0dXMnLCAnPT0nLCAnYXBwcm92ZWQnKSxcclxuLy8gICAgICAgICAgICAgICB3aGVyZSgnY3JlYXRlZEF0JywgJz49Jywgb25lV2Vla0FnbylcclxuLy8gICAgICAgICAgICAgKVxyXG4vLyAgICAgICAgICAgOiBxdWVyeShcclxuLy8gICAgICAgICAgICAgICBjb2xsZWN0aW9uKGRiLCAnc3ViZGVwb3NpdFJlcXVlc3RzJyksXHJcbi8vICAgICAgICAgICAgICAgd2hlcmUoJ3N0YXR1cycsICc9PScsICdhcHByb3ZlZCcpLFxyXG4vLyAgICAgICAgICAgICAgIHdoZXJlKCdjcmVhdGVkQXQnLCAnPj0nLCBvbmVXZWVrQWdvKSxcclxuLy8gICAgICAgICAgICAgICB3aGVyZSgnZnJvbVVzZXJTdWJBZG1pbklkJywgJz09JywgdWlkKVxyXG4vLyAgICAgICAgICAgICApO1xyXG5cclxuLy8gICAgICAgY29uc3Qgd2l0aGRyYXdRdWVyeSA9XHJcbi8vICAgICAgICAgcm9sZSA9PT0gJ2FkbWluJ1xyXG4vLyAgICAgICAgICAgPyBxdWVyeShcclxuLy8gICAgICAgICAgICAgICBjb2xsZWN0aW9uKGRiLCAnc3Vid2l0aGRyYXdSZXF1ZXN0cycpLFxyXG4vLyAgICAgICAgICAgICAgIHdoZXJlKCdzdGF0dXMnLCAnPT0nLCAnYXBwcm92ZWQnKSxcclxuLy8gICAgICAgICAgICAgICB3aGVyZSgnY3JlYXRlZEF0JywgJz49Jywgb25lV2Vla0FnbylcclxuLy8gICAgICAgICAgICAgKVxyXG4vLyAgICAgICAgICAgOiBxdWVyeShcclxuLy8gICAgICAgICAgICAgICBjb2xsZWN0aW9uKGRiLCAnc3Vid2l0aGRyYXdSZXF1ZXN0cycpLFxyXG4vLyAgICAgICAgICAgICAgIHdoZXJlKCdzdGF0dXMnLCAnPT0nLCAnYXBwcm92ZWQnKSxcclxuLy8gICAgICAgICAgICAgICB3aGVyZSgnY3JlYXRlZEF0JywgJz49Jywgb25lV2Vla0FnbyksXHJcbi8vICAgICAgICAgICAgICAgd2hlcmUoJ2Zyb21Vc2VyU3ViQWRtaW5JZCcsICc9PScsIHVpZClcclxuLy8gICAgICAgICAgICAgKTtcclxuXHJcbi8vICAgICAgIGNvbnN0IFtkZXBvc2l0U25hcCwgd2l0aGRyYXdTbmFwXSA9IGF3YWl0IFByb21pc2UuYWxsKFtcclxuLy8gICAgICAgICBnZXREb2NzKGRlcG9zaXRRdWVyeSksXHJcbi8vICAgICAgICAgZ2V0RG9jcyh3aXRoZHJhd1F1ZXJ5KSxcclxuLy8gICAgICAgXSk7XHJcblxyXG4vLyAgICAgICBjb25zdCBkZXBvc2l0TWFwID0ge307XHJcbi8vICAgICAgIGRlcG9zaXRTbmFwLmZvckVhY2goKGRvYykgPT4ge1xyXG4vLyAgICAgICAgIGNvbnN0IGRhdGEgPSBkb2MuZGF0YSgpO1xyXG4vLyAgICAgICAgIGlmICghZGF0YS51aWQpIHJldHVybjtcclxuLy8gICAgICAgICBpZiAoIWRlcG9zaXRNYXBbZGF0YS51aWRdKSBkZXBvc2l0TWFwW2RhdGEudWlkXSA9IDA7XHJcbi8vICAgICAgICAgZGVwb3NpdE1hcFtkYXRhLnVpZF0gKz0gZGF0YS5hbW91bnQgfHwgMDtcclxuLy8gICAgICAgfSk7XHJcblxyXG4vLyAgICAgICBjb25zdCB3aXRoZHJhd01hcCA9IHt9O1xyXG4vLyAgICAgICB3aXRoZHJhd1NuYXAuZm9yRWFjaCgoZG9jKSA9PiB7XHJcbi8vICAgICAgICAgY29uc3QgZGF0YSA9IGRvYy5kYXRhKCk7XHJcbi8vICAgICAgICAgaWYgKCFkYXRhLnVpZCkgcmV0dXJuO1xyXG4vLyAgICAgICAgIGlmICghd2l0aGRyYXdNYXBbZGF0YS51aWRdKSB3aXRoZHJhd01hcFtkYXRhLnVpZF0gPSAwO1xyXG4vLyAgICAgICAgIHdpdGhkcmF3TWFwW2RhdGEudWlkXSArPSBkYXRhLmFtb3VudCB8fCAwO1xyXG4vLyAgICAgICB9KTtcclxuXHJcbi8vICAgICAgIGNvbnN0IGZpbmFsVXNlcnMgPSB3YWxsZXRzLm1hcCgodXNlcikgPT4gKHtcclxuLy8gICAgICAgICAuLi51c2VyLFxyXG4vLyAgICAgICAgIHRvdGFsRGVwb3NpdGVkOiBkZXBvc2l0TWFwW3VzZXIudWlkXSB8fCAwLFxyXG4vLyAgICAgICAgIHRvdGFsV2l0aGRyYXduOiB3aXRoZHJhd01hcFt1c2VyLnVpZF0gfHwgMCxcclxuLy8gICAgICAgfSkpO1xyXG5cclxuLy8gICAgICAgc2V0VXNlcnMoZmluYWxVc2Vycyk7XHJcbi8vICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4vLyAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBmZXRjaGluZyB3YWxsZXQgZGF0YTonLCBlcnJvcik7XHJcbi8vICAgICAgIGFsZXJ0KCdFcnJvciBsb2FkaW5nIHdhbGxldCBkYXRhLicpO1xyXG4vLyAgICAgfVxyXG5cclxuLy8gICAgIHNldExvYWRpbmcoZmFsc2UpO1xyXG4vLyAgIH07XHJcblxyXG4vLyAgIGNvbnN0IGV4cG9ydFRvQ1NWID0gKCkgPT4ge1xyXG4vLyAgICAgY29uc3QgaGVhZGVycyA9IFsnRW1haWwnLCAnQmFsYW5jZScsICdEZXBvc2l0ZWQgKDcgZGF5cyknLCAnV2l0aGRyYXduICg3IGRheXMpJ107XHJcbi8vICAgICBjb25zdCByb3dzID0gdXNlcnMubWFwKCh1KSA9PiBbdS5lbWFpbCwgdS5iYWxhbmNlLCB1LnRvdGFsRGVwb3NpdGVkLCB1LnRvdGFsV2l0aGRyYXduXSk7XHJcbi8vICAgICBjb25zdCBjc3ZDb250ZW50ID0gW2hlYWRlcnMsIC4uLnJvd3NdLm1hcCgocikgPT4gci5qb2luKCcsJykpLmpvaW4oJ1xcbicpO1xyXG5cclxuLy8gICAgIGNvbnN0IGJsb2IgPSBuZXcgQmxvYihbY3N2Q29udGVudF0sIHsgdHlwZTogJ3RleHQvY3N2O2NoYXJzZXQ9dXRmLTg7JyB9KTtcclxuLy8gICAgIGNvbnN0IHVybCA9IFVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYik7XHJcbi8vICAgICBjb25zdCBsaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xyXG4vLyAgICAgbGluay5zZXRBdHRyaWJ1dGUoJ2hyZWYnLCB1cmwpO1xyXG4vLyAgICAgbGluay5zZXRBdHRyaWJ1dGUoJ2Rvd25sb2FkJywgJ3VzZXJfd2FsbGV0cy5jc3YnKTtcclxuLy8gICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQobGluayk7XHJcbi8vICAgICBsaW5rLmNsaWNrKCk7XHJcbi8vICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGxpbmspO1xyXG4vLyAgIH07XHJcblxyXG4vLyAgIGNvbnN0IGZpbHRlcmVkVXNlcnMgPSB1c2Vycy5maWx0ZXIoKHUpID0+XHJcbi8vICAgICB1LmVtYWlsLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoc2VhcmNoLnRvTG93ZXJDYXNlKCkpXHJcbi8vICAgKTtcclxuXHJcbi8vICAgcmV0dXJuIChcclxuLy8gICAgIDxMYXlvdXQ+XHJcbi8vICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWluLWgtc2NyZWVuIGJnLWdyYXktOTAwIHRleHQtd2hpdGUgcC04XCI+XHJcbi8vICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYXgtdy01eGwgbXgtYXV0b1wiPlxyXG4vLyAgICAgICAgICAgPGgxIGNsYXNzTmFtZT1cInRleHQtM3hsIGZvbnQtYm9sZCBtYi02XCI+XHJcbi8vICAgICAgICAgICAgIHtyb2xlID09PSAnYWRtaW4nXHJcbi8vICAgICAgICAgICAgICAgPyAnQWRtaW46IEFsbCBTdWJhZG1pbiAmIFVzZXIgV2FsbGV0cydcclxuLy8gICAgICAgICAgICAgICA6ICdTdWJhZG1pbjogWW91ciBVc2VyIFdhbGxldHMnfVxyXG4vLyAgICAgICAgICAgPC9oMT5cclxuXHJcbi8vICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIGdhcC00IG1iLTZcIj5cclxuLy8gICAgICAgICAgICAgPGlucHV0XHJcbi8vICAgICAgICAgICAgICAgdHlwZT1cInRleHRcIlxyXG4vLyAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiU2VhcmNoIGJ5IGVtYWlsLi4uXCJcclxuLy8gICAgICAgICAgICAgICB2YWx1ZT17c2VhcmNofVxyXG4vLyAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gc2V0U2VhcmNoKGUudGFyZ2V0LnZhbHVlKX1cclxuLy8gICAgICAgICAgICAgICBjbGFzc05hbWU9XCJweC00IHB5LTIgcm91bmRlZCBiZy1ncmF5LTgwMCBib3JkZXIgYm9yZGVyLWdyYXktNjAwIGZvY3VzOm91dGxpbmUtbm9uZVwiXHJcbi8vICAgICAgICAgICAgIC8+XHJcbi8vICAgICAgICAgICAgIDxidXR0b25cclxuLy8gICAgICAgICAgICAgICBvbkNsaWNrPXtleHBvcnRUb0NTVn1cclxuLy8gICAgICAgICAgICAgICBjbGFzc05hbWU9XCJweC00IHB5LTIgYmcteWVsbG93LTUwMCBob3ZlcjpiZy15ZWxsb3ctNjAwIHRleHQtYmxhY2sgcm91bmRlZCBmb250LXNlbWlib2xkXCJcclxuLy8gICAgICAgICAgICAgPlxyXG4vLyAgICAgICAgICAgICAgIEV4cG9ydCBDU1ZcclxuLy8gICAgICAgICAgICAgPC9idXR0b24+XHJcbi8vICAgICAgICAgICA8L2Rpdj5cclxuXHJcbi8vICAgICAgICAgICB7bG9hZGluZyA/IChcclxuLy8gICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dC15ZWxsb3ctMzAwXCI+TG9hZGluZy4uLjwvcD5cclxuLy8gICAgICAgICAgICkgOiBmaWx0ZXJlZFVzZXJzLmxlbmd0aCA9PT0gMCA/IChcclxuLy8gICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dC1ncmF5LTQwMFwiPk5vIHVzZXJzIGZvdW5kLjwvcD5cclxuLy8gICAgICAgICAgICkgOiAoXHJcbi8vICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwib3ZlcmZsb3cteC1hdXRvIGJnLWdyYXktODAwIHJvdW5kZWQtbGcgc2hhZG93LXhsXCI+XHJcbi8vICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzTmFtZT1cInctZnVsbCB0ZXh0LWxlZnQgdGFibGUtYXV0b1wiPlxyXG4vLyAgICAgICAgICAgICAgICAgPHRoZWFkIGNsYXNzTmFtZT1cImJnLWdyYXktNzAwIHRleHQtc20gdXBwZXJjYXNlIHRleHQtZ3JheS0zMDBcIj5cclxuLy8gICAgICAgICAgICAgICAgICAgPHRyPlxyXG4vLyAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJwLTNcIj5FbWFpbDwvdGg+XHJcbi8vICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cInAtM1wiPkJhbGFuY2U8L3RoPlxyXG4vLyAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJwLTNcIj5EZXBvc2l0ZWQgKDdkKTwvdGg+XHJcbi8vICAgICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cInAtM1wiPldpdGhkcmF3biAoN2QpPC90aD5cclxuLy8gICAgICAgICAgICAgICAgICAgPC90cj5cclxuLy8gICAgICAgICAgICAgICAgIDwvdGhlYWQ+XHJcbi8vICAgICAgICAgICAgICAgICA8dGJvZHk+XHJcbi8vICAgICAgICAgICAgICAgICAgIHtmaWx0ZXJlZFVzZXJzLm1hcCgodXNlcikgPT4gKFxyXG4vLyAgICAgICAgICAgICAgICAgICAgIDx0ciBrZXk9e3VzZXIudWlkfSBjbGFzc05hbWU9XCJib3JkZXItdCBib3JkZXItZ3JheS03MDBcIj5cclxuLy8gICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJwLTNcIj57dXNlci5lbWFpbCB8fCAnTi9BJ308L3RkPlxyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cInAtM1wiPuKCuXt1c2VyLmJhbGFuY2V9PC90ZD5cclxuLy8gICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJwLTNcIj7igrl7dXNlci50b3RhbERlcG9zaXRlZH08L3RkPlxyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cInAtM1wiPuKCuXt1c2VyLnRvdGFsV2l0aGRyYXdufTwvdGQ+XHJcbi8vICAgICAgICAgICAgICAgICAgICAgPC90cj5cclxuLy8gICAgICAgICAgICAgICAgICAgKSl9XHJcbi8vICAgICAgICAgICAgICAgICA8L3Rib2R5PlxyXG4vLyAgICAgICAgICAgICAgIDwvdGFibGU+XHJcbi8vICAgICAgICAgICAgIDwvZGl2PlxyXG4vLyAgICAgICAgICAgKX1cclxuLy8gICAgICAgICA8L2Rpdj5cclxuLy8gICAgICAgPC9kaXY+XHJcbi8vICAgICA8L0xheW91dD5cclxuLy8gICApO1xyXG4vLyB9XHJcbiJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZUVmZmVjdCIsInVzZVN0YXRlIiwiZ2V0RmlyZXN0b3JlIiwiY29sbGVjdGlvbiIsImdldERvY3MiLCJxdWVyeSIsIndoZXJlIiwiVGltZXN0YW1wIiwiZG9jIiwiZ2V0RG9jIiwiZ2V0QXV0aCIsIm9uQXV0aFN0YXRlQ2hhbmdlZCIsImZpcmViYXNlQXBwIiwiTGF5b3V0IiwiQWRtaW5Vc2VyV2FsbGV0c1BhZ2UiLCJhdXRoIiwiZGIiLCJ1c2VycyIsInNldFVzZXJzIiwibG9hZGluZyIsInNldExvYWRpbmciLCJzZWFyY2giLCJzZXRTZWFyY2giLCJjdXJyZW50VXNlciIsInNldEN1cnJlbnRVc2VyIiwicm9sZSIsInNldFJvbGUiLCJ1bnN1YnNjcmliZSIsInVzZXIiLCJ1c2VyUmVmIiwidWlkIiwidXNlclNuYXAiLCJkYXRhIiwidXNlclJvbGUiLCJmZXRjaFVzZXJXYWxsZXREYXRhIiwiZXhwb3J0VG9DU1YiLCJoZWFkZXJzIiwicm93cyIsIm1hcCIsInUiLCJ3aXRoZHJhd2FsRGV0YWlscyIsIndpdGhkcmF3YWxzIiwidyIsImFtb3VudCIsImFwcHJvdmVkQXQiLCJ0b0xvY2FsZURhdGVTdHJpbmciLCJ0b0xvY2FsZVRpbWVTdHJpbmciLCJob3VyIiwibWludXRlIiwiam9pbiIsImVtYWlsIiwiYmFsYW5jZSIsInRvdGFsRGVwb3NpdGVkIiwiY3N2Q29udGVudCIsInIiLCJibG9iIiwiQmxvYiIsInR5cGUiLCJ1cmwiLCJVUkwiLCJjcmVhdGVPYmplY3RVUkwiLCJsaW5rIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlIiwiYm9keSIsImFwcGVuZENoaWxkIiwiY2xpY2siLCJyZW1vdmVDaGlsZCIsImZpbHRlcmVkVXNlcnMiLCJmaWx0ZXIiLCJ0b0xvd2VyQ2FzZSIsImluY2x1ZGVzIiwiZGl2IiwiY2xhc3NOYW1lIiwiaDEiLCJpbnB1dCIsInBsYWNlaG9sZGVyIiwidmFsdWUiLCJvbkNoYW5nZSIsImUiLCJ0YXJnZXQiLCJidXR0b24iLCJvbkNsaWNrIiwicCIsImxlbmd0aCIsInRhYmxlIiwidGhlYWQiLCJ0ciIsInRoIiwidGJvZHkiLCJ0ZCIsInVsIiwiaWR4IiwibGkiLCJzcGFuIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/app/user-details/page.js\n"));

/***/ })

});