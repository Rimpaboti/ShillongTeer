/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/app/admin/declare-result/page",{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22E%3A%5C%5CNagaland%5C%5Cgamling%5C%5Cmegaend-new%5C%5Csrc%5C%5Capp%5C%5Capp%5C%5Cadmin%5C%5Cdeclare-result%5C%5Cpage.js%22%2C%22ids%22%3A%5B%5D%7D&server=false!":
/*!****************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22E%3A%5C%5CNagaland%5C%5Cgamling%5C%5Cmegaend-new%5C%5Csrc%5C%5Capp%5C%5Capp%5C%5Cadmin%5C%5Cdeclare-result%5C%5Cpage.js%22%2C%22ids%22%3A%5B%5D%7D&server=false! ***!
  \****************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./src/app/app/admin/declare-result/page.js */ \"(app-pages-browser)/./src/app/app/admin/declare-result/page.js\", 23));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyRSUzQSU1QyU1Q05hZ2FsYW5kJTVDJTVDZ2FtbGluZyU1QyU1Q21lZ2FlbmQtbmV3JTVDJTVDc3JjJTVDJTVDYXBwJTVDJTVDYXBwJTVDJTVDYWRtaW4lNUMlNUNkZWNsYXJlLXJlc3VsdCU1QyU1Q3BhZ2UuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0Qmc2VydmVyPWZhbHNlISIsIm1hcHBpbmdzIjoiQUFBQSxvTkFBc0giLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkU6XFxcXE5hZ2FsYW5kXFxcXGdhbWxpbmdcXFxcbWVnYWVuZC1uZXdcXFxcc3JjXFxcXGFwcFxcXFxhcHBcXFxcYWRtaW5cXFxcZGVjbGFyZS1yZXN1bHRcXFxccGFnZS5qc1wiKTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22E%3A%5C%5CNagaland%5C%5Cgamling%5C%5Cmegaend-new%5C%5Csrc%5C%5Capp%5C%5Capp%5C%5Cadmin%5C%5Cdeclare-result%5C%5Cpage.js%22%2C%22ids%22%3A%5B%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/app/app/admin/declare-result/page.js":
/*!**************************************************!*\
  !*** ./src/app/app/admin/declare-result/page.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("// 'use client';\n// import React, { useState } from 'react';\n// import {\n//   getFirestore,\n//   collection,\n//   query,\n//   where,\n//   getDocs,\n//   addDoc,\n//   doc,\n//   runTransaction,\n//   serverTimestamp,\n// } from 'firebase/firestore';\n// import firebaseApp from '@/firebase';\n// import Layout from '@/app/Components/Layout';\n// export default function DeclareResultPage() {\n//   const db = getFirestore(firebaseApp);\n//   const [day, setDay] = useState('');\n//   const [gameSlot, setGameSlot] = useState('');\n//   const [range, setRange] = useState('0-9');\n//   const [winningNumber, setWinningNumber] = useState('');\n//   const [submitting, setSubmitting] = useState(false);\n//   const handleDeclare = async () => {\n//     if (!day || !gameSlot || !range || String(winningNumber).trim() === '') {\n//       alert('Please fill all fields.');\n//       return;\n//     }\n//     const winningNum = range === '0-9' ? parseInt(winningNumber) : winningNumber;\n//     if (range === '0-9') {\n//       if (isNaN(winningNum) || winningNum < 0 || winningNum > 9) {\n//         alert('Winning number must be between 0 - 9.');\n//         return;\n//       }\n//     } else {\n//       if (!/^\\d{2}$/.test(winningNumber)) {\n//         alert('Winning number must be two digits (00 - 99).');\n//         return;\n//       }\n//     }\n//     setSubmitting(true);\n//     try {\n//       // Step 1: Check if result already declared\n//       const resultsRef = collection(db, 'results');\n//       const checkQuery = query(\n//         resultsRef,\n//         where('day', '==', day),\n//         where('gameSlot', '==', gameSlot),\n//         where('range', '==', range)\n//       );\n//       const existing = await getDocs(checkQuery);\n//       if (!existing.empty) {\n//         alert('Result already declared for this day, slot and range.');\n//         setSubmitting(false);\n//         return;\n//       }\n//       // Step 2: Get all bets for this slot\n//       const betsRef = collection(db, 'subbets');\n//       const betsQuery = query(\n//         betsRef,\n//         where('day', '==', day),\n//         where('gameSlot', '==', gameSlot),\n//         where('range', '==', range)\n//       );\n//       const betsSnap = await getDocs(betsQuery);\n//       if (betsSnap.empty) {\n//         alert('No bets found for this slot.');\n//         setSubmitting(false);\n//         return;\n//       }\n//       console.log('Winning Number:', winningNum);\n//       console.log('Bets:', betsSnap.docs.map((doc) => doc.data()));\n//       // Step 3: Run transaction\n//       // await runTransaction(db, async (transaction) => {\n//       //   for (const betDoc of betsSnap.docs) {\n//       //     const bet = betDoc.data();\n//       //     const isWinner = String(bet.number) === String(winningNum);\n//       //     if (!bet.uid) {\n//       //       throw new Error(`Missing UID for bet: ${betDoc.id}`);\n//       //     }\n//       //     const walletRef = doc(db, 'wallets', bet.uid);\n//       //     let newBalance = 0;\n//       //     if (isWinner) {\n//       //       const multiplier = range === '0-9' ? 9 : 60;\n//       //       const winAmount = bet.amount * multiplier;\n//       //       const walletSnap = await transaction.get(walletRef);\n//       //       const currentBal = walletSnap.exists() ? walletSnap.data().balance || 0 : 0;\n//       //       newBalance = currentBal + winAmount;\n//       //       transaction.set(walletRef, {\n//       //         balance: newBalance,\n//       //         updatedAt: serverTimestamp(),\n//       //       }, { merge: true });\n//       //       transaction.update(betDoc.ref, {\n//       //         result: 'won',\n//       //         winningNumber: winningNum,\n//       //         winAmount: winAmount,\n//       //         resultDeclaredAt: serverTimestamp(),\n//       //       });\n//       //     } else {\n//       //       transaction.update(betDoc.ref, {\n//       //         result: 'lost',\n//       //         winningNumber: winningNum,\n//       //         resultDeclaredAt: serverTimestamp(),\n//       //       });\n//       //     }\n//       //   }\n//       // });\n//       await runTransaction(db, async (transaction) => {\n//         const walletsToUpdate = new Map();\n//         // 1. First read everything\n//         for (const betDoc of betsSnap.docs) {\n//           const bet = betDoc.data();\n//           if (!bet.uid) {\n//             throw new Error(`Missing UID for bet: ${betDoc.id}`);\n//           }\n//           if (String(bet.number) === String(winningNum)) {\n//             const walletRef = doc(db, 'wallets', bet.uid);\n//             if (!walletsToUpdate.has(bet.uid)) {\n//               const walletSnap = await transaction.get(walletRef);\n//               walletsToUpdate.set(bet.uid, {\n//                 ref: walletRef,\n//                 balance: walletSnap.exists() ? walletSnap.data().balance || 0 : 0,\n//               });\n//             }\n//           }\n//         }\n//         // 2. Then perform writes\n//         for (const betDoc of betsSnap.docs) {\n//           const bet = betDoc.data();\n//           const isWinner = String(bet.number) === String(winningNum);\n//           if (!bet.uid) {\n//             throw new Error(`Missing UID for bet: ${betDoc.id}`);\n//           }\n//           if (isWinner) {\n//             const multiplier = range === '0-9' ? 9 : 60;\n//             const winAmount = bet.amount * multiplier;\n//             const walletData = walletsToUpdate.get(bet.uid);\n//             const newBalance = walletData.balance + winAmount;\n//             transaction.set(walletData.ref, {\n//               balance: newBalance,\n//               updatedAt: serverTimestamp(),\n//             }, { merge: true });\n//             transaction.update(betDoc.ref, {\n//               result: 'won',\n//               winningNumber: winningNum,\n//               winAmount: winAmount,\n//               resultDeclaredAt: serverTimestamp(),\n//             });\n//           } else {\n//             transaction.update(betDoc.ref, {\n//               result: 'lost',\n//               winningNumber: winningNum,\n//               resultDeclaredAt: serverTimestamp(),\n//             });\n//           }\n//         }\n//       });\n//       // Step 4: Store declared result\n//       await addDoc(resultsRef, {\n//         day: day,\n//         gameSlot: gameSlot,\n//         range: range,\n//         winningNumber: winningNum,\n//         declaredAt: serverTimestamp(),\n//       });\n//       alert('Result declared & winnings distributed!');\n//       setWinningNumber('');\n//     } catch (error) {\n//       console.error('Error declaring result:', error);\n//       alert('Error declaring result.');\n//     } finally {\n//       setSubmitting(false);\n//     }\n//   };\n//   const handleDateChange = (e) => {\n//     const iso = e.target.value;\n//     const [yyyy, mm, dd] = iso.split('-');\n//     const formatted = `${dd}/${mm}/${yyyy}`;\n//     setDay(formatted);\n//   };\n//   return (\n//     <Layout>\n//       <div className=\"min-h-screen bg-gray-900 text-white flex items-center justify-center p-8\">\n//         <div className=\"bg-gray-800 p-6 rounded-lg shadow-xl max-w-md w-full\">\n//           <h1 className=\"text-2xl font-bold mb-6\">Admin: Declare Result</h1>\n//           <div className=\"mb-4\">\n//             <label className=\"block mb-1\">Day (dd/mm/yyyy)</label>\n//             <input\n//               type=\"date\"\n//               value={day ? day.split('/').reverse().join('-') : ''}\n//               onChange={handleDateChange}\n//               className=\"w-full px-4 py-2 rounded bg-gray-700 border border-gray-600 focus:outline-none\"\n//             />\n//           </div>\n//           <div className=\"mb-4\">\n//             <label className=\"block mb-1\">Game Slot</label>\n//             <select\n//               value={gameSlot}\n//               onChange={(e) => setGameSlot(e.target.value)}\n//               className=\"w-full px-4 py-2 rounded bg-gray-700 border border-gray-600 focus:outline-none\"\n//             >\n//               <option value=\"\">Select Game Slot</option>\n//               <option value=\"1:00 PM\">1:00 PM</option>\n//               <option value=\"6:00 PM\">6:00 PM</option>\n//               <option value=\"8:00 PM\">8:00 PM</option>\n//             </select>\n//           </div>\n//           <div className=\"mb-4\">\n//             <label className=\"block mb-1\">Range</label>\n//             <select\n//               value={range}\n//               onChange={(e) => setRange(e.target.value)}\n//               className=\"w-full px-4 py-2 rounded bg-gray-700 border border-gray-600 focus:outline-none\"\n//             >\n//               <option value=\"0-9\">0-9</option>\n//               <option value=\"00-99\">00-99</option>\n//             </select>\n//           </div>\n//           <div className=\"mb-6\">\n//             <label className=\"block mb-1\">Winning Number</label>\n//             <input\n//               type=\"text\"\n//               value={winningNumber}\n//               onChange={(e) => setWinningNumber(e.target.value)}\n//               placeholder={range === '0-9' ? '0 - 9' : '00 - 99'}\n//               className=\"w-full px-4 py-2 rounded bg-gray-700 border border-gray-600 focus:outline-none\"\n//             />\n//           </div>\n//           <button\n//             onClick={handleDeclare}\n//             disabled={submitting}\n//             className={`w-full py-3 rounded-md font-semibold text-black ${submitting\n//                 ? 'bg-yellow-100 cursor-not-allowed'\n//                 : 'bg-yellow-400 hover:bg-yellow-500'\n//               }`}\n//           >\n//             {submitting ? 'Declaring...' : 'Declare Result'}\n//           </button>\n//         </div>\n//       </div>\n//     </Layout>\n//   );\n// }\n// 'use client';\n// import React, { useState } from 'react';\n// import {\n//   getFirestore,\n//   collection,\n//   query,\n//   where,\n//   getDocs,\n//   addDoc,\n//   doc,\n//   runTransaction,\n//   serverTimestamp,\n// } from 'firebase/firestore';\n// import firebaseApp from '@/firebase';\n// import Layout from '@/app/Components/Layout';\n// export default function DeclareResultPage() {\n//   const db = getFirestore(firebaseApp);\n//   const [day, setDay] = useState('');\n//   const [gameSlot, setGameSlot] = useState('');\n//   const [range, setRange] = useState('0-9');\n//   const [winningNumber, setWinningNumber] = useState('');\n//   const [submitting, setSubmitting] = useState(false);\n//   const handleDeclare = async () => {\n//     if (!day || !gameSlot || !range || String(winningNumber).trim() === '') {\n//       alert('Please fill all fields.');\n//       return;\n//     }\n//     const winningNum = range === '0-9' ? parseInt(winningNumber) : winningNumber;\n//     if (range === '0-9') {\n//       if (isNaN(winningNum) || winningNum < 0 || winningNum > 9) {\n//         alert('Winning number must be between 0 - 9.');\n//         return;\n//       }\n//     } else {\n//       if (!/^\\d{2}$/.test(winningNumber)) {\n//         alert('Winning number must be two digits (00 - 99).');\n//         return;\n//       }\n//     }\n//     setSubmitting(true);\n//     try {\n//       const resultsRef = collection(db, 'results');\n//       const checkQuery = query(\n//         resultsRef,\n//         where('day', '==', day),\n//         where('gameSlot', '==', gameSlot),\n//         where('range', '==', range)\n//       );\n//       const existing = await getDocs(checkQuery);\n//       if (!existing.empty) {\n//         alert('Result already declared for this day, slot and range.');\n//         setSubmitting(false);\n//         return;\n//       }\n//       const betsRef = collection(db, 'subbets');\n//       const betsQuery = query(\n//         betsRef,\n//         where('day', '==', day),\n//         where('gameSlot', '==', gameSlot),\n//         where('range', '==', range)\n//       );\n//       const betsSnap = await getDocs(betsQuery);\n//       if (betsSnap.empty) {\n//         alert('No bets found for this slot.');\n//         setSubmitting(false);\n//         return;\n//       }\n//       await runTransaction(db, async (transaction) => {\n//         const walletsToUpdate = new Map();\n//         // 1. First read all winning wallets\n//         for (const betDoc of betsSnap.docs) {\n//           const bet = betDoc.data();\n//           if (!bet.uid) throw new Error(`Missing UID for bet: ${betDoc.id}`);\n//           if (String(bet.number) === String(winningNum)) {\n//             const walletRef = doc(db, 'subwallets', bet.uid);\n//             if (!walletsToUpdate.has(bet.uid)) {\n//               const walletSnap = await transaction.get(walletRef);\n//               walletsToUpdate.set(bet.uid, {\n//                 ref: walletRef,\n//                 balance: walletSnap.exists() ? walletSnap.data().balance || 0 : 0,\n//               });\n//             }\n//           }\n//         }\n//         // 2. Perform wallet updates + bet updates\n//         for (const betDoc of betsSnap.docs) {\n//           const bet = betDoc.data();\n//           const isWinner = String(bet.number) === String(winningNum);\n//           if (!bet.uid) throw new Error(`Missing UID for bet: ${betDoc.id}`);\n//           if (isWinner) {\n//             const multiplier = range === '0-9' ? 9 : 60;\n//             const winAmount = bet.amount * multiplier;\n//             const walletData = walletsToUpdate.get(bet.uid);\n//             const newBalance = walletData.balance + winAmount;\n//             transaction.set(walletData.ref, {\n//               balance: newBalance,\n//               updatedAt: serverTimestamp(),\n//             }, { merge: true });\n//             transaction.update(betDoc.ref, {\n//               result: 'won',\n//               winningNumber: winningNum,\n//               winAmount: winAmount,\n//               resultDeclaredAt: serverTimestamp(),\n//             });\n//           } else {\n//             transaction.update(betDoc.ref, {\n//               result: 'lost',\n//               winningNumber: winningNum,\n//               resultDeclaredAt: serverTimestamp(),\n//             });\n//           }\n//         }\n//       });\n//       await addDoc(resultsRef, {\n//         day: day,\n//         gameSlot: gameSlot,\n//         range: range,\n//         winningNumber: winningNum,\n//         declaredAt: serverTimestamp(),\n//       });\n//       alert('Result declared & winnings distributed!');\n//       setWinningNumber('');\n//     } catch (error) {\n//       console.error('Error declaring result:', error);\n//       alert('Error declaring result.');\n//     } finally {\n//       setSubmitting(false);\n//     }\n//   };\n//   const handleDateChange = (e) => {\n//     const iso = e.target.value;\n//     const [yyyy, mm, dd] = iso.split('-');\n//     const formatted = `${dd}/${mm}/${yyyy}`;\n//     setDay(formatted);\n//   };\n//   return (\n//     <Layout>\n//       <div className=\"min-h-screen bg-gray-900 text-white flex items-center justify-center p-8\">\n//         <div className=\"bg-gray-800 p-6 rounded-lg shadow-xl max-w-md w-full\">\n//           <h1 className=\"text-2xl font-bold mb-6\">Admin: Declare Result</h1>\n//           <div className=\"mb-4\">\n//             <label className=\"block mb-1\">Day (dd/mm/yyyy)</label>\n//             <input\n//               type=\"date\"\n//               value={day ? day.split('/').reverse().join('-') : ''}\n//               onChange={handleDateChange}\n//               className=\"w-full px-4 py-2 rounded bg-gray-700 border border-gray-600 focus:outline-none\"\n//             />\n//           </div>\n//           <div className=\"mb-4\">\n//             <label className=\"block mb-1\">Game Slot</label>\n//             <select\n//               value={gameSlot}\n//               onChange={(e) => setGameSlot(e.target.value)}\n//               className=\"w-full px-4 py-2 rounded bg-gray-700 border border-gray-600 focus:outline-none\"\n//             >\n//               <option value=\"\">Select Game Slot</option>\n//               <option value=\"1:00 PM\">1:00 PM</option>\n//               <option value=\"6:00 PM\">6:00 PM</option>\n//               <option value=\"8:00 PM\">8:00 PM</option>\n//             </select>\n//           </div>\n//           <div className=\"mb-4\">\n//             <label className=\"block mb-1\">Range</label>\n//             <select\n//               value={range}\n//               onChange={(e) => setRange(e.target.value)}\n//               className=\"w-full px-4 py-2 rounded bg-gray-700 border border-gray-600 focus:outline-none\"\n//             >\n//               <option value=\"0-9\">0-9</option>\n//               <option value=\"00-99\">00-99</option>\n//             </select>\n//           </div>\n//           <div className=\"mb-6\">\n//             <label className=\"block mb-1\">Winning Number</label>\n//             <input\n//               type=\"text\"\n//               value={winningNumber}\n//               onChange={(e) => setWinningNumber(e.target.value)}\n//               placeholder={range === '0-9' ? '0 - 9' : '00 - 99'}\n//               className=\"w-full px-4 py-2 rounded bg-gray-700 border border-gray-600 focus:outline-none\"\n//             />\n//           </div>\n//           <button\n//             onClick={handleDeclare}\n//             disabled={submitting}\n//             className={`w-full py-3 rounded-md font-semibold text-black ${\n//               submitting\n//                 ? 'bg-yellow-100 cursor-not-allowed'\n//                 : 'bg-yellow-400 hover:bg-yellow-500'\n//             }`}\n//           >\n//             {submitting ? 'Declaring...' : 'Declare Result'}\n//           </button>\n//         </div>\n//       </div>\n//     </Layout>\n//   );\n// }\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/app/admin/declare-result/page.js\n"));

/***/ })

});