/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/public/signup/page",{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Csrc%5C%5Capp%5C%5Cpublic%5C%5Csignup%5C%5Cpage.js%22%2C%22ids%22%3A%5B%5D%7D&server=false!":
/*!*********************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Csrc%5C%5Capp%5C%5Cpublic%5C%5Csignup%5C%5Cpage.js%22%2C%22ids%22%3A%5B%5D%7D&server=false! ***!
  \*********************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./src/app/public/signup/page.js */ \"(app-pages-browser)/./src/app/public/signup/page.js\", 23));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyRSUzQSU1QyU1Q21lZ2FlbmQtbmV3JTVDJTVDc3JjJTVDJTVDYXBwJTVDJTVDcHVibGljJTVDJTVDc2lnbnVwJTVDJTVDcGFnZS5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZzZXJ2ZXI9ZmFsc2UhIiwibWFwcGluZ3MiOiJBQUFBLDhMQUF1RiIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiRTpcXFxcbWVnYWVuZC1uZXdcXFxcc3JjXFxcXGFwcFxcXFxwdWJsaWNcXFxcc2lnbnVwXFxcXHBhZ2UuanNcIik7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Csrc%5C%5Capp%5C%5Cpublic%5C%5Csignup%5C%5Cpage.js%22%2C%22ids%22%3A%5B%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/app/public/signup/page.js":
/*!***************************************!*\
  !*** ./src/app/public/signup/page.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("// 'use client'\n// import React, { useState } from 'react';\n// import { getAuth, createUserWithEmailAndPassword } from 'firebase/auth';\n// import firebaseApp from '@/firebase';\n// import { getFirestore, doc, setDoc, serverTimestamp } from 'firebase/firestore';\n// import { useRouter } from 'next/navigation';\n// import Link from 'next/link';\n// export default function SignupPage() {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState('');\n//   const router = useRouter();\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n//     setError('');\n//     const auth = getAuth(firebaseApp);\n//     const db = getFirestore(firebaseApp);\n//     try {\n//       const userCredential = await createUserWithEmailAndPassword(\n//         auth,\n//         email,\n//         password\n//       );\n//       // âœ… Add wallet doc for this new user\n//       const { uid } = userCredential.user;\n//       const walletRef = doc(db, 'wallets', uid);\n//       await setDoc(walletRef, {\n//         uid: uid,\n//         email: email,\n//         balance: 0,\n//         createdAt: serverTimestamp(),\n//       });\n//       router.push('/app/play');\n//     } catch (err) {\n//       setError(err.message);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n//   return (\n//     <div className=\"flex min-h-screen items-center justify-center bg-gray-900\">\n//       <div className=\"w-full max-w-md p-8 rounded-lg shadow-2xl\">\n//         <h2 className=\"text-2xl font-bold mb-6 text-white text-center\">\n//           Sign Up\n//         </h2>\n//         <form onSubmit={handleSubmit} className=\"flex flex-col gap-4\">\n//           <input\n//             type=\"email\"\n//             placeholder=\"Email\"\n//             value={email}\n//             onChange={(e) => setEmail(e.target.value)}\n//             required\n//             className=\"px-4 py-3 border border-gray-300 text-white rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n//           />\n//           <input\n//             type=\"password\"\n//             placeholder=\"Password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             required\n//             className=\"px-4 py-3 border border-gray-300 text-white rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n//           />\n//           <button\n//             type=\"submit\"\n//             disabled={loading}\n//             className={`w-full py-3 rounded-md text-white font-semibold transition ${\n//               loading\n//                 ? 'bg-yellow-100 cursor-not-allowed'\n//                 : 'bg-yellow-500 hover:bg-yellow-600'\n//             }`}\n//           >\n//             {loading ? 'Signing up...' : 'Sign Up'}\n//           </button>\n//           {error && (\n//             <div className=\"text-red-600 text-sm text-center\">{error}</div>\n//           )}\n//         </form>\n//         <p className=\"mt-4 text-sm text-center text-gray-600\">\n//           Already have an account?{' '}\n//           <Link\n//             href=\"/public/login\"\n//             className=\"text-yellow-600 hover:underline font-medium\"\n//           >\n//             Login\n//           </Link>\n//         </p>\n//       </div>\n//     </div>\n//   );\n// }\n// 'use client'\n// import React, { useState, useEffect } from 'react';\n// import { getAuth, createUserWithEmailAndPassword } from 'firebase/auth';\n// import firebaseApp from '@/firebase';\n// import {\n//   getFirestore,\n//   doc,\n//   setDoc,\n//   getDocs,\n//   query,\n//   where,\n//   collection,\n//   serverTimestamp,\n// } from 'firebase/firestore';\n// import { useRouter } from 'next/navigation';\n// import Link from 'next/link';\n// import FingerprintJS from '@fingerprintjs/fingerprintjs';\n// export default function SignupPage() {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState('');\n//   const [deviceId, setDeviceId] = useState('');\n//   const router = useRouter();\n//   // Get device fingerprint on mount\n//   useEffect(() => {\n//     const loadFingerprint = async () => {\n//       const fp = await FingerprintJS.load();\n//       const result = await fp.get();\n//       setDeviceId(result.visitorId);\n//     };\n//     loadFingerprint();\n//   }, []);\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n//     setError('');\n//     const auth = getAuth(firebaseApp);\n//     const db = getFirestore(firebaseApp);\n//     try {\n//       // Check if device already registered\n//       const walletQuery = query(\n//         collection(db, 'wallets'),\n//         where('deviceId', '==', deviceId)\n//       );\n//       const querySnapshot = await getDocs(walletQuery);\n//       if (!deviceId) {\n//         throw new Error('Device fingerprint not available. Please try again.');\n//       }\n//       if (!querySnapshot.empty) {\n//         throw new Error('Account already created on this device.');\n//       }\n//       const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n//       const { uid } = userCredential.user;\n//       // Save user wallet with fingerprint\n//       await setDoc(doc(db, 'wallets', uid), {\n//         uid,\n//         email,\n//         balance: 0,\n//         deviceId,\n//         createdAt: serverTimestamp(),\n//       });\n//       router.push('/app/play');\n//     } catch (err) {\n//       setError(err.message);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n//   return (\n//     <div className=\"flex min-h-screen items-center justify-center bg-gray-900\">\n//       <div className=\"w-full max-w-md p-8 rounded-lg shadow-2xl\">\n//         <h2 className=\"text-2xl font-bold mb-6 text-white text-center\">\n//           Sign Up\n//         </h2>\n//         <form onSubmit={handleSubmit} className=\"flex flex-col gap-4\">\n//           <input\n//             type=\"email\"\n//             placeholder=\"Email\"\n//             value={email}\n//             onChange={(e) => setEmail(e.target.value)}\n//             required\n//             className=\"px-4 py-3 border border-gray-300 text-white rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n//           />\n//           <input\n//             type=\"password\"\n//             placeholder=\"Password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             required\n//             className=\"px-4 py-3 border border-gray-300 text-white rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n//           />\n//           <button\n//             type=\"submit\"\n//             disabled={loading}\n//             className={`w-full py-3 rounded-md text-white font-semibold transition ${\n//               loading\n//                 ? 'bg-yellow-100 cursor-not-allowed'\n//                 : 'bg-yellow-500 hover:bg-yellow-600'\n//             }`}\n//           >\n//             {loading ? 'Signing up...' : 'Sign Up'}\n//           </button>\n//           {error && (\n//             <div className=\"text-red-600 text-sm text-center\">{error}</div>\n//           )}\n//         </form>\n//         <p className=\"mt-4 text-sm text-center text-gray-600\">\n//           Already have an account?{' '}\n//           <Link\n//             href=\"/public/login\"\n//             className=\"text-yellow-600 hover:underline font-medium\"\n//           >\n//             Login\n//           </Link>\n//         </p>\n//       </div>\n//     </div>\n//   );\n// }\n// 'use client'\n// import React, { useState, useEffect } from 'react';\n// import { getAuth, createUserWithEmailAndPassword } from 'firebase/auth';\n// import firebaseApp from '@/firebase';\n// import {\n//   getFirestore,\n//   doc,\n//   setDoc,\n//   getDocs,\n//   query,\n//   where,\n//   collection,\n//   serverTimestamp,\n// } from 'firebase/firestore';\n// import { useRouter } from 'next/navigation';\n// import Link from 'next/link';\n// import FingerprintJS from '@fingerprintjs/fingerprintjs';\n// export default function SignupPage() {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState('');\n//   const [deviceId, setDeviceId] = useState('');\n//   const router = useRouter();\n//   const ALLOW_SIGNUP = process.env.NEXT_PUBLIC_ALLOW_SIGNUP === 'true';\n//   useEffect(() => {\n//     const loadFingerprint = async () => {\n//       const fp = await FingerprintJS.load();\n//       const result = await fp.get();\n//       setDeviceId(result.visitorId);\n//     };\n//     loadFingerprint();\n//   }, []);\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n//     setError('');\n//     const auth = getAuth(firebaseApp);\n//     const db = getFirestore(firebaseApp);\n//     try {\n//       if (!ALLOW_SIGNUP) {\n//         throw new Error('Signup is disabled. Please contact an administrator.');\n//       }\n//       if (!deviceId) {\n//         throw new Error('Device fingerprint not available. Please try again.');\n//       }\n//       const walletQuery = query(\n//         collection(db, 'wallets'),\n//         where('deviceId', '==', deviceId)\n//       );\n//       const querySnapshot = await getDocs(walletQuery);\n//       if (!querySnapshot.empty) {\n//         throw new Error('Account already created on this device.');\n//       }\n//       const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n//       const { uid } = userCredential.user;\n//       // Create user document with role and wallet\n//       await setDoc(doc(db, 'users', uid), {\n//         uid,\n//         email,\n//         role: 'user',\n//         createdBy: 'admin',\n//         createdAt: serverTimestamp(),\n//       });\n//       await setDoc(doc(db, 'wallets', uid), {\n//         uid,\n//         email,\n//         balance: 0,\n//         deviceId,\n//         createdAt: serverTimestamp(),\n//       });\n//       router.push('/app/play');\n//     } catch (err) {\n//       setError(err.message);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n//   return (\n//     <div className=\"flex min-h-screen items-center justify-center bg-gray-900\">\n//       <div className=\"w-full max-w-md p-8 rounded-lg shadow-2xl\">\n//         <h2 className=\"text-2xl font-bold mb-6 text-white text-center\">Sign Up</h2>\n//         <form onSubmit={handleSubmit} className=\"flex flex-col gap-4\">\n//           <input\n//             type=\"email\"\n//             placeholder=\"Email\"\n//             value={email}\n//             onChange={(e) => setEmail(e.target.value)}\n//             required\n//             className=\"px-4 py-3 border border-gray-300 text-white rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n//           />\n//           <input\n//             type=\"password\"\n//             placeholder=\"Password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             required\n//             className=\"px-4 py-3 border border-gray-300 text-white rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n//           />\n//           <button\n//             type=\"submit\"\n//             disabled={loading}\n//             className={`w-full py-3 rounded-md text-white font-semibold transition ${\n//               loading\n//                 ? 'bg-yellow-100 cursor-not-allowed'\n//                 : 'bg-yellow-500 hover:bg-yellow-600'\n//             }`}\n//           >\n//             {loading ? 'Signing up...' : 'Sign Up'}\n//           </button>\n//           {error && (\n//             <div className=\"text-red-600 text-sm text-center\">{error}</div>\n//           )}\n//         </form>\n//         <p className=\"mt-4 text-sm text-center text-gray-600\">\n//           Already have an account?{' '}\n//           <Link\n//             href=\"/public/login\"\n//             className=\"text-yellow-600 hover:underline font-medium\"\n//           >\n//             Login\n//           </Link>\n//         </p>\n//       </div>\n//     </div>\n//   );\n// }\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/public/signup/page.js\n"));

/***/ })

});