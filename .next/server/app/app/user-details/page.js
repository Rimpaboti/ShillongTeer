/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/app/user-details/page";
exports.ids = ["app/app/user-details/page"];
exports.modules = {

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapp%2Fuser-details%2Fpage&page=%2Fapp%2Fuser-details%2Fpage&appPaths=%2Fapp%2Fuser-details%2Fpage&pagePath=private-next-app-dir%2Fapp%2Fuser-details%2Fpage.js&appDir=E%3A%5Cmegaend-new%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=E%3A%5Cmegaend-new&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapp%2Fuser-details%2Fpage&page=%2Fapp%2Fuser-details%2Fpage&appPaths=%2Fapp%2Fuser-details%2Fpage&pagePath=private-next-app-dir%2Fapp%2Fuser-details%2Fpage.js&appDir=E%3A%5Cmegaend-new%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=E%3A%5Cmegaend-new&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GlobalError: () => (/* reexport default from dynamic */ next_dist_client_components_builtin_global_error_js__WEBPACK_IMPORTED_MODULE_24___default.a),\n/* harmony export */   __next_app__: () => (/* binding */ __next_app__),\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   pages: () => (/* binding */ pages),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   tree: () => (/* binding */ tree)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-page/module.compiled */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/module.compiled.js?cc4a\");\n/* harmony import */ var next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_app_render_interop_default__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/app-render/interop-default */ \"(rsc)/./node_modules/next/dist/server/app-render/interop-default.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_experimental_ppr__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/experimental/ppr */ \"(rsc)/./node_modules/next/dist/server/lib/experimental/ppr.js\");\n/* harmony import */ var next_dist_server_lib_experimental_ppr__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_experimental_ppr__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_request_fallback_params__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/request/fallback-params */ \"(rsc)/./node_modules/next/dist/server/request/fallback-params.js\");\n/* harmony import */ var next_dist_server_app_render_encryption_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/app-render/encryption-utils */ \"(rsc)/./node_modules/next/dist/server/app-render/encryption-utils.js\");\n/* harmony import */ var next_dist_server_app_render_encryption_utils__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_app_render_encryption_utils__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var next_dist_server_lib_streaming_metadata__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/lib/streaming-metadata */ \"(rsc)/./node_modules/next/dist/server/lib/streaming-metadata.js\");\n/* harmony import */ var next_dist_server_lib_streaming_metadata__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_streaming_metadata__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_app_render_action_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/app-render/action-utils */ \"(rsc)/./node_modules/next/dist/server/app-render/action-utils.js\");\n/* harmony import */ var next_dist_server_app_render_action_utils__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_app_render_action_utils__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_server_lib_server_action_request_meta__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/server/lib/server-action-request-meta */ \"(rsc)/./node_modules/next/dist/server/lib/server-action-request-meta.js\");\n/* harmony import */ var next_dist_server_lib_server_action_request_meta__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_server_action_request_meta__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/client/components/app-router-headers */ \"(rsc)/./node_modules/next/dist/client/components/app-router-headers.js\");\n/* harmony import */ var next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var next_dist_shared_lib_router_utils_is_bot__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/is-bot */ \"next/dist/shared/lib/router/utils/is-bot\");\n/* harmony import */ var next_dist_shared_lib_router_utils_is_bot__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_is_bot__WEBPACK_IMPORTED_MODULE_16__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_17__);\n/* harmony import */ var next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! next/dist/lib/fallback */ \"(rsc)/./node_modules/next/dist/lib/fallback.js\");\n/* harmony import */ var next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18__);\n/* harmony import */ var next_dist_server_render_result__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! next/dist/server/render-result */ \"(rsc)/./node_modules/next/dist/server/render-result.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20__);\n/* harmony import */ var next_dist_server_stream_utils_encoded_tags__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! next/dist/server/stream-utils/encoded-tags */ \"(rsc)/./node_modules/next/dist/server/stream-utils/encoded-tags.js\");\n/* harmony import */ var next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! next/dist/server/send-payload */ \"(rsc)/./node_modules/next/dist/server/send-payload.js\");\n/* harmony import */ var next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_23___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_23__);\n/* harmony import */ var next_dist_client_components_builtin_global_error_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! next/dist/client/components/builtin/global-error.js */ \"(rsc)/./node_modules/next/dist/client/components/builtin/global-error.js\");\n/* harmony import */ var next_dist_client_components_builtin_global_error_js__WEBPACK_IMPORTED_MODULE_24___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_components_builtin_global_error_js__WEBPACK_IMPORTED_MODULE_24__);\n/* harmony import */ var next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! next/dist/server/app-render/entry-base */ \"(rsc)/./node_modules/next/dist/server/app-render/entry-base.js\");\n/* harmony import */ var next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_25___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_25__);\n/* harmony import */ var next_dist_client_components_redirect_status_code__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! next/dist/client/components/redirect-status-code */ \"(rsc)/./node_modules/next/dist/client/components/redirect-status-code.js\");\n/* harmony import */ var next_dist_client_components_redirect_status_code__WEBPACK_IMPORTED_MODULE_26___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_components_redirect_status_code__WEBPACK_IMPORTED_MODULE_26__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_25__) if([\"default\",\"tree\",\"pages\",\"GlobalError\",\"__next_app__\",\"routeModule\",\"handler\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_25__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\nconst module0 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/layout.js */ \"(rsc)/./src/app/layout.js\"));\nconst module1 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/builtin/global-error.js */ \"(rsc)/./node_modules/next/dist/client/components/builtin/global-error.js\", 23));\nconst module2 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/builtin/not-found.js */ \"(rsc)/./node_modules/next/dist/client/components/builtin/not-found.js\", 23));\nconst module3 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/builtin/forbidden.js */ \"(rsc)/./node_modules/next/dist/client/components/builtin/forbidden.js\", 23));\nconst module4 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/builtin/unauthorized.js */ \"(rsc)/./node_modules/next/dist/client/components/builtin/unauthorized.js\", 23));\nconst page5 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/app/user-details/page.js */ \"(rsc)/./src/app/app/user-details/page.js\"));\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\nconst tree = {\n        children: [\n        '',\n        {\n        children: [\n        'app',\n        {\n        children: [\n        'user-details',\n        {\n        children: ['__PAGE__', {}, {\n          page: [page5, \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\"],\n          \n        }]\n      },\n        {\n        \n        \n      }\n      ]\n      },\n        {\n        \n        metadata: {\n    icon: [(async (props) => (await Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! next-metadata-image-loader?type=favicon&segment=&basePath=&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js!./src/app/favicon.ico?__next_metadata__ */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-metadata-image-loader.js?type=favicon&segment=&basePath=&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js!./src/app/favicon.ico?__next_metadata__\"))).default(props))],\n    apple: [],\n    openGraph: [],\n    twitter: [],\n    manifest: undefined\n  }\n      }\n      ]\n      },\n        {\n        'layout': [module0, \"E:\\\\megaend-new\\\\src\\\\app\\\\layout.js\"],\n'global-error': [module1, \"next/dist/client/components/builtin/global-error.js\"],\n'not-found': [module2, \"next/dist/client/components/builtin/not-found.js\"],\n'forbidden': [module3, \"next/dist/client/components/builtin/forbidden.js\"],\n'unauthorized': [module4, \"next/dist/client/components/builtin/unauthorized.js\"],\n        metadata: {\n    icon: [(async (props) => (await Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! next-metadata-image-loader?type=favicon&segment=&basePath=&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js!./src/app/favicon.ico?__next_metadata__ */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-metadata-image-loader.js?type=favicon&segment=&basePath=&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js!./src/app/favicon.ico?__next_metadata__\"))).default(props))],\n    apple: [],\n    openGraph: [],\n    twitter: [],\n    manifest: undefined\n  }\n      }\n      ]\n      }.children;\nconst pages = [\"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\"];\n\n\n\nconst __next_app_require__ = __webpack_require__\nconst __next_app_load_chunk__ = () => Promise.resolve()\nconst __next_app__ = {\n    require: __next_app_require__,\n    loadChunk: __next_app_load_chunk__\n};\n\n\n\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppPageRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_PAGE,\n        page: \"/app/user-details/page\",\n        pathname: \"/app/user-details\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: '',\n        appPaths: []\n    },\n    userland: {\n        loaderTree: tree\n    },\n    distDir: \".next\" || 0,\n    projectDir:  false || ''\n});\nasync function handler(req, res, ctx) {\n    var _this;\n    let srcPage = \"/app/user-details/page\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = \"false\";\n    const initialPostponed = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'postponed');\n    // TODO: replace with more specific flags\n    const minimalMode = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'minimalMode');\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, query, params, parsedUrl, pageIsDynamic, buildManifest, nextFontManifest, reactLoadableManifest, serverActionsManifest, clientReferenceManifest, subresourceIntegrityManifest, prerenderManifest, isDraftMode, resolvedPathname, revalidateOnlyGenerated, routerServerContext, nextConfig } = prepareResult;\n    const pathname = parsedUrl.pathname || '/';\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_13__.normalizeAppPath)(srcPage);\n    let { isOnDemandRevalidate } = prepareResult;\n    const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n    const isPrerendered = prerenderManifest.routes[resolvedPathname];\n    let isSSG = Boolean(prerenderInfo || isPrerendered || prerenderManifest.routes[normalizedSrcPage]);\n    const userAgent = req.headers['user-agent'] || '';\n    const botType = (0,next_dist_shared_lib_router_utils_is_bot__WEBPACK_IMPORTED_MODULE_16__.getBotType)(userAgent);\n    const isHtmlBot = (0,next_dist_server_lib_streaming_metadata__WEBPACK_IMPORTED_MODULE_11__.isHtmlBotRequest)(req);\n    /**\n   * If true, this indicates that the request being made is for an app\n   * prefetch request.\n   */ const isPrefetchRSCRequest = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'isPrefetchRSCRequest') ?? Boolean(req.headers[next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_15__.NEXT_ROUTER_PREFETCH_HEADER]);\n    // NOTE: Don't delete headers[RSC] yet, it still needs to be used in renderToHTML later\n    const isRSCRequest = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'isRSCRequest') ?? Boolean(req.headers[next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_15__.RSC_HEADER]);\n    const isPossibleServerAction = (0,next_dist_server_lib_server_action_request_meta__WEBPACK_IMPORTED_MODULE_14__.getIsPossibleServerAction)(req);\n    /**\n   * If the route being rendered is an app page, and the ppr feature has been\n   * enabled, then the given route _could_ support PPR.\n   */ const couldSupportPPR = (0,next_dist_server_lib_experimental_ppr__WEBPACK_IMPORTED_MODULE_8__.checkIsAppPPREnabled)(nextConfig.experimental.ppr);\n    // When enabled, this will allow the use of the `?__nextppronly` query to\n    // enable debugging of the static shell.\n    const hasDebugStaticShellQuery =  false && 0;\n    // When enabled, this will allow the use of the `?__nextppronly` query\n    // to enable debugging of the fallback shell.\n    const hasDebugFallbackShellQuery = hasDebugStaticShellQuery && query.__nextppronly === 'fallback';\n    // This page supports PPR if it is marked as being `PARTIALLY_STATIC` in the\n    // prerender manifest and this is an app page.\n    const isRoutePPREnabled = couldSupportPPR && (((_this = prerenderManifest.routes[normalizedSrcPage] ?? prerenderManifest.dynamicRoutes[normalizedSrcPage]) == null ? void 0 : _this.renderingMode) === 'PARTIALLY_STATIC' || // Ideally we'd want to check the appConfig to see if this page has PPR\n    // enabled or not, but that would require plumbing the appConfig through\n    // to the server during development. We assume that the page supports it\n    // but only during development.\n    hasDebugStaticShellQuery && (routeModule.isDev === true || (routerServerContext == null ? void 0 : routerServerContext.experimentalTestProxy) === true));\n    const isDebugStaticShell = hasDebugStaticShellQuery && isRoutePPREnabled;\n    // We should enable debugging dynamic accesses when the static shell\n    // debugging has been enabled and we're also in development mode.\n    const isDebugDynamicAccesses = isDebugStaticShell && routeModule.isDev === true;\n    const isDebugFallbackShell = hasDebugFallbackShellQuery && isRoutePPREnabled;\n    // If we're in minimal mode, then try to get the postponed information from\n    // the request metadata. If available, use it for resuming the postponed\n    // render.\n    const minimalPostponed = isRoutePPREnabled ? initialPostponed : undefined;\n    // If PPR is enabled, and this is a RSC request (but not a prefetch), then\n    // we can use this fact to only generate the flight data for the request\n    // because we can't cache the HTML (as it's also dynamic).\n    const isDynamicRSCRequest = isRoutePPREnabled && isRSCRequest && !isPrefetchRSCRequest;\n    // Need to read this before it's stripped by stripFlightHeaders. We don't\n    // need to transfer it to the request meta because it's only read\n    // within this function; the static segment data should have already been\n    // generated, so we will always either return a static response or a 404.\n    const segmentPrefetchHeader = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'segmentPrefetchRSCRequest');\n    // TODO: investigate existing bug with shouldServeStreamingMetadata always\n    // being true for a revalidate due to modifying the base-server this.renderOpts\n    // when fixing this to correct logic it causes hydration issue since we set\n    // serveStreamingMetadata to true during export\n    let serveStreamingMetadata = !userAgent ? true : (0,next_dist_server_lib_streaming_metadata__WEBPACK_IMPORTED_MODULE_11__.shouldServeStreamingMetadata)(userAgent, nextConfig.htmlLimitedBots);\n    if (isHtmlBot && isRoutePPREnabled) {\n        isSSG = false;\n        serveStreamingMetadata = false;\n    }\n    // In development, we always want to generate dynamic HTML.\n    let supportsDynamicResponse = // If we're in development, we always support dynamic HTML, unless it's\n    // a data request, in which case we only produce static HTML.\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isSSG || // If this request has provided postponed data, it supports dynamic\n    // HTML.\n    typeof initialPostponed === 'string' || // If this is a dynamic RSC request, then this render supports dynamic\n    // HTML (it's dynamic).\n    isDynamicRSCRequest;\n    // When html bots request PPR page, perform the full dynamic rendering.\n    const shouldWaitOnAllReady = isHtmlBot && isRoutePPREnabled;\n    let ssgCacheKey = null;\n    if (!isDraftMode && isSSG && !supportsDynamicResponse && !isPossibleServerAction && !minimalPostponed && !isDynamicRSCRequest) {\n        ssgCacheKey = resolvedPathname;\n    }\n    // the staticPathKey differs from ssgCacheKey since\n    // ssgCacheKey is null in dev since we're always in \"dynamic\"\n    // mode in dev to bypass the cache, but we still need to honor\n    // dynamicParams = false in dev mode\n    let staticPathKey = ssgCacheKey;\n    if (!staticPathKey && routeModule.isDev) {\n        staticPathKey = resolvedPathname;\n    }\n    const ComponentMod = {\n        ...next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_25__,\n        tree,\n        pages,\n        GlobalError: (next_dist_client_components_builtin_global_error_js__WEBPACK_IMPORTED_MODULE_24___default()),\n        handler,\n        routeModule,\n        __next_app__\n    };\n    // Before rendering (which initializes component tree modules), we have to\n    // set the reference manifests to our global store so Server Action's\n    // encryption util can access to them at the top level of the page module.\n    if (serverActionsManifest && clientReferenceManifest) {\n        (0,next_dist_server_app_render_encryption_utils__WEBPACK_IMPORTED_MODULE_10__.setReferenceManifestsSingleton)({\n            page: srcPage,\n            clientReferenceManifest,\n            serverActionsManifest,\n            serverModuleMap: (0,next_dist_server_app_render_action_utils__WEBPACK_IMPORTED_MODULE_12__.createServerModuleMap)({\n                serverActionsManifest\n            })\n        });\n    }\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_3__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    try {\n        const invokeRouteModule = async (span, context)=>{\n            const nextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_7__.NodeNextRequest(req);\n            const nextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_7__.NodeNextResponse(res);\n            // TODO: adapt for putting the RDC inside the postponed data\n            // If we're in dev, and this isn't a prefetch or a server action,\n            // we should seed the resume data cache.\n            if (true) {\n                if (nextConfig.experimental.dynamicIO && !isPrefetchRSCRequest && !context.renderOpts.isPossibleServerAction) {\n                    const warmup = await routeModule.warmup(nextReq, nextRes, context);\n                    // If the warmup is successful, we should use the resume data\n                    // cache from the warmup.\n                    if (warmup.metadata.renderResumeDataCache) {\n                        context.renderOpts.renderResumeDataCache = warmup.metadata.renderResumeDataCache;\n                    }\n                }\n            }\n            return routeModule.render(nextReq, nextRes, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_5__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const doRender = async ({ span, postponed, fallbackRouteParams })=>{\n            const context = {\n                query,\n                params,\n                page: normalizedSrcPage,\n                sharedContext: {\n                    buildId\n                },\n                serverComponentsHmrCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'serverComponentsHmrCache'),\n                fallbackRouteParams,\n                renderOpts: {\n                    App: ()=>null,\n                    Document: ()=>null,\n                    pageConfig: {},\n                    ComponentMod,\n                    Component: (0,next_dist_server_app_render_interop_default__WEBPACK_IMPORTED_MODULE_6__.interopDefault)(ComponentMod),\n                    params,\n                    routeModule,\n                    page: srcPage,\n                    postponed,\n                    shouldWaitOnAllReady,\n                    serveStreamingMetadata,\n                    supportsDynamicResponse: typeof postponed === 'string' || supportsDynamicResponse,\n                    buildManifest,\n                    nextFontManifest,\n                    reactLoadableManifest,\n                    subresourceIntegrityManifest,\n                    serverActionsManifest,\n                    clientReferenceManifest,\n                    setIsrStatus: routerServerContext == null ? void 0 : routerServerContext.setIsrStatus,\n                    dir: routeModule.projectDir,\n                    isDraftMode,\n                    isRevalidate: isSSG && !postponed && !isDynamicRSCRequest,\n                    botType,\n                    isOnDemandRevalidate,\n                    isPossibleServerAction,\n                    assetPrefix: nextConfig.assetPrefix,\n                    nextConfigOutput: nextConfig.output,\n                    crossOrigin: nextConfig.crossOrigin,\n                    trailingSlash: nextConfig.trailingSlash,\n                    previewProps: prerenderManifest.preview,\n                    deploymentId: nextConfig.deploymentId,\n                    enableTainting: nextConfig.experimental.taint,\n                    htmlLimitedBots: nextConfig.htmlLimitedBots,\n                    devtoolSegmentExplorer: nextConfig.experimental.devtoolSegmentExplorer,\n                    reactMaxHeadersLength: nextConfig.reactMaxHeadersLength,\n                    multiZoneDraftMode,\n                    incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'incrementalCache'),\n                    cacheLifeProfiles: nextConfig.experimental.cacheLife,\n                    basePath: nextConfig.basePath,\n                    serverActions: nextConfig.experimental.serverActions,\n                    ...isDebugStaticShell || isDebugDynamicAccesses ? {\n                        nextExport: true,\n                        supportsDynamicResponse: false,\n                        isStaticGeneration: true,\n                        isRevalidate: true,\n                        isDebugDynamicAccesses: isDebugDynamicAccesses\n                    } : {},\n                    experimental: {\n                        isRoutePPREnabled,\n                        expireTime: nextConfig.expireTime,\n                        staleTimes: nextConfig.experimental.staleTimes,\n                        dynamicIO: Boolean(nextConfig.experimental.dynamicIO),\n                        clientSegmentCache: Boolean(nextConfig.experimental.clientSegmentCache),\n                        dynamicOnHover: Boolean(nextConfig.experimental.dynamicOnHover),\n                        inlineCss: Boolean(nextConfig.experimental.inlineCss),\n                        authInterrupts: Boolean(nextConfig.experimental.authInterrupts),\n                        clientTraceMetadata: nextConfig.experimental.clientTraceMetadata || []\n                    },\n                    waitUntil: ctx.waitUntil,\n                    onClose: (cb)=>{\n                        res.on('close', cb);\n                    },\n                    onAfterTaskError: ()=>{},\n                    onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext),\n                    err: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'invokeError'),\n                    dev: routeModule.isDev\n                }\n            };\n            const result = await invokeRouteModule(span, context);\n            const { metadata } = result;\n            const { cacheControl, headers = {}, // Add any fetch tags that were on the page to the response headers.\n            fetchTags: cacheTags } = metadata;\n            if (cacheTags) {\n                headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n            }\n            // Pull any fetch metrics from the render onto the request.\n            ;\n            req.fetchMetrics = metadata.fetchMetrics;\n            // we don't throw static to dynamic errors in dev as isSSG\n            // is a best guess in dev since we don't have the prerender pass\n            // to know whether the path is actually static or not\n            if (isSSG && (cacheControl == null ? void 0 : cacheControl.revalidate) === 0 && !routeModule.isDev && !isRoutePPREnabled) {\n                const staticBailoutInfo = metadata.staticBailoutInfo;\n                const err = Object.defineProperty(new Error(`Page changed from static to dynamic at runtime ${resolvedPathname}${(staticBailoutInfo == null ? void 0 : staticBailoutInfo.description) ? `, reason: ${staticBailoutInfo.description}` : ``}` + `\\nsee more here https://nextjs.org/docs/messages/app-static-to-dynamic-error`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E132\",\n                    enumerable: false,\n                    configurable: true\n                });\n                if (staticBailoutInfo == null ? void 0 : staticBailoutInfo.stack) {\n                    const stack = staticBailoutInfo.stack;\n                    err.stack = err.message + stack.substring(stack.indexOf('\\n'));\n                }\n                throw err;\n            }\n            return {\n                value: {\n                    kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_17__.CachedRouteKind.APP_PAGE,\n                    html: result,\n                    headers,\n                    rscData: metadata.flightData,\n                    postponed: metadata.postponed,\n                    status: metadata.statusCode,\n                    segmentData: metadata.segmentData\n                },\n                cacheControl\n            };\n        };\n        const responseGenerator = async ({ hasResolved, previousCacheEntry, isRevalidating, span })=>{\n            const isProduction = routeModule.isDev === false;\n            const didRespond = hasResolved || res.writableEnded;\n            // skip on-demand revalidate if cache is not present and\n            // revalidate-if-generated is set\n            if (isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry && !minimalMode) {\n                if (routerServerContext == null ? void 0 : routerServerContext.render404) {\n                    await routerServerContext.render404(req, res);\n                } else {\n                    res.statusCode = 404;\n                    res.end('This page could not be found');\n                }\n                return null;\n            }\n            let fallbackMode;\n            if (prerenderInfo) {\n                fallbackMode = (0,next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18__.parseFallbackField)(prerenderInfo.fallback);\n            }\n            // When serving a bot request, we want to serve a blocking render and not\n            // the prerendered page. This ensures that the correct content is served\n            // to the bot in the head.\n            if (fallbackMode === next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18__.FallbackMode.PRERENDER && (0,next_dist_shared_lib_router_utils_is_bot__WEBPACK_IMPORTED_MODULE_16__.isBot)(userAgent)) {\n                fallbackMode = next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18__.FallbackMode.BLOCKING_STATIC_RENDER;\n            }\n            if ((previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) === -1) {\n                isOnDemandRevalidate = true;\n            }\n            // TODO: adapt for PPR\n            // only allow on-demand revalidate for fallback: true/blocking\n            // or for prerendered fallback: false paths\n            if (isOnDemandRevalidate && (fallbackMode !== next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18__.FallbackMode.NOT_FOUND || previousCacheEntry)) {\n                fallbackMode = next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18__.FallbackMode.BLOCKING_STATIC_RENDER;\n            }\n            if (!minimalMode && fallbackMode !== next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18__.FallbackMode.BLOCKING_STATIC_RENDER && staticPathKey && !didRespond && !isDraftMode && pageIsDynamic && (isProduction || !isPrerendered)) {\n                // if the page has dynamicParams: false and this pathname wasn't\n                // prerendered trigger the no fallback handling\n                if (// In development, fall through to render to handle missing\n                // getStaticPaths.\n                (isProduction || prerenderInfo) && // When fallback isn't present, abort this render so we 404\n                fallbackMode === next_dist_lib_fallback__WEBPACK_IMPORTED_MODULE_18__.FallbackMode.NOT_FOUND) {\n                    throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_23__.NoFallbackError();\n                }\n                let fallbackResponse;\n                if (isRoutePPREnabled && !isRSCRequest) {\n                    // We use the response cache here to handle the revalidation and\n                    // management of the fallback shell.\n                    fallbackResponse = await routeModule.handleResponse({\n                        cacheKey: isProduction ? normalizedSrcPage : null,\n                        req,\n                        nextConfig,\n                        routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_PAGE,\n                        isFallback: true,\n                        prerenderManifest,\n                        isRoutePPREnabled,\n                        responseGenerator: async ()=>doRender({\n                                span,\n                                // We pass `undefined` as rendering a fallback isn't resumed\n                                // here.\n                                postponed: undefined,\n                                fallbackRouteParams: // If we're in production or we're debugging the fallback\n                                // shell then we should postpone when dynamic params are\n                                // accessed.\n                                isProduction || isDebugFallbackShell ? (0,next_dist_server_request_fallback_params__WEBPACK_IMPORTED_MODULE_9__.getFallbackRouteParams)(normalizedSrcPage) : null\n                            }),\n                        waitUntil: ctx.waitUntil\n                    });\n                    // If the fallback response was set to null, then we should return null.\n                    if (fallbackResponse === null) return null;\n                    // Otherwise, if we did get a fallback response, we should return it.\n                    if (fallbackResponse) {\n                        // Remove the cache control from the response to prevent it from being\n                        // used in the surrounding cache.\n                        delete fallbackResponse.cacheControl;\n                        return fallbackResponse;\n                    }\n                }\n            }\n            // Only requests that aren't revalidating can be resumed. If we have the\n            // minimal postponed data, then we should resume the render with it.\n            const postponed = !isOnDemandRevalidate && !isRevalidating && minimalPostponed ? minimalPostponed : undefined;\n            // When we're in minimal mode, if we're trying to debug the static shell,\n            // we should just return nothing instead of resuming the dynamic render.\n            if ((isDebugStaticShell || isDebugDynamicAccesses) && typeof postponed !== 'undefined') {\n                return {\n                    cacheControl: {\n                        revalidate: 1,\n                        expire: undefined\n                    },\n                    value: {\n                        kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_17__.CachedRouteKind.PAGES,\n                        html: next_dist_server_render_result__WEBPACK_IMPORTED_MODULE_19__[\"default\"].fromStatic(''),\n                        pageData: {},\n                        headers: undefined,\n                        status: undefined\n                    }\n                };\n            }\n            // If this is a dynamic route with PPR enabled and the default route\n            // matches were set, then we should pass the fallback route params to\n            // the renderer as this is a fallback revalidation request.\n            const fallbackRouteParams = pageIsDynamic && isRoutePPREnabled && ((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'renderFallbackShell') || isDebugFallbackShell) ? (0,next_dist_server_request_fallback_params__WEBPACK_IMPORTED_MODULE_9__.getFallbackRouteParams)(pathname) : null;\n            // Perform the render.\n            return doRender({\n                span,\n                postponed,\n                fallbackRouteParams\n            });\n        };\n        const handleResponse = async (span)=>{\n            var _cacheEntry_value, _cachedData_headers;\n            const cacheEntry = await routeModule.handleResponse({\n                cacheKey: ssgCacheKey,\n                responseGenerator: (c)=>responseGenerator({\n                        span,\n                        ...c\n                    }),\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_PAGE,\n                isOnDemandRevalidate,\n                isRoutePPREnabled,\n                req,\n                nextConfig,\n                prerenderManifest,\n                waitUntil: ctx.waitUntil\n            });\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            // In dev, we should not cache pages for any reason.\n            if (routeModule.isDev) {\n                res.setHeader('Cache-Control', 'no-store, must-revalidate');\n            }\n            if (!cacheEntry) {\n                if (ssgCacheKey) {\n                    // A cache entry might not be generated if a response is written\n                    // in `getInitialProps` or `getServerSideProps`, but those shouldn't\n                    // have a cache key. If we do have a cache key but we don't end up\n                    // with a cache entry, then either Next.js or the application has a\n                    // bug that needs fixing.\n                    throw Object.defineProperty(new Error('invariant: cache entry required but not generated'), \"__NEXT_ERROR_CODE\", {\n                        value: \"E62\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                return null;\n            }\n            if (((_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_17__.CachedRouteKind.APP_PAGE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant app-page handler received invalid cache entry ${(_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E707\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            const didPostpone = typeof cacheEntry.value.postponed === 'string';\n            if (isSSG && // We don't want to send a cache header for requests that contain dynamic\n            // data. If this is a Dynamic RSC request or wasn't a Prefetch RSC\n            // request, then we should set the cache header.\n            !isDynamicRSCRequest && (!didPostpone || isPrefetchRSCRequest)) {\n                if (!minimalMode) {\n                    // set x-nextjs-cache header to match the header\n                    // we set for the image-optimizer\n                    res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n                }\n                // Set a header used by the client router to signal the response is static\n                // and should respect the `static` cache staleTime value.\n                res.setHeader(next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_15__.NEXT_IS_PRERENDER_HEADER, '1');\n            }\n            const { value: cachedData } = cacheEntry;\n            // Coerce the cache control parameter from the render.\n            let cacheControl;\n            // If this is a resume request in minimal mode it is streamed with dynamic\n            // content and should not be cached.\n            if (minimalPostponed) {\n                cacheControl = {\n                    revalidate: 0,\n                    expire: undefined\n                };\n            } else if (minimalMode && isRSCRequest && !isPrefetchRSCRequest && isRoutePPREnabled) {\n                cacheControl = {\n                    revalidate: 0,\n                    expire: undefined\n                };\n            } else if (!routeModule.isDev) {\n                // If this is a preview mode request, we shouldn't cache it\n                if (isDraftMode) {\n                    cacheControl = {\n                        revalidate: 0,\n                        expire: undefined\n                    };\n                } else if (!isSSG) {\n                    if (!res.getHeader('Cache-Control')) {\n                        cacheControl = {\n                            revalidate: 0,\n                            expire: undefined\n                        };\n                    }\n                } else if (cacheEntry.cacheControl) {\n                    // If the cache entry has a cache control with a revalidate value that's\n                    // a number, use it.\n                    if (typeof cacheEntry.cacheControl.revalidate === 'number') {\n                        var _cacheEntry_cacheControl;\n                        if (cacheEntry.cacheControl.revalidate < 1) {\n                            throw Object.defineProperty(new Error(`Invalid revalidate configuration provided: ${cacheEntry.cacheControl.revalidate} < 1`), \"__NEXT_ERROR_CODE\", {\n                                value: \"E22\",\n                                enumerable: false,\n                                configurable: true\n                            });\n                        }\n                        cacheControl = {\n                            revalidate: cacheEntry.cacheControl.revalidate,\n                            expire: ((_cacheEntry_cacheControl = cacheEntry.cacheControl) == null ? void 0 : _cacheEntry_cacheControl.expire) ?? nextConfig.expireTime\n                        };\n                    } else {\n                        cacheControl = {\n                            revalidate: next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20__.CACHE_ONE_YEAR,\n                            expire: undefined\n                        };\n                    }\n                }\n            }\n            cacheEntry.cacheControl = cacheControl;\n            if (typeof segmentPrefetchHeader === 'string' && (cachedData == null ? void 0 : cachedData.kind) === next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_17__.CachedRouteKind.APP_PAGE && cachedData.segmentData) {\n                var _cachedData_headers1;\n                // This is a prefetch request issued by the client Segment Cache. These\n                // should never reach the application layer (lambda). We should either\n                // respond from the cache (HIT) or respond with 204 No Content (MISS).\n                // Set a header to indicate that PPR is enabled for this route. This\n                // lets the client distinguish between a regular cache miss and a cache\n                // miss due to PPR being disabled. In other contexts this header is used\n                // to indicate that the response contains dynamic data, but here we're\n                // only using it to indicate that the feature is enabled — the segment\n                // response itself contains whether the data is dynamic.\n                res.setHeader(next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_15__.NEXT_DID_POSTPONE_HEADER, '2');\n                // Add the cache tags header to the response if it exists and we're in\n                // minimal mode while rendering a static page.\n                const tags = (_cachedData_headers1 = cachedData.headers) == null ? void 0 : _cachedData_headers1[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20__.NEXT_CACHE_TAGS_HEADER];\n                if (minimalMode && isSSG && tags && typeof tags === 'string') {\n                    res.setHeader(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20__.NEXT_CACHE_TAGS_HEADER, tags);\n                }\n                const matchedSegment = cachedData.segmentData.get(segmentPrefetchHeader);\n                if (matchedSegment !== undefined) {\n                    // Cache hit\n                    return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22__.sendRenderResult)({\n                        req,\n                        res,\n                        type: 'rsc',\n                        generateEtags: nextConfig.generateEtags,\n                        poweredByHeader: nextConfig.poweredByHeader,\n                        result: next_dist_server_render_result__WEBPACK_IMPORTED_MODULE_19__[\"default\"].fromStatic(matchedSegment),\n                        cacheControl: cacheEntry.cacheControl\n                    });\n                }\n                // Cache miss. Either a cache entry for this route has not been generated\n                // (which technically should not be possible when PPR is enabled, because\n                // at a minimum there should always be a fallback entry) or there's no\n                // match for the requested segment. Respond with a 204 No Content. We\n                // don't bother to respond with 404, because these requests are only\n                // issued as part of a prefetch.\n                res.statusCode = 204;\n                return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22__.sendRenderResult)({\n                    req,\n                    res,\n                    type: 'rsc',\n                    generateEtags: nextConfig.generateEtags,\n                    poweredByHeader: nextConfig.poweredByHeader,\n                    result: next_dist_server_render_result__WEBPACK_IMPORTED_MODULE_19__[\"default\"].fromStatic(''),\n                    cacheControl: cacheEntry.cacheControl\n                });\n            }\n            // If there's a callback for `onCacheEntry`, call it with the cache entry\n            // and the revalidate options.\n            const onCacheEntry = (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'onCacheEntry');\n            if (onCacheEntry) {\n                const finished = await onCacheEntry({\n                    ...cacheEntry,\n                    // TODO: remove this when upstream doesn't\n                    // always expect this value to be \"PAGE\"\n                    value: {\n                        ...cacheEntry.value,\n                        kind: 'PAGE'\n                    }\n                }, {\n                    url: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_4__.getRequestMeta)(req, 'initURL')\n                });\n                if (finished) {\n                    // TODO: maybe we have to end the request?\n                    return null;\n                }\n            }\n            // If the request has a postponed state and it's a resume request we\n            // should error.\n            if (didPostpone && minimalPostponed) {\n                throw Object.defineProperty(new Error('Invariant: postponed state should not be present on a resume request'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E396\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (cachedData.headers) {\n                const headers = {\n                    ...cachedData.headers\n                };\n                if (!minimalMode || !isSSG) {\n                    delete headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20__.NEXT_CACHE_TAGS_HEADER];\n                }\n                for (let [key, value] of Object.entries(headers)){\n                    if (typeof value === 'undefined') continue;\n                    if (Array.isArray(value)) {\n                        for (const v of value){\n                            res.appendHeader(key, v);\n                        }\n                    } else if (typeof value === 'number') {\n                        value = value.toString();\n                        res.appendHeader(key, value);\n                    } else {\n                        res.appendHeader(key, value);\n                    }\n                }\n            }\n            // Add the cache tags header to the response if it exists and we're in\n            // minimal mode while rendering a static page.\n            const tags = (_cachedData_headers = cachedData.headers) == null ? void 0 : _cachedData_headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20__.NEXT_CACHE_TAGS_HEADER];\n            if (minimalMode && isSSG && tags && typeof tags === 'string') {\n                res.setHeader(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_20__.NEXT_CACHE_TAGS_HEADER, tags);\n            }\n            // If the request is a data request, then we shouldn't set the status code\n            // from the response because it should always be 200. This should be gated\n            // behind the experimental PPR flag.\n            if (cachedData.status && (!isRSCRequest || !isRoutePPREnabled)) {\n                res.statusCode = cachedData.status;\n            }\n            // Redirect information is encoded in RSC payload, so we don't need to use redirect status codes\n            if (!minimalMode && cachedData.status && next_dist_client_components_redirect_status_code__WEBPACK_IMPORTED_MODULE_26__.RedirectStatusCode[cachedData.status] && isRSCRequest) {\n                res.statusCode = 200;\n            }\n            // Mark that the request did postpone.\n            if (didPostpone) {\n                res.setHeader(next_dist_client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_15__.NEXT_DID_POSTPONE_HEADER, '1');\n            }\n            // we don't go through this block when preview mode is true\n            // as preview mode is a dynamic request (bypasses cache) and doesn't\n            // generate both HTML and payloads in the same request so continue to just\n            // return the generated payload\n            if (isRSCRequest && !isDraftMode) {\n                // If this is a dynamic RSC request, then stream the response.\n                if (typeof cachedData.rscData === 'undefined') {\n                    if (cachedData.postponed) {\n                        throw Object.defineProperty(new Error('Invariant: Expected postponed to be undefined'), \"__NEXT_ERROR_CODE\", {\n                            value: \"E372\",\n                            enumerable: false,\n                            configurable: true\n                        });\n                    }\n                    return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22__.sendRenderResult)({\n                        req,\n                        res,\n                        type: 'rsc',\n                        generateEtags: nextConfig.generateEtags,\n                        poweredByHeader: nextConfig.poweredByHeader,\n                        result: cachedData.html,\n                        // Dynamic RSC responses cannot be cached, even if they're\n                        // configured with `force-static` because we have no way of\n                        // distinguishing between `force-static` and pages that have no\n                        // postponed state.\n                        // TODO: distinguish `force-static` from pages with no postponed state (static)\n                        cacheControl: isDynamicRSCRequest ? {\n                            revalidate: 0,\n                            expire: undefined\n                        } : cacheEntry.cacheControl\n                    });\n                }\n                // As this isn't a prefetch request, we should serve the static flight\n                // data.\n                return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22__.sendRenderResult)({\n                    req,\n                    res,\n                    type: 'rsc',\n                    generateEtags: nextConfig.generateEtags,\n                    poweredByHeader: nextConfig.poweredByHeader,\n                    result: next_dist_server_render_result__WEBPACK_IMPORTED_MODULE_19__[\"default\"].fromStatic(cachedData.rscData),\n                    cacheControl: cacheEntry.cacheControl\n                });\n            }\n            // This is a request for HTML data.\n            let body = cachedData.html;\n            // If there's no postponed state, we should just serve the HTML. This\n            // should also be the case for a resume request because it's completed\n            // as a server render (rather than a static render).\n            if (!didPostpone || minimalMode) {\n                return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22__.sendRenderResult)({\n                    req,\n                    res,\n                    type: 'html',\n                    generateEtags: nextConfig.generateEtags,\n                    poweredByHeader: nextConfig.poweredByHeader,\n                    result: body,\n                    cacheControl: cacheEntry.cacheControl\n                });\n            }\n            // If we're debugging the static shell or the dynamic API accesses, we\n            // should just serve the HTML without resuming the render. The returned\n            // HTML will be the static shell so all the Dynamic API's will be used\n            // during static generation.\n            if (isDebugStaticShell || isDebugDynamicAccesses) {\n                // Since we're not resuming the render, we need to at least add the\n                // closing body and html tags to create valid HTML.\n                body.chain(new ReadableStream({\n                    start (controller) {\n                        controller.enqueue(next_dist_server_stream_utils_encoded_tags__WEBPACK_IMPORTED_MODULE_21__.ENCODED_TAGS.CLOSED.BODY_AND_HTML);\n                        controller.close();\n                    }\n                }));\n                return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22__.sendRenderResult)({\n                    req,\n                    res,\n                    type: 'html',\n                    generateEtags: nextConfig.generateEtags,\n                    poweredByHeader: nextConfig.poweredByHeader,\n                    result: body,\n                    cacheControl: {\n                        revalidate: 0,\n                        expire: undefined\n                    }\n                });\n            }\n            // This request has postponed, so let's create a new transformer that the\n            // dynamic data can pipe to that will attach the dynamic data to the end\n            // of the response.\n            const transformer = new TransformStream();\n            body.chain(transformer.readable);\n            // Perform the render again, but this time, provide the postponed state.\n            // We don't await because we want the result to start streaming now, and\n            // we've already chained the transformer's readable to the render result.\n            doRender({\n                span,\n                postponed: cachedData.postponed,\n                // This is a resume render, not a fallback render, so we don't need to\n                // set this.\n                fallbackRouteParams: null\n            }).then(async (result)=>{\n                var _result_value;\n                if (!result) {\n                    throw Object.defineProperty(new Error('Invariant: expected a result to be returned'), \"__NEXT_ERROR_CODE\", {\n                        value: \"E463\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                if (((_result_value = result.value) == null ? void 0 : _result_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_17__.CachedRouteKind.APP_PAGE) {\n                    var _result_value1;\n                    throw Object.defineProperty(new Error(`Invariant: expected a page response, got ${(_result_value1 = result.value) == null ? void 0 : _result_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                        value: \"E305\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                // Pipe the resume result to the transformer.\n                await result.value.html.pipeTo(transformer.writable);\n            }).catch((err)=>{\n                // An error occurred during piping or preparing the render, abort\n                // the transformers writer so we can terminate the stream.\n                transformer.writable.abort(err).catch((e)=>{\n                    console.error(\"couldn't abort transformer\", e);\n                });\n            });\n            return (0,next_dist_server_send_payload__WEBPACK_IMPORTED_MODULE_22__.sendRenderResult)({\n                req,\n                res,\n                type: 'html',\n                generateEtags: nextConfig.generateEtags,\n                poweredByHeader: nextConfig.poweredByHeader,\n                result: body,\n                // We don't want to cache the response if it has postponed data because\n                // the response being sent to the client it's dynamic parts are streamed\n                // to the client on the same request.\n                cacheControl: {\n                    revalidate: 0,\n                    expire: undefined\n                }\n            });\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            return await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_5__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_3__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: srcPage,\n                routeType: 'render',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_2__.getRevalidateReason)({\n                    isRevalidate: isSSG,\n                    isOnDemandRevalidate\n                })\n            }, routerServerContext);\n        }\n        // rethrow so that we can handle serving error page\n        throw err;\n    }\n}\n\n//# sourceMappingURL=app-page.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapp%2Fuser-details%2Fpage&page=%2Fapp%2Fuser-details%2Fpage&appPaths=%2Fapp%2Fuser-details%2Fpage&pagePath=private-next-app-dir%2Fapp%2Fuser-details%2Fpage.js&appDir=E%3A%5Cmegaend-new%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=E%3A%5Cmegaend-new&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cbuiltin%5C%5Cglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Chttp-access-fallback%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Clayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cmetadata%5C%5Casync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cmetadata%5C%5Cmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Crender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cmetadata%5C%5Cgenerate%5C%5Cicon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cnext-devtools%5C%5Cuserspace%5C%5Capp%5C%5Csegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cbuiltin%5C%5Cglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Chttp-access-fallback%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Clayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cmetadata%5C%5Casync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cmetadata%5C%5Cmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Crender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cmetadata%5C%5Cgenerate%5C%5Cicon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cnext-devtools%5C%5Cuserspace%5C%5Capp%5C%5Csegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/builtin/global-error.js */ \"(rsc)/./node_modules/next/dist/client/components/builtin/global-error.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-page.js */ \"(rsc)/./node_modules/next/dist/client/components/client-page.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-segment.js */ \"(rsc)/./node_modules/next/dist/client/components/client-segment.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/http-access-fallback/error-boundary.js */ \"(rsc)/./node_modules/next/dist/client/components/http-access-fallback/error-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/layout-router.js */ \"(rsc)/./node_modules/next/dist/client/components/layout-router.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/metadata/async-metadata.js */ \"(rsc)/./node_modules/next/dist/client/components/metadata/async-metadata.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/metadata/metadata-boundary.js */ \"(rsc)/./node_modules/next/dist/client/components/metadata/metadata-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/render-from-template-context.js */ \"(rsc)/./node_modules/next/dist/client/components/render-from-template-context.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/lib/metadata/generate/icon-mark.js */ \"(rsc)/./node_modules/next/dist/lib/metadata/generate/icon-mark.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/next-devtools/userspace/app/segment-explorer-node.js */ \"(rsc)/./node_modules/next/dist/next-devtools/userspace/app/segment-explorer-node.js\", 23));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkUlM0ElNUMlNUNtZWdhZW5kLW5ldyU1QyU1Q25vZGVfbW9kdWxlcyU1QyU1Q25leHQlNUMlNUNkaXN0JTVDJTVDY2xpZW50JTVDJTVDY29tcG9uZW50cyU1QyU1Q2J1aWx0aW4lNUMlNUNnbG9iYWwtZXJyb3IuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyRSUzQSU1QyU1Q21lZ2FlbmQtbmV3JTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNjbGllbnQlNUMlNUNjb21wb25lbnRzJTVDJTVDY2xpZW50LXBhZ2UuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyRSUzQSU1QyU1Q21lZ2FlbmQtbmV3JTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNjbGllbnQlNUMlNUNjb21wb25lbnRzJTVDJTVDY2xpZW50LXNlZ21lbnQuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyRSUzQSU1QyU1Q21lZ2FlbmQtbmV3JTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNjbGllbnQlNUMlNUNjb21wb25lbnRzJTVDJTVDaHR0cC1hY2Nlc3MtZmFsbGJhY2slNUMlNUNlcnJvci1ib3VuZGFyeS5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjJFJTNBJTVDJTVDbWVnYWVuZC1uZXclNUMlNUNub2RlX21vZHVsZXMlNUMlNUNuZXh0JTVDJTVDZGlzdCU1QyU1Q2NsaWVudCU1QyU1Q2NvbXBvbmVudHMlNUMlNUNsYXlvdXQtcm91dGVyLmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkUlM0ElNUMlNUNtZWdhZW5kLW5ldyU1QyU1Q25vZGVfbW9kdWxlcyU1QyU1Q25leHQlNUMlNUNkaXN0JTVDJTVDY2xpZW50JTVDJTVDY29tcG9uZW50cyU1QyU1Q21ldGFkYXRhJTVDJTVDYXN5bmMtbWV0YWRhdGEuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyRSUzQSU1QyU1Q21lZ2FlbmQtbmV3JTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNjbGllbnQlNUMlNUNjb21wb25lbnRzJTVDJTVDbWV0YWRhdGElNUMlNUNtZXRhZGF0YS1ib3VuZGFyeS5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjJFJTNBJTVDJTVDbWVnYWVuZC1uZXclNUMlNUNub2RlX21vZHVsZXMlNUMlNUNuZXh0JTVDJTVDZGlzdCU1QyU1Q2NsaWVudCU1QyU1Q2NvbXBvbmVudHMlNUMlNUNyZW5kZXItZnJvbS10ZW1wbGF0ZS1jb250ZXh0LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkUlM0ElNUMlNUNtZWdhZW5kLW5ldyU1QyU1Q25vZGVfbW9kdWxlcyU1QyU1Q25leHQlNUMlNUNkaXN0JTVDJTVDbGliJTVDJTVDbWV0YWRhdGElNUMlNUNnZW5lcmF0ZSU1QyU1Q2ljb24tbWFyay5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjJFJTNBJTVDJTVDbWVnYWVuZC1uZXclNUMlNUNub2RlX21vZHVsZXMlNUMlNUNuZXh0JTVDJTVDZGlzdCU1QyU1Q25leHQtZGV2dG9vbHMlNUMlNUN1c2Vyc3BhY2UlNUMlNUNhcHAlNUMlNUNzZWdtZW50LWV4cGxvcmVyLW5vZGUuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0Qmc2VydmVyPXRydWUhIiwibWFwcGluZ3MiOiJBQUFBLHNQQUE0SDtBQUM1SDtBQUNBLG9PQUFrSDtBQUNsSDtBQUNBLDBPQUFxSDtBQUNySDtBQUNBLG9SQUEySTtBQUMzSTtBQUNBLHdPQUFvSDtBQUNwSDtBQUNBLDRQQUErSDtBQUMvSDtBQUNBLGtRQUFrSTtBQUNsSTtBQUNBLHNRQUFtSTtBQUNuSTtBQUNBLHdPQUFxSDtBQUNySDtBQUNBLDRRQUF1SSIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiRTpcXFxcbWVnYWVuZC1uZXdcXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxjbGllbnRcXFxcY29tcG9uZW50c1xcXFxidWlsdGluXFxcXGdsb2JhbC1lcnJvci5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiRTpcXFxcbWVnYWVuZC1uZXdcXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxjbGllbnRcXFxcY29tcG9uZW50c1xcXFxjbGllbnQtcGFnZS5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiRTpcXFxcbWVnYWVuZC1uZXdcXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxjbGllbnRcXFxcY29tcG9uZW50c1xcXFxjbGllbnQtc2VnbWVudC5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiRTpcXFxcbWVnYWVuZC1uZXdcXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxjbGllbnRcXFxcY29tcG9uZW50c1xcXFxodHRwLWFjY2Vzcy1mYWxsYmFja1xcXFxlcnJvci1ib3VuZGFyeS5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiRTpcXFxcbWVnYWVuZC1uZXdcXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxjbGllbnRcXFxcY29tcG9uZW50c1xcXFxsYXlvdXQtcm91dGVyLmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJFOlxcXFxtZWdhZW5kLW5ld1xcXFxub2RlX21vZHVsZXNcXFxcbmV4dFxcXFxkaXN0XFxcXGNsaWVudFxcXFxjb21wb25lbnRzXFxcXG1ldGFkYXRhXFxcXGFzeW5jLW1ldGFkYXRhLmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJFOlxcXFxtZWdhZW5kLW5ld1xcXFxub2RlX21vZHVsZXNcXFxcbmV4dFxcXFxkaXN0XFxcXGNsaWVudFxcXFxjb21wb25lbnRzXFxcXG1ldGFkYXRhXFxcXG1ldGFkYXRhLWJvdW5kYXJ5LmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJFOlxcXFxtZWdhZW5kLW5ld1xcXFxub2RlX21vZHVsZXNcXFxcbmV4dFxcXFxkaXN0XFxcXGNsaWVudFxcXFxjb21wb25lbnRzXFxcXHJlbmRlci1mcm9tLXRlbXBsYXRlLWNvbnRleHQuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkU6XFxcXG1lZ2FlbmQtbmV3XFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGRpc3RcXFxcbGliXFxcXG1ldGFkYXRhXFxcXGdlbmVyYXRlXFxcXGljb24tbWFyay5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiRTpcXFxcbWVnYWVuZC1uZXdcXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxuZXh0LWRldnRvb2xzXFxcXHVzZXJzcGFjZVxcXFxhcHBcXFxcc2VnbWVudC1leHBsb3Jlci1ub2RlLmpzXCIpO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cbuiltin%5C%5Cglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Chttp-access-fallback%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Clayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cmetadata%5C%5Casync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cmetadata%5C%5Cmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Crender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cmetadata%5C%5Cgenerate%5C%5Cicon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cnext-devtools%5C%5Cuserspace%5C%5Capp%5C%5Csegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cfont%5C%5Cgoogle%5C%5Ctarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%5C%5C%5C%5Capp%5C%5C%5C%5Clayout.js%5C%22%2C%5C%22import%5C%22%3A%5C%22Geist%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22variable%5C%22%3A%5C%22--font-geist-sans%5C%22%2C%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistSans%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cfont%5C%5Cgoogle%5C%5Ctarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%5C%5C%5C%5Capp%5C%5C%5C%5Clayout.js%5C%22%2C%5C%22import%5C%22%3A%5C%22Geist_Mono%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22variable%5C%22%3A%5C%22--font-geist-mono%5C%22%2C%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistMono%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Csrc%5C%5Capp%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cfont%5C%5Cgoogle%5C%5Ctarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%5C%5C%5C%5Capp%5C%5C%5C%5Clayout.js%5C%22%2C%5C%22import%5C%22%3A%5C%22Geist%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22variable%5C%22%3A%5C%22--font-geist-sans%5C%22%2C%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistSans%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cfont%5C%5Cgoogle%5C%5Ctarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%5C%5C%5C%5Capp%5C%5C%5C%5Clayout.js%5C%22%2C%5C%22import%5C%22%3A%5C%22Geist_Mono%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22variable%5C%22%3A%5C%22--font-geist-mono%5C%22%2C%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistMono%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Csrc%5C%5Capp%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ (() => {



/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Csrc%5C%5Capp%5C%5Capp%5C%5Cuser-details%5C%5Cpage.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!":
/*!***********************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Csrc%5C%5Capp%5C%5Capp%5C%5Cuser-details%5C%5Cpage.js%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!
  \***********************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/app/user-details/page.js */ \"(rsc)/./src/app/app/user-details/page.js\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkUlM0ElNUMlNUNtZWdhZW5kLW5ldyU1QyU1Q3NyYyU1QyU1Q2FwcCU1QyU1Q2FwcCU1QyU1Q3VzZXItZGV0YWlscyU1QyU1Q3BhZ2UuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0Qmc2VydmVyPXRydWUhIiwibWFwcGluZ3MiOiJBQUFBLGdMQUEwRiIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiRTpcXFxcbWVnYWVuZC1uZXdcXFxcc3JjXFxcXGFwcFxcXFxhcHBcXFxcdXNlci1kZXRhaWxzXFxcXHBhZ2UuanNcIik7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Csrc%5C%5Capp%5C%5Capp%5C%5Cuser-details%5C%5Cpage.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-metadata-image-loader.js?type=favicon&segment=&basePath=&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js!./src/app/favicon.ico?__next_metadata__":
/*!**************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-metadata-image-loader.js?type=favicon&segment=&basePath=&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js!./src/app/favicon.ico?__next_metadata__ ***!
  \**************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var next_dist_lib_metadata_get_metadata_route__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/lib/metadata/get-metadata-route */ \"(rsc)/./node_modules/next/dist/lib/metadata/get-metadata-route.js\");\n/* harmony import */ var next_dist_lib_metadata_get_metadata_route__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_metadata_get_metadata_route__WEBPACK_IMPORTED_MODULE_0__);\n  \n\n  /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (async (props) => {\n    const imageData = {\"type\":\"image/x-icon\",\"sizes\":\"16x16\"}\n    const imageUrl = (0,next_dist_lib_metadata_get_metadata_route__WEBPACK_IMPORTED_MODULE_0__.fillMetadataSegment)(\".\", await props.params, \"favicon.ico\")\n\n    return [{\n      ...imageData,\n      url: imageUrl + \"\",\n    }]\n  });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LW1ldGFkYXRhLWltYWdlLWxvYWRlci5qcz90eXBlPWZhdmljb24mc2VnbWVudD0mYmFzZVBhdGg9JnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMhLi9zcmMvYXBwL2Zhdmljb24uaWNvP19fbmV4dF9tZXRhZGF0YV9fIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLEVBQWlGOztBQUVqRixFQUFFLGlFQUFlO0FBQ2pCLHVCQUF1QjtBQUN2QixxQkFBcUIsOEZBQW1COztBQUV4QztBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wiLCJzb3VyY2VzIjpbIkU6XFxtZWdhZW5kLW5ld1xcc3JjXFxhcHBcXGZhdmljb24uaWNvP19fbmV4dF9tZXRhZGF0YV9fIl0sInNvdXJjZXNDb250ZW50IjpbIiAgaW1wb3J0IHsgZmlsbE1ldGFkYXRhU2VnbWVudCB9IGZyb20gJ25leHQvZGlzdC9saWIvbWV0YWRhdGEvZ2V0LW1ldGFkYXRhLXJvdXRlJ1xuXG4gIGV4cG9ydCBkZWZhdWx0IGFzeW5jIChwcm9wcykgPT4ge1xuICAgIGNvbnN0IGltYWdlRGF0YSA9IHtcInR5cGVcIjpcImltYWdlL3gtaWNvblwiLFwic2l6ZXNcIjpcIjE2eDE2XCJ9XG4gICAgY29uc3QgaW1hZ2VVcmwgPSBmaWxsTWV0YWRhdGFTZWdtZW50KFwiLlwiLCBhd2FpdCBwcm9wcy5wYXJhbXMsIFwiZmF2aWNvbi5pY29cIilcblxuICAgIHJldHVybiBbe1xuICAgICAgLi4uaW1hZ2VEYXRhLFxuICAgICAgdXJsOiBpbWFnZVVybCArIFwiXCIsXG4gICAgfV1cbiAgfSJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-metadata-image-loader.js?type=favicon&segment=&basePath=&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js!./src/app/favicon.ico?__next_metadata__\n");

/***/ }),

/***/ "(rsc)/./src/app/app/user-details/page.js":
/*!******************************************!*\
  !*** ./src/app/app/user-details/page.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-server-dom-webpack/server */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-server-dom-webpack-server.js\");\n/* harmony import */ var react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,react_server_dom_webpack_server__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(\nfunction() { throw new Error(\"Attempted to call the default export of \\\"E:\\\\\\\\megaend-new\\\\\\\\src\\\\\\\\app\\\\\\\\app\\\\\\\\user-details\\\\\\\\page.js\\\" from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n\"default\",\n));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/app/user-details/page.js\n");

/***/ }),

/***/ "(rsc)/./src/app/globals.css":
/*!*****************************!*\
  !*** ./src/app/globals.css ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"6e1e3f658741\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2dsb2JhbHMuY3NzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSxjQUFjO0FBQzdCLElBQUksS0FBVSxFQUFFLEVBQXVCIiwic291cmNlcyI6WyJFOlxcbWVnYWVuZC1uZXdcXHNyY1xcYXBwXFxnbG9iYWxzLmNzcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIjZlMWUzZjY1ODc0MVwiXG5pZiAobW9kdWxlLmhvdCkgeyBtb2R1bGUuaG90LmFjY2VwdCgpIH1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/app/globals.css\n");

/***/ }),

/***/ "(rsc)/./src/app/layout.js":
/*!***************************!*\
  !*** ./src/app/layout.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RootLayout),\n/* harmony export */   metadata: () => (/* binding */ metadata)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_font_google_target_css_path_src_app_layout_js_import_Geist_arguments_variable_font_geist_sans_subsets_latin_variableName_geistSans___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/font/google/target.css?{\"path\":\"src\\\\app\\\\layout.js\",\"import\":\"Geist\",\"arguments\":[{\"variable\":\"--font-geist-sans\",\"subsets\":[\"latin\"]}],\"variableName\":\"geistSans\"} */ \"(rsc)/./node_modules/next/font/google/target.css?{\\\"path\\\":\\\"src\\\\\\\\app\\\\\\\\layout.js\\\",\\\"import\\\":\\\"Geist\\\",\\\"arguments\\\":[{\\\"variable\\\":\\\"--font-geist-sans\\\",\\\"subsets\\\":[\\\"latin\\\"]}],\\\"variableName\\\":\\\"geistSans\\\"}\");\n/* harmony import */ var next_font_google_target_css_path_src_app_layout_js_import_Geist_arguments_variable_font_geist_sans_subsets_latin_variableName_geistSans___WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_font_google_target_css_path_src_app_layout_js_import_Geist_arguments_variable_font_geist_sans_subsets_latin_variableName_geistSans___WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_font_google_target_css_path_src_app_layout_js_import_Geist_Mono_arguments_variable_font_geist_mono_subsets_latin_variableName_geistMono___WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/font/google/target.css?{\"path\":\"src\\\\app\\\\layout.js\",\"import\":\"Geist_Mono\",\"arguments\":[{\"variable\":\"--font-geist-mono\",\"subsets\":[\"latin\"]}],\"variableName\":\"geistMono\"} */ \"(rsc)/./node_modules/next/font/google/target.css?{\\\"path\\\":\\\"src\\\\\\\\app\\\\\\\\layout.js\\\",\\\"import\\\":\\\"Geist_Mono\\\",\\\"arguments\\\":[{\\\"variable\\\":\\\"--font-geist-mono\\\",\\\"subsets\\\":[\\\"latin\\\"]}],\\\"variableName\\\":\\\"geistMono\\\"}\");\n/* harmony import */ var next_font_google_target_css_path_src_app_layout_js_import_Geist_Mono_arguments_variable_font_geist_mono_subsets_latin_variableName_geistMono___WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_font_google_target_css_path_src_app_layout_js_import_Geist_Mono_arguments_variable_font_geist_mono_subsets_latin_variableName_geistMono___WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _globals_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./globals.css */ \"(rsc)/./src/app/globals.css\");\n\n\n\n\nconst metadata = {\n    title: \"Endgame\",\n    description: \"Guess number & win\"\n};\nfunction RootLayout({ children }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"html\", {\n        lang: \"en\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"body\", {\n            className: `${(next_font_google_target_css_path_src_app_layout_js_import_Geist_arguments_variable_font_geist_sans_subsets_latin_variableName_geistSans___WEBPACK_IMPORTED_MODULE_2___default().variable)} ${(next_font_google_target_css_path_src_app_layout_js_import_Geist_Mono_arguments_variable_font_geist_mono_subsets_latin_variableName_geistMono___WEBPACK_IMPORTED_MODULE_3___default().variable)} antialiased`,\n            children: children\n        }, void 0, false, {\n            fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\layout.js\",\n            lineNumber: 22,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\layout.js\",\n        lineNumber: 21,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2xheW91dC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBR01BO0FBS0FDO0FBUGlCO0FBWWhCLE1BQU1DLFdBQVc7SUFDdEJDLE9BQU87SUFDUEMsYUFBYTtBQUNmLEVBQUU7QUFFYSxTQUFTQyxXQUFXLEVBQUVDLFFBQVEsRUFBRTtJQUM3QyxxQkFDRSw4REFBQ0M7UUFBS0MsTUFBSztrQkFDVCw0RUFBQ0M7WUFDQ0MsV0FBVyxHQUFHViwwTEFBa0IsQ0FBQyxDQUFDLEVBQUVDLCtMQUFrQixDQUFDLFlBQVksQ0FBQztzQkFFbkVLOzs7Ozs7Ozs7OztBQUlUIiwic291cmNlcyI6WyJFOlxcbWVnYWVuZC1uZXdcXHNyY1xcYXBwXFxsYXlvdXQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR2Vpc3QsIEdlaXN0X01vbm8gfSBmcm9tIFwibmV4dC9mb250L2dvb2dsZVwiO1xyXG5pbXBvcnQgXCIuL2dsb2JhbHMuY3NzXCI7XHJcblxyXG5jb25zdCBnZWlzdFNhbnMgPSBHZWlzdCh7XHJcbiAgdmFyaWFibGU6IFwiLS1mb250LWdlaXN0LXNhbnNcIixcclxuICBzdWJzZXRzOiBbXCJsYXRpblwiXSxcclxufSk7XHJcblxyXG5jb25zdCBnZWlzdE1vbm8gPSBHZWlzdF9Nb25vKHtcclxuICB2YXJpYWJsZTogXCItLWZvbnQtZ2Vpc3QtbW9ub1wiLFxyXG4gIHN1YnNldHM6IFtcImxhdGluXCJdLFxyXG59KTtcclxuXHJcbmV4cG9ydCBjb25zdCBtZXRhZGF0YSA9IHtcclxuICB0aXRsZTogXCJFbmRnYW1lXCIsXHJcbiAgZGVzY3JpcHRpb246IFwiR3Vlc3MgbnVtYmVyICYgd2luXCIsXHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBSb290TGF5b3V0KHsgY2hpbGRyZW4gfSkge1xyXG4gIHJldHVybiAoXHJcbiAgICA8aHRtbCBsYW5nPVwiZW5cIj5cclxuICAgICAgPGJvZHlcclxuICAgICAgICBjbGFzc05hbWU9e2Ake2dlaXN0U2Fucy52YXJpYWJsZX0gJHtnZWlzdE1vbm8udmFyaWFibGV9IGFudGlhbGlhc2VkYH1cclxuICAgICAgPlxyXG4gICAgICAgIHtjaGlsZHJlbn1cclxuICAgICAgPC9ib2R5PlxyXG4gICAgPC9odG1sPlxyXG4gICk7XHJcbn1cclxuIl0sIm5hbWVzIjpbImdlaXN0U2FucyIsImdlaXN0TW9ubyIsIm1ldGFkYXRhIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsIlJvb3RMYXlvdXQiLCJjaGlsZHJlbiIsImh0bWwiLCJsYW5nIiwiYm9keSIsImNsYXNzTmFtZSIsInZhcmlhYmxlIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/app/layout.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cbuiltin%5C%5Cglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Chttp-access-fallback%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Clayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cmetadata%5C%5Casync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cmetadata%5C%5Cmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Crender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cmetadata%5C%5Cgenerate%5C%5Cicon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cnext-devtools%5C%5Cuserspace%5C%5Capp%5C%5Csegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cbuiltin%5C%5Cglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Chttp-access-fallback%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Clayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cmetadata%5C%5Casync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cmetadata%5C%5Cmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Crender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cmetadata%5C%5Cgenerate%5C%5Cicon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cnext-devtools%5C%5Cuserspace%5C%5Capp%5C%5Csegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/builtin/global-error.js */ \"(ssr)/./node_modules/next/dist/client/components/builtin/global-error.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-page.js */ \"(ssr)/./node_modules/next/dist/client/components/client-page.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-segment.js */ \"(ssr)/./node_modules/next/dist/client/components/client-segment.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/http-access-fallback/error-boundary.js */ \"(ssr)/./node_modules/next/dist/client/components/http-access-fallback/error-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/layout-router.js */ \"(ssr)/./node_modules/next/dist/client/components/layout-router.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/metadata/async-metadata.js */ \"(ssr)/./node_modules/next/dist/client/components/metadata/async-metadata.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/metadata/metadata-boundary.js */ \"(ssr)/./node_modules/next/dist/client/components/metadata/metadata-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/render-from-template-context.js */ \"(ssr)/./node_modules/next/dist/client/components/render-from-template-context.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/next/dist/lib/metadata/generate/icon-mark.js */ \"(ssr)/./node_modules/next/dist/lib/metadata/generate/icon-mark.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/next-devtools/userspace/app/segment-explorer-node.js */ \"(ssr)/./node_modules/next/dist/next-devtools/userspace/app/segment-explorer-node.js\", 23));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkUlM0ElNUMlNUNtZWdhZW5kLW5ldyU1QyU1Q25vZGVfbW9kdWxlcyU1QyU1Q25leHQlNUMlNUNkaXN0JTVDJTVDY2xpZW50JTVDJTVDY29tcG9uZW50cyU1QyU1Q2J1aWx0aW4lNUMlNUNnbG9iYWwtZXJyb3IuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyRSUzQSU1QyU1Q21lZ2FlbmQtbmV3JTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNjbGllbnQlNUMlNUNjb21wb25lbnRzJTVDJTVDY2xpZW50LXBhZ2UuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyRSUzQSU1QyU1Q21lZ2FlbmQtbmV3JTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNjbGllbnQlNUMlNUNjb21wb25lbnRzJTVDJTVDY2xpZW50LXNlZ21lbnQuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyRSUzQSU1QyU1Q21lZ2FlbmQtbmV3JTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNjbGllbnQlNUMlNUNjb21wb25lbnRzJTVDJTVDaHR0cC1hY2Nlc3MtZmFsbGJhY2slNUMlNUNlcnJvci1ib3VuZGFyeS5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjJFJTNBJTVDJTVDbWVnYWVuZC1uZXclNUMlNUNub2RlX21vZHVsZXMlNUMlNUNuZXh0JTVDJTVDZGlzdCU1QyU1Q2NsaWVudCU1QyU1Q2NvbXBvbmVudHMlNUMlNUNsYXlvdXQtcm91dGVyLmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkUlM0ElNUMlNUNtZWdhZW5kLW5ldyU1QyU1Q25vZGVfbW9kdWxlcyU1QyU1Q25leHQlNUMlNUNkaXN0JTVDJTVDY2xpZW50JTVDJTVDY29tcG9uZW50cyU1QyU1Q21ldGFkYXRhJTVDJTVDYXN5bmMtbWV0YWRhdGEuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyRSUzQSU1QyU1Q21lZ2FlbmQtbmV3JTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNjbGllbnQlNUMlNUNjb21wb25lbnRzJTVDJTVDbWV0YWRhdGElNUMlNUNtZXRhZGF0YS1ib3VuZGFyeS5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjJFJTNBJTVDJTVDbWVnYWVuZC1uZXclNUMlNUNub2RlX21vZHVsZXMlNUMlNUNuZXh0JTVDJTVDZGlzdCU1QyU1Q2NsaWVudCU1QyU1Q2NvbXBvbmVudHMlNUMlNUNyZW5kZXItZnJvbS10ZW1wbGF0ZS1jb250ZXh0LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkUlM0ElNUMlNUNtZWdhZW5kLW5ldyU1QyU1Q25vZGVfbW9kdWxlcyU1QyU1Q25leHQlNUMlNUNkaXN0JTVDJTVDbGliJTVDJTVDbWV0YWRhdGElNUMlNUNnZW5lcmF0ZSU1QyU1Q2ljb24tbWFyay5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjJFJTNBJTVDJTVDbWVnYWVuZC1uZXclNUMlNUNub2RlX21vZHVsZXMlNUMlNUNuZXh0JTVDJTVDZGlzdCU1QyU1Q25leHQtZGV2dG9vbHMlNUMlNUN1c2Vyc3BhY2UlNUMlNUNhcHAlNUMlNUNzZWdtZW50LWV4cGxvcmVyLW5vZGUuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0Qmc2VydmVyPXRydWUhIiwibWFwcGluZ3MiOiJBQUFBLHNQQUE0SDtBQUM1SDtBQUNBLG9PQUFrSDtBQUNsSDtBQUNBLDBPQUFxSDtBQUNySDtBQUNBLG9SQUEySTtBQUMzSTtBQUNBLHdPQUFvSDtBQUNwSDtBQUNBLDRQQUErSDtBQUMvSDtBQUNBLGtRQUFrSTtBQUNsSTtBQUNBLHNRQUFtSTtBQUNuSTtBQUNBLGtPQUFxSDtBQUNySDtBQUNBLDRRQUF1SSIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiRTpcXFxcbWVnYWVuZC1uZXdcXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxjbGllbnRcXFxcY29tcG9uZW50c1xcXFxidWlsdGluXFxcXGdsb2JhbC1lcnJvci5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiRTpcXFxcbWVnYWVuZC1uZXdcXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxjbGllbnRcXFxcY29tcG9uZW50c1xcXFxjbGllbnQtcGFnZS5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiRTpcXFxcbWVnYWVuZC1uZXdcXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxjbGllbnRcXFxcY29tcG9uZW50c1xcXFxjbGllbnQtc2VnbWVudC5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiRTpcXFxcbWVnYWVuZC1uZXdcXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxjbGllbnRcXFxcY29tcG9uZW50c1xcXFxodHRwLWFjY2Vzcy1mYWxsYmFja1xcXFxlcnJvci1ib3VuZGFyeS5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiRTpcXFxcbWVnYWVuZC1uZXdcXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxjbGllbnRcXFxcY29tcG9uZW50c1xcXFxsYXlvdXQtcm91dGVyLmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJFOlxcXFxtZWdhZW5kLW5ld1xcXFxub2RlX21vZHVsZXNcXFxcbmV4dFxcXFxkaXN0XFxcXGNsaWVudFxcXFxjb21wb25lbnRzXFxcXG1ldGFkYXRhXFxcXGFzeW5jLW1ldGFkYXRhLmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJFOlxcXFxtZWdhZW5kLW5ld1xcXFxub2RlX21vZHVsZXNcXFxcbmV4dFxcXFxkaXN0XFxcXGNsaWVudFxcXFxjb21wb25lbnRzXFxcXG1ldGFkYXRhXFxcXG1ldGFkYXRhLWJvdW5kYXJ5LmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJFOlxcXFxtZWdhZW5kLW5ld1xcXFxub2RlX21vZHVsZXNcXFxcbmV4dFxcXFxkaXN0XFxcXGNsaWVudFxcXFxjb21wb25lbnRzXFxcXHJlbmRlci1mcm9tLXRlbXBsYXRlLWNvbnRleHQuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkU6XFxcXG1lZ2FlbmQtbmV3XFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGRpc3RcXFxcbGliXFxcXG1ldGFkYXRhXFxcXGdlbmVyYXRlXFxcXGljb24tbWFyay5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiRTpcXFxcbWVnYWVuZC1uZXdcXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxuZXh0LWRldnRvb2xzXFxcXHVzZXJzcGFjZVxcXFxhcHBcXFxcc2VnbWVudC1leHBsb3Jlci1ub2RlLmpzXCIpO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cbuiltin%5C%5Cglobal-error.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Chttp-access-fallback%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Clayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cmetadata%5C%5Casync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cmetadata%5C%5Cmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Crender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cmetadata%5C%5Cgenerate%5C%5Cicon-mark.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cnext-devtools%5C%5Cuserspace%5C%5Capp%5C%5Csegment-explorer-node.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cfont%5C%5Cgoogle%5C%5Ctarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%5C%5C%5C%5Capp%5C%5C%5C%5Clayout.js%5C%22%2C%5C%22import%5C%22%3A%5C%22Geist%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22variable%5C%22%3A%5C%22--font-geist-sans%5C%22%2C%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistSans%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cfont%5C%5Cgoogle%5C%5Ctarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%5C%5C%5C%5Capp%5C%5C%5C%5Clayout.js%5C%22%2C%5C%22import%5C%22%3A%5C%22Geist_Mono%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22variable%5C%22%3A%5C%22--font-geist-mono%5C%22%2C%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistMono%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Csrc%5C%5Capp%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cfont%5C%5Cgoogle%5C%5Ctarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%5C%5C%5C%5Capp%5C%5C%5C%5Clayout.js%5C%22%2C%5C%22import%5C%22%3A%5C%22Geist%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22variable%5C%22%3A%5C%22--font-geist-sans%5C%22%2C%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistSans%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Cnode_modules%5C%5Cnext%5C%5Cfont%5C%5Cgoogle%5C%5Ctarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%5C%5C%5C%5Capp%5C%5C%5C%5Clayout.js%5C%22%2C%5C%22import%5C%22%3A%5C%22Geist_Mono%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22variable%5C%22%3A%5C%22--font-geist-mono%5C%22%2C%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22geistMono%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Csrc%5C%5Capp%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Csrc%5C%5Capp%5C%5Capp%5C%5Cuser-details%5C%5Cpage.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!":
/*!***********************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Csrc%5C%5Capp%5C%5Capp%5C%5Cuser-details%5C%5Cpage.js%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!
  \***********************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/app/user-details/page.js */ \"(ssr)/./src/app/app/user-details/page.js\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkUlM0ElNUMlNUNtZWdhZW5kLW5ldyU1QyU1Q3NyYyU1QyU1Q2FwcCU1QyU1Q2FwcCU1QyU1Q3VzZXItZGV0YWlscyU1QyU1Q3BhZ2UuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0Qmc2VydmVyPXRydWUhIiwibWFwcGluZ3MiOiJBQUFBLGdMQUEwRiIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiRTpcXFxcbWVnYWVuZC1uZXdcXFxcc3JjXFxcXGFwcFxcXFxhcHBcXFxcdXNlci1kZXRhaWxzXFxcXHBhZ2UuanNcIik7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22E%3A%5C%5Cmegaend-new%5C%5Csrc%5C%5Capp%5C%5Capp%5C%5Cuser-details%5C%5Cpage.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/./src/app/Components/Layout/index.js":
/*!********************************************!*\
  !*** ./src/app/Components/Layout/index.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Layout)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/navigation */ \"(ssr)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var _Navbar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Navbar */ \"(ssr)/./src/app/Components/Navbar/index.js\");\n/* harmony import */ var firebase_auth__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! firebase/auth */ \"(ssr)/./node_modules/firebase/auth/dist/index.mjs\");\n/* harmony import */ var _firebase__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/firebase */ \"(ssr)/./src/firebase.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\n\n\n\n // adjust this import to your setup\nfunction Layout({ children }) {\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    const auth = (0,firebase_auth__WEBPACK_IMPORTED_MODULE_4__.getAuth)(_firebase__WEBPACK_IMPORTED_MODULE_5__[\"default\"]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Layout.useEffect\": ()=>{\n            const unsubscribe = (0,firebase_auth__WEBPACK_IMPORTED_MODULE_4__.onAuthStateChanged)(auth, {\n                \"Layout.useEffect.unsubscribe\": (user)=>{\n                    if (!user) {\n                        router.push('/public/login');\n                    }\n                }\n            }[\"Layout.useEffect.unsubscribe\"]);\n            return ({\n                \"Layout.useEffect\": ()=>unsubscribe()\n            })[\"Layout.useEffect\"];\n        }\n    }[\"Layout.useEffect\"], [\n        auth,\n        router\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Navbar__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {}, void 0, false, {\n                fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\Components\\\\Layout\\\\index.js\",\n                lineNumber: 25,\n                columnNumber: 7\n            }, this),\n            children\n        ]\n    }, void 0, true);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvYXBwL0NvbXBvbmVudHMvTGF5b3V0L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFFeUM7QUFDRztBQUNiO0FBQzZCO0FBQ3ZCLENBQUMsbUNBQW1DO0FBRTFELFNBQVNPLE9BQU8sRUFBRUMsUUFBUSxFQUFFO0lBQ3pDLE1BQU1DLFNBQVNQLDBEQUFTQTtJQUN4QixNQUFNUSxPQUFPTixzREFBT0EsQ0FBQ0UsaURBQVdBO0lBRWhDTCxnREFBU0E7NEJBQUM7WUFDUixNQUFNVSxjQUFjTixpRUFBa0JBLENBQUNLO2dEQUFNLENBQUNFO29CQUM1QyxJQUFJLENBQUNBLE1BQU07d0JBQ1RILE9BQU9JLElBQUksQ0FBQztvQkFDZDtnQkFDRjs7WUFFQTtvQ0FBTyxJQUFNRjs7UUFDZjsyQkFBRztRQUFDRDtRQUFNRDtLQUFPO0lBRWpCLHFCQUNFOzswQkFDRSw4REFBQ04sK0NBQU1BOzs7OztZQUNOSzs7O0FBR1AiLCJzb3VyY2VzIjpbIkU6XFxtZWdhZW5kLW5ld1xcc3JjXFxhcHBcXENvbXBvbmVudHNcXExheW91dFxcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XHJcblxyXG5pbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyB1c2VSb3V0ZXIgfSBmcm9tICduZXh0L25hdmlnYXRpb24nO1xyXG5pbXBvcnQgTmF2YmFyIGZyb20gJy4uL05hdmJhcic7XHJcbmltcG9ydCB7IGdldEF1dGgsIG9uQXV0aFN0YXRlQ2hhbmdlZCB9IGZyb20gJ2ZpcmViYXNlL2F1dGgnO1xyXG5pbXBvcnQgZmlyZWJhc2VBcHAgZnJvbSAnQC9maXJlYmFzZSc7IC8vIGFkanVzdCB0aGlzIGltcG9ydCB0byB5b3VyIHNldHVwXHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBMYXlvdXQoeyBjaGlsZHJlbiB9KSB7XHJcbiAgY29uc3Qgcm91dGVyID0gdXNlUm91dGVyKCk7XHJcbiAgY29uc3QgYXV0aCA9IGdldEF1dGgoZmlyZWJhc2VBcHApO1xyXG5cclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgY29uc3QgdW5zdWJzY3JpYmUgPSBvbkF1dGhTdGF0ZUNoYW5nZWQoYXV0aCwgKHVzZXIpID0+IHtcclxuICAgICAgaWYgKCF1c2VyKSB7XHJcbiAgICAgICAgcm91dGVyLnB1c2goJy9wdWJsaWMvbG9naW4nKTsgXHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIHJldHVybiAoKSA9PiB1bnN1YnNjcmliZSgpO1xyXG4gIH0sIFthdXRoLCByb3V0ZXJdKTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDw+XHJcbiAgICAgIDxOYXZiYXIgLz5cclxuICAgICAge2NoaWxkcmVufVxyXG4gICAgPC8+XHJcbiAgKTtcclxufVxyXG4iXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VFZmZlY3QiLCJ1c2VSb3V0ZXIiLCJOYXZiYXIiLCJnZXRBdXRoIiwib25BdXRoU3RhdGVDaGFuZ2VkIiwiZmlyZWJhc2VBcHAiLCJMYXlvdXQiLCJjaGlsZHJlbiIsInJvdXRlciIsImF1dGgiLCJ1bnN1YnNjcmliZSIsInVzZXIiLCJwdXNoIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./src/app/Components/Layout/index.js\n");

/***/ }),

/***/ "(ssr)/./src/app/Components/Navbar/index.js":
/*!********************************************!*\
  !*** ./src/app/Components/Navbar/index.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Navbar)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/link */ \"(ssr)/./node_modules/next/dist/client/app-dir/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _barrel_optimize_names_Menu_lucide_react__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! __barrel_optimize__?names=Menu!=!lucide-react */ \"(ssr)/./node_modules/lucide-react/dist/esm/icons/menu.js\");\n/* harmony import */ var firebase_auth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! firebase/auth */ \"(ssr)/./node_modules/firebase/auth/dist/index.mjs\");\n/* harmony import */ var _firebase__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/firebase */ \"(ssr)/./src/firebase.js\");\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! firebase/firestore */ \"(ssr)/./node_modules/firebase/firestore/dist/index.mjs\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/navigation */ \"(ssr)/./node_modules/next/dist/api/navigation.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\n\n\n\n\n\n\nfunction Navbar() {\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_6__.useRouter)();\n    const pathname = (0,next_navigation__WEBPACK_IMPORTED_MODULE_6__.usePathname)();\n    const [isOpen, setIsOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [walletBalance, setWalletBalance] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [role, setRole] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('user'); // default role\n    const auth = (0,firebase_auth__WEBPACK_IMPORTED_MODULE_3__.getAuth)(_firebase__WEBPACK_IMPORTED_MODULE_4__[\"default\"]);\n    const db = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_5__.getFirestore)(_firebase__WEBPACK_IMPORTED_MODULE_4__[\"default\"]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Navbar.useEffect\": ()=>{\n            const unsubscribe = (0,firebase_auth__WEBPACK_IMPORTED_MODULE_3__.onAuthStateChanged)(auth, {\n                \"Navbar.useEffect.unsubscribe\": async (currentUser)=>{\n                    setUser(currentUser);\n                    if (currentUser) {\n                        console.log('Logged in as:', currentUser.email);\n                        const userRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_5__.doc)(db, 's_users', currentUser.uid);\n                        const userSnap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_5__.getDoc)(userRef);\n                        let detectedRole = 'user';\n                        if (userSnap.exists()) {\n                            const data = userSnap.data();\n                            detectedRole = data.role || 'user';\n                            setRole(detectedRole);\n                            console.log('Detected role:', detectedRole);\n                        }\n                        const collectionName = detectedRole === 'admin' ? 's_adminwallets' : 's_subwallets';\n                        const walletRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_5__.doc)(db, collectionName, currentUser.uid);\n                        const walletSnap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_5__.getDoc)(walletRef);\n                        if (walletSnap.exists()) {\n                            const balance = walletSnap.data().balance ?? 0;\n                            setWalletBalance(balance);\n                            console.log(`Wallet found in \"${collectionName}\" with balance:`, balance);\n                        } else {\n                            setWalletBalance(0);\n                            console.warn(`No wallet found in \"${collectionName}\" for UID:`, currentUser.uid);\n                        }\n                    } else {\n                        setWalletBalance(null);\n                        setRole('user');\n                    }\n                }\n            }[\"Navbar.useEffect.unsubscribe\"]);\n            return ({\n                \"Navbar.useEffect\": ()=>unsubscribe()\n            })[\"Navbar.useEffect\"];\n        }\n    }[\"Navbar.useEffect\"], []);\n    const handleLogout = async ()=>{\n        await (0,firebase_auth__WEBPACK_IMPORTED_MODULE_3__.signOut)(auth);\n        router.push('/public/login');\n    };\n    const isActive = (href)=>pathname === href;\n    // Block subadmin from accessing admin-only pages\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Navbar.useEffect\": ()=>{\n            if (role === 'subadmin' && pathname.includes('/admin/') && !pathname.includes('/admin/user-bets') && !pathname.includes('/admin/wallet')) {\n                router.push('/app/play');\n            }\n        }\n    }[\"Navbar.useEffect\"], [\n        role\n    ]);\n    const linkClass = (href)=>`text-sm font-semibold transition ${isActive(href) ? 'text-yellow-400' : 'text-white hover:text-yellow-400'}`;\n    const renderLinks = ()=>{\n        const userLinks = /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                    href: \"/app/play\",\n                    className: linkClass('/app/play'),\n                    children: \"Play\"\n                }, void 0, false, {\n                    fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\Components\\\\Navbar\\\\index.js\",\n                    lineNumber: 86,\n                    columnNumber: 7\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                    href: \"/app/add-balance\",\n                    className: linkClass('/app/add-balance'),\n                    children: \"Balance\"\n                }, void 0, false, {\n                    fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\Components\\\\Navbar\\\\index.js\",\n                    lineNumber: 87,\n                    columnNumber: 7\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                    href: \"/app/bet-history\",\n                    className: linkClass('/app/bet-history'),\n                    children: \"Bet History\"\n                }, void 0, false, {\n                    fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\Components\\\\Navbar\\\\index.js\",\n                    lineNumber: 88,\n                    columnNumber: 7\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                    href: \"/app/results\",\n                    className: linkClass('/app/results'),\n                    children: \"Results\"\n                }, void 0, false, {\n                    fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\Components\\\\Navbar\\\\index.js\",\n                    lineNumber: 89,\n                    columnNumber: 7\n                }, this)\n            ]\n        }, void 0, true);\n        const subAdminLinks = /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                    href: \"/app/results\",\n                    className: linkClass('/app/results'),\n                    children: \"Results\"\n                }, void 0, false, {\n                    fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\Components\\\\Navbar\\\\index.js\",\n                    lineNumber: 95,\n                    columnNumber: 7\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                    href: \"/app/admin/wallet\",\n                    className: linkClass('/app/admin/wallet'),\n                    children: \"Add Balance\"\n                }, void 0, false, {\n                    fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\Components\\\\Navbar\\\\index.js\",\n                    lineNumber: 96,\n                    columnNumber: 7\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                    href: \"/app/admin/user-bets\",\n                    className: linkClass('/app/admin/user-bets'),\n                    children: \"User Bets\"\n                }, void 0, false, {\n                    fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\Components\\\\Navbar\\\\index.js\",\n                    lineNumber: 97,\n                    columnNumber: 7\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                    href: \"/app/user-details\",\n                    className: linkClass('/app/user-details'),\n                    children: \"User Details\"\n                }, void 0, false, {\n                    fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\Components\\\\Navbar\\\\index.js\",\n                    lineNumber: 98,\n                    columnNumber: 7\n                }, this)\n            ]\n        }, void 0, true);\n        const subAdminUserLinks = /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                    href: \"/app/add-balance\",\n                    className: linkClass('/app/add-balance'),\n                    children: \"Balance\"\n                }, void 0, false, {\n                    fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\Components\\\\Navbar\\\\index.js\",\n                    lineNumber: 104,\n                    columnNumber: 7\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                    href: \"/app/sub-admin/add-users\",\n                    className: linkClass('/app/sub-admin/add-users'),\n                    children: \"Add Users\"\n                }, void 0, false, {\n                    fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\Components\\\\Navbar\\\\index.js\",\n                    lineNumber: 105,\n                    columnNumber: 7\n                }, this)\n            ]\n        }, void 0, true);\n        const adminLinks = /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n            children: [\n                subAdminLinks,\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                    href: \"/app/admin/declare-result\",\n                    className: linkClass('/app/admin/declare-result'),\n                    children: \"Declare Result\"\n                }, void 0, false, {\n                    fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\Components\\\\Navbar\\\\index.js\",\n                    lineNumber: 112,\n                    columnNumber: 7\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                    href: \"/app/admin/sub-users\",\n                    className: linkClass('/app/admin/sub-users'),\n                    children: \"Add Sub-User\"\n                }, void 0, false, {\n                    fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\Components\\\\Navbar\\\\index.js\",\n                    lineNumber: 113,\n                    columnNumber: 7\n                }, this)\n            ]\n        }, void 0, true);\n        if (role === 'admin') return adminLinks;\n        if (role === 'subadmin') return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n            children: [\n                subAdminLinks,\n                subAdminUserLinks\n            ]\n        }, void 0, true);\n        return userLinks;\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"nav\", {\n        className: \"bg-gray-800 p-4 shadow-md\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"max-w-7xl mx-auto flex justify-between items-center\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                        href: \"/app/play\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-white font-bold text-lg hover:text-yellow-400 transition\",\n                            children: \"Shillong Teer\"\n                        }, void 0, false, {\n                            fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\Components\\\\Navbar\\\\index.js\",\n                            lineNumber: 134,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\Components\\\\Navbar\\\\index.js\",\n                        lineNumber: 133,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: ()=>setIsOpen(!isOpen),\n                        className: \"text-white md:hidden\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Menu_lucide_react__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n                            size: 24\n                        }, void 0, false, {\n                            fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\Components\\\\Navbar\\\\index.js\",\n                            lineNumber: 141,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\Components\\\\Navbar\\\\index.js\",\n                        lineNumber: 140,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"hidden md:flex space-x-6 items-center\",\n                        children: [\n                            renderLinks(),\n                            user && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"text-yellow-400 text-sm font-semibold\",\n                                children: [\n                                    \"₹\",\n                                    walletBalance?.toFixed(2)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\Components\\\\Navbar\\\\index.js\",\n                                lineNumber: 148,\n                                columnNumber: 13\n                            }, this),\n                            !user ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                        href: \"/public/login\",\n                                        className: linkClass('/public/login'),\n                                        children: \"Login\"\n                                    }, void 0, false, {\n                                        fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\Components\\\\Navbar\\\\index.js\",\n                                        lineNumber: 154,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                        href: \"/public/signup\",\n                                        className: linkClass('/public/signup'),\n                                        children: \"Signup\"\n                                    }, void 0, false, {\n                                        fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\Components\\\\Navbar\\\\index.js\",\n                                        lineNumber: 155,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: handleLogout,\n                                className: \"text-white text-sm font-semibold hover:text-yellow-400 bg-red-600 px-3 py-1 rounded\",\n                                children: \"Logout\"\n                            }, void 0, false, {\n                                fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\Components\\\\Navbar\\\\index.js\",\n                                lineNumber: 158,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\Components\\\\Navbar\\\\index.js\",\n                        lineNumber: 145,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\Components\\\\Navbar\\\\index.js\",\n                lineNumber: 131,\n                columnNumber: 7\n            }, this),\n            isOpen && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"md:hidden mt-4 flex flex-col space-y-2\",\n                children: [\n                    renderLinks(),\n                    user && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"text-yellow-400 text-sm font-semibold\",\n                        children: [\n                            \"Wallet: ₹\",\n                            walletBalance?.toFixed(2)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\Components\\\\Navbar\\\\index.js\",\n                        lineNumber: 173,\n                        columnNumber: 13\n                    }, this),\n                    !user ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                href: \"/public/login\",\n                                className: linkClass('/public/login'),\n                                children: \"Login\"\n                            }, void 0, false, {\n                                fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\Components\\\\Navbar\\\\index.js\",\n                                lineNumber: 179,\n                                columnNumber: 15\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                href: \"/public/signup\",\n                                className: linkClass('/public/signup'),\n                                children: \"Signup\"\n                            }, void 0, false, {\n                                fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\Components\\\\Navbar\\\\index.js\",\n                                lineNumber: 180,\n                                columnNumber: 15\n                            }, this)\n                        ]\n                    }, void 0, true) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: handleLogout,\n                        className: \"text-white text-sm font-semibold hover:text-yellow-400 bg-red-600 px-3 py-1 rounded text-left\",\n                        children: \"Logout\"\n                    }, void 0, false, {\n                        fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\Components\\\\Navbar\\\\index.js\",\n                        lineNumber: 183,\n                        columnNumber: 13\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\Components\\\\Navbar\\\\index.js\",\n                lineNumber: 170,\n                columnNumber: 9\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\Components\\\\Navbar\\\\index.js\",\n        lineNumber: 130,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/app/Components/Navbar/index.js\n");

/***/ }),

/***/ "(ssr)/./src/app/app/user-details/page.js":
/*!******************************************!*\
  !*** ./src/app/app/user-details/page.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Page)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _app_Components_Layout__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/app/Components/Layout */ \"(ssr)/./src/app/Components/Layout/index.js\");\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! firebase/firestore */ \"(ssr)/./node_modules/firebase/firestore/dist/index.mjs\");\n/* harmony import */ var firebase_auth__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! firebase/auth */ \"(ssr)/./node_modules/firebase/auth/dist/index.mjs\");\n/* harmony import */ var _firebase__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/firebase */ \"(ssr)/./src/firebase.js\");\n// 'use client';\n// import React, { useEffect, useState } from 'react';\n// import {\n//   getFirestore,\n//   collection,\n//   getDocs,\n//   query,\n//   where,\n// } from 'firebase/firestore';\n// import firebaseApp from '@/firebase';\n// import Layout from '@/app/Components/Layout';\n// export default function AdminUserWalletsPage() {\n//   const db = getFirestore(firebaseApp);\n//   const [users, setUsers] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [search, setSearch] = useState('');\n//   useEffect(() => {\n//     fetchUserWalletData();\n//   }, []);\n//   const fetchUserWalletData = async () => {\n//     setLoading(true);\n//     try {\n//       const walletsSnap = await getDocs(collection(db, 'wallets'));\n//       const wallets = walletsSnap.docs.map((doc) => ({\n//         uid: doc.id,\n//         balance: doc.data().balance || 0,\n//         email: doc.data().email || '',\n//       }));\n//       const depositSnap = await getDocs(\n//         query(collection(db, 'depositRequests'), where('status', '==', 'approved'))\n//       );\n//       const withdrawSnap = await getDocs(\n//         query(collection(db, 'withdrawRequests'), where('status', '==', 'approved'))\n//       );\n//       const depositMap = {};\n//       depositSnap.forEach((doc) => {\n//         const data = doc.data();\n//         if (!depositMap[data.uid]) depositMap[data.uid] = 0;\n//         depositMap[data.uid] += data.amount || 0;\n//       });\n//       const withdrawMap = {};\n//       withdrawSnap.forEach((doc) => {\n//         const data = doc.data();\n//         if (!withdrawMap[data.uid]) withdrawMap[data.uid] = 0;\n//         withdrawMap[data.uid] += data.amount || 0;\n//       });\n//       const finalUsers = wallets.map((user) => ({\n//         ...user,\n//         totalDeposited: depositMap[user.uid] || 0,\n//         totalWithdrawn: withdrawMap[user.uid] || 0,\n//       }));\n//       setUsers(finalUsers);\n//     } catch (error) {\n//       console.error('Error fetching user wallet data:', error);\n//       alert('Error loading wallet data.');\n//     }\n//     setLoading(false);\n//   };\n//   const exportToCSV = () => {\n//     const headers = ['Email', 'Balance', 'Deposited', 'Withdrawn'];\n//     const rows = users.map(u => [u.email, u.balance, u.totalDeposited, u.totalWithdrawn]);\n//     const csvContent = [headers, ...rows].map(r => r.join(',')).join('\\n');\n//     const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n//     const url = URL.createObjectURL(blob);\n//     const link = document.createElement('a');\n//     link.setAttribute('href', url);\n//     link.setAttribute('download', 'user_wallets.csv');\n//     document.body.appendChild(link);\n//     link.click();\n//     document.body.removeChild(link);\n//   };\n//   const filteredUsers = users.filter(u =>\n//     u.email.toLowerCase().includes(search.toLowerCase())\n//   );\n//   return (\n//     <Layout>\n//       <div className=\"min-h-screen bg-gray-900 text-white p-8\">\n//         <div className=\"max-w-5xl mx-auto\">\n//           <h1 className=\"text-3xl font-bold mb-6\">Admin: User Wallet Overview</h1>\n//           <div className=\"flex items-center gap-4 mb-6\">\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search by email...\"\n//               value={search}\n//               onChange={(e) => setSearch(e.target.value)}\n//               className=\"px-4 py-2 rounded bg-gray-800 border border-gray-600 focus:outline-none\"\n//             />\n//             <button\n//               onClick={exportToCSV}\n//               className=\"px-4 py-2 bg-yellow-500 hover:bg-yellow-600 text-black rounded font-semibold\"\n//             >\n//               Export CSV\n//             </button>\n//           </div>\n//           {loading ? (\n//             <p className=\"text-yellow-300\">Loading...</p>\n//           ) : filteredUsers.length === 0 ? (\n//             <p className=\"text-gray-400\">No users found.</p>\n//           ) : (\n//             <div className=\"overflow-x-auto bg-gray-800 rounded-lg shadow-xl\">\n//               <table className=\"w-full text-left table-auto\">\n//                 <thead className=\"bg-gray-700 text-sm uppercase text-gray-300\">\n//                   <tr>\n//                     <th className=\"p-3\">Email</th>\n//                     <th className=\"p-3\">Balance</th>\n//                     <th className=\"p-3\">Deposited</th>\n//                     <th className=\"p-3\">Withdrawn</th>\n//                   </tr>\n//                 </thead>\n//                 <tbody>\n//                   {filteredUsers.map((user) => (\n//                     <tr key={user.uid} className=\"border-t border-gray-700\">\n//                       <td className=\"p-3\">{user.email || 'N/A'}</td>\n//                       <td className=\"p-3\">₹{user.balance}</td>\n//                       <td className=\"p-3\">₹{user.totalDeposited}</td>\n//                       <td className=\"p-3\">₹{user.totalWithdrawn}</td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             </div>\n//           )}\n//         </div>\n//       </div>\n//     </Layout>\n//   );\n// }\n// 'use client';\n// import React, { useEffect, useState } from 'react';\n// import {\n//   getFirestore,\n//   collection,\n//   getDocs,\n//   query,\n//   where,\n//   Timestamp,\n// } from 'firebase/firestore';\n// import firebaseApp from '@/firebase';\n// import Layout from '@/app/Components/Layout';\n// export default function AdminUserWalletsPage() {\n//   const db = getFirestore(firebaseApp);\n//   const [users, setUsers] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [search, setSearch] = useState('');\n//   useEffect(() => {\n//     fetchUserWalletData();\n//   }, []);\n//   const fetchUserWalletData = async () => {\n//     setLoading(true);\n//     try {\n//       const walletsSnap = await getDocs(collection(db, 'wallets'));\n//       const wallets = walletsSnap.docs.map((doc) => ({\n//         uid: doc.id,\n//         balance: doc.data().balance || 0,\n//         email: doc.data().email || '',\n//       }));\n//       const oneWeekAgo = Timestamp.fromDate(new Date(Date.now() - 7 * 24 * 60 * 60 * 1000));\n//       const depositSnap = await getDocs(\n//         query(\n//           collection(db, 'depositRequests'),\n//           where('status', '==', 'approved'),\n//           where('createdAt', '>=', oneWeekAgo)\n//         )\n//       );\n//       const withdrawSnap = await getDocs(\n//         query(\n//           collection(db, 'withdrawRequests'),\n//           where('status', '==', 'approved'),\n//           where('createdAt', '>=', oneWeekAgo)\n//         )\n//       );\n//       const depositMap = {};\n//       depositSnap.forEach((doc) => {\n//         const data = doc.data();\n//         if (!depositMap[data.uid]) depositMap[data.uid] = 0;\n//         depositMap[data.uid] += data.amount || 0;\n//       });\n//       const withdrawMap = {};\n//       withdrawSnap.forEach((doc) => {\n//         const data = doc.data();\n//         if (!withdrawMap[data.uid]) withdrawMap[data.uid] = 0;\n//         withdrawMap[data.uid] += data.amount || 0;\n//       });\n//       const finalUsers = wallets.map((user) => ({\n//         ...user,\n//         totalDeposited: depositMap[user.uid] || 0,\n//         totalWithdrawn: withdrawMap[user.uid] || 0,\n//       }));\n//       setUsers(finalUsers);\n//     } catch (error) {\n//       console.error('Error fetching user wallet data:', error);\n//       alert('Error loading wallet data.');\n//     }\n//     setLoading(false);\n//   };\n//   const exportToCSV = () => {\n//     const headers = ['Email', 'Balance', 'Deposited (7 days)', 'Withdrawn (7 days)'];\n//     const rows = users.map(u => [u.email, u.balance, u.totalDeposited, u.totalWithdrawn]);\n//     const csvContent = [headers, ...rows].map(r => r.join(',')).join('\\n');\n//     const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n//     const url = URL.createObjectURL(blob);\n//     const link = document.createElement('a');\n//     link.setAttribute('href', url);\n//     link.setAttribute('download', 'user_wallets.csv');\n//     document.body.appendChild(link);\n//     link.click();\n//     document.body.removeChild(link);\n//   };\n//   const filteredUsers = users.filter(u =>\n//     u.email.toLowerCase().includes(search.toLowerCase())\n//   );\n//   return (\n//     <Layout>\n//       <div className=\"min-h-screen bg-gray-900 text-white p-8\">\n//         <div className=\"max-w-5xl mx-auto\">\n//           <h1 className=\"text-3xl font-bold mb-6\">Admin: User Wallet Overview</h1>\n//           <div className=\"flex items-center gap-4 mb-6\">\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search by email...\"\n//               value={search}\n//               onChange={(e) => setSearch(e.target.value)}\n//               className=\"px-4 py-2 rounded bg-gray-800 border border-gray-600 focus:outline-none\"\n//             />\n//             <button\n//               onClick={exportToCSV}\n//               className=\"px-4 py-2 bg-yellow-500 hover:bg-yellow-600 text-black rounded font-semibold\"\n//             >\n//               Export CSV\n//             </button>\n//           </div>\n//           {loading ? (\n//             <p className=\"text-yellow-300\">Loading...</p>\n//           ) : filteredUsers.length === 0 ? (\n//             <p className=\"text-gray-400\">No users found.</p>\n//           ) : (\n//             <div className=\"overflow-x-auto bg-gray-800 rounded-lg shadow-xl\">\n//               <table className=\"w-full text-left table-auto\">\n//                 <thead className=\"bg-gray-700 text-sm uppercase text-gray-300\">\n//                   <tr>\n//                     <th className=\"p-3\">Email</th>\n//                     <th className=\"p-3\">Balance</th>\n//                     <th className=\"p-3\">Deposited (7d)</th>\n//                     <th className=\"p-3\">Withdrawn (7d)</th>\n//                   </tr>\n//                 </thead>\n//                 <tbody>\n//                   {filteredUsers.map((user) => (\n//                     <tr key={user.uid} className=\"border-t border-gray-700\">\n//                       <td className=\"p-3\">{user.email || 'N/A'}</td>\n//                       <td className=\"p-3\">₹{user.balance}</td>\n//                       <td className=\"p-3\">₹{user.totalDeposited}</td>\n//                       <td className=\"p-3\">₹{user.totalWithdrawn}</td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             </div>\n//           )}\n//         </div>\n//       </div>\n//     </Layout>\n//   );\n// }\n// 'use client';\n// import React, { useEffect, useState } from 'react';\n// import {\n//   getFirestore,\n//   collection,\n//   getDocs,\n//   query,\n//   where,\n//   Timestamp,\n// } from 'firebase/firestore';\n// import firebaseApp from '@/firebase';\n// import Layout from '@/app/Components/Layout';\n// export default function AdminUserWalletsPage() {\n//   const db = getFirestore(firebaseApp);\n//   const [users, setUsers] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [search, setSearch] = useState('');\n//   const [selectedUser, setSelectedUser] = useState(null);\n//   const [history, setHistory] = useState({ deposits: [], withdrawals: [] });\n//   const [historyLoading, setHistoryLoading] = useState(false);\n//   useEffect(() => {\n//     fetchUserWalletData();\n//   }, []);\n//   const fetchUserWalletData = async () => {\n//     setLoading(true);\n//     try {\n//       const walletsSnap = await getDocs(collection(db, 'wallets'));\n//       const wallets = walletsSnap.docs.map((doc) => ({\n//         uid: doc.id,\n//         balance: doc.data().balance || 0,\n//         email: doc.data().email || '',\n//       }));\n//       const oneWeekAgo = Timestamp.fromDate(new Date(Date.now() - 7 * 24 * 60 * 60 * 1000));\n//       const depositSnap = await getDocs(\n//         query(\n//           collection(db, 'depositRequests'),\n//           where('status', '==', 'approved'),\n//           where('createdAt', '>=', oneWeekAgo)\n//         )\n//       );\n//       const withdrawSnap = await getDocs(\n//         query(\n//           collection(db, 'withdrawRequests'),\n//           where('status', '==', 'approved'),\n//           where('createdAt', '>=', oneWeekAgo)\n//         )\n//       );\n//       const depositMap = {};\n//       depositSnap.forEach((doc) => {\n//         const data = doc.data();\n//         if (!depositMap[data.uid]) depositMap[data.uid] = 0;\n//         depositMap[data.uid] += data.amount || 0;\n//       });\n//       const withdrawMap = {};\n//       withdrawSnap.forEach((doc) => {\n//         const data = doc.data();\n//         if (!withdrawMap[data.uid]) withdrawMap[data.uid] = 0;\n//         withdrawMap[data.uid] += data.amount || 0;\n//       });\n//       const finalUsers = wallets.map((user) => ({\n//         ...user,\n//         totalDeposited: depositMap[user.uid] || 0,\n//         totalWithdrawn: withdrawMap[user.uid] || 0,\n//       }));\n//       setUsers(finalUsers);\n//     } catch (error) {\n//       console.error('Error fetching user wallet data:', error);\n//       alert('Error loading wallet data.');\n//     }\n//     setLoading(false);\n//   };\n//   const fetchUserHistory = async (uid) => {\n//     setHistoryLoading(true);\n//     try {\n//       const depositsSnap = await getDocs(\n//         query(collection(db, 'depositRequests'), where('uid', '==', uid))\n//       );\n//       const withdrawalsSnap = await getDocs(\n//         query(collection(db, 'withdrawRequests'), where('uid', '==', uid))\n//       );\n//       const deposits = depositsSnap.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\n//       const withdrawals = withdrawalsSnap.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\n//       setHistory({ deposits, withdrawals });\n//     } catch (error) {\n//       console.error('Error loading history:', error);\n//     }\n//     setHistoryLoading(false);\n//   };\n//   const exportToCSV = () => {\n//     const headers = ['Email', 'Balance', 'Deposited (7 days)', 'Withdrawn (7 days)'];\n//     const rows = users.map(u => [u.email, u.balance, u.totalDeposited, u.totalWithdrawn]);\n//     const csvContent = [headers, ...rows].map(r => r.join(',')).join('\\n');\n//     const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n//     const url = URL.createObjectURL(blob);\n//     const link = document.createElement('a');\n//     link.setAttribute('href', url);\n//     link.setAttribute('download', 'user_wallets.csv');\n//     document.body.appendChild(link);\n//     link.click();\n//     document.body.removeChild(link);\n//   };\n//   const filteredUsers = users.filter(u =>\n//     u.email.toLowerCase().includes(search.toLowerCase())\n//   );\n//   return (\n//     <Layout>\n//       <div className=\"min-h-screen bg-gray-900 text-white p-8\">\n//         <div className=\"max-w-6xl mx-auto\">\n//           <h1 className=\"text-3xl font-bold mb-6\">Admin: User Wallet Overview</h1>\n//           <div className=\"flex items-center gap-4 mb-6\">\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search by email...\"\n//               value={search}\n//               onChange={(e) => setSearch(e.target.value)}\n//               className=\"px-4 py-2 rounded bg-gray-800 border border-gray-600 focus:outline-none\"\n//             />\n//             <button\n//               onClick={exportToCSV}\n//               className=\"px-4 py-2 bg-yellow-500 hover:bg-yellow-600 text-black rounded font-semibold\"\n//             >\n//               Export CSV\n//             </button>\n//           </div>\n//           {loading ? (\n//             <p className=\"text-yellow-300\">Loading...</p>\n//           ) : filteredUsers.length === 0 ? (\n//             <p className=\"text-gray-400\">No users found.</p>\n//           ) : (\n//             <div className=\"overflow-x-auto bg-gray-800 rounded-lg shadow-xl\">\n//               <table className=\"w-full text-left table-auto\">\n//                 <thead className=\"bg-gray-700 text-sm uppercase text-gray-300\">\n//                   <tr>\n//                     <th className=\"p-3\">Email</th>\n//                     <th className=\"p-3\">Balance</th>\n//                     <th className=\"p-3\">Deposited (7d)</th>\n//                     <th className=\"p-3\">Withdrawn (7d)</th>\n//                     <th className=\"p-3\">History</th>\n//                   </tr>\n//                 </thead>\n//                 <tbody>\n//                   {filteredUsers.map((user) => (\n//                     <tr key={user.uid} className=\"border-t border-gray-700\">\n//                       <td className=\"p-3\">{user.email || 'N/A'}</td>\n//                       <td className=\"p-3\">₹{user.balance}</td>\n//                       <td className=\"p-3\">₹{user.totalDeposited}</td>\n//                       <td className=\"p-3\">₹{user.totalWithdrawn}</td>\n//                       <td className=\"p-3\">\n//                         <button\n//                           className=\"text-blue-400 underline\"\n//                           onClick={() => {\n//                             setSelectedUser(user);\n//                             fetchUserHistory(user.uid);\n//                           }}\n//                         >\n//                           View\n//                         </button>\n//                       </td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             </div>\n//           )}\n//           {/* Transaction history modal */}\n//           {selectedUser && (\n//             <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n//               <div className=\"bg-gray-900 p-6 rounded-lg w-full max-w-3xl relative\">\n//                 <h2 className=\"text-2xl font-bold mb-4\">\n//                   {selectedUser.email} - Transaction History\n//                 </h2>\n//                 <button\n//                   className=\"absolute top-3 right-3 text-gray-400 hover:text-white\"\n//                   onClick={() => setSelectedUser(null)}\n//                 >\n//                   ✕\n//                 </button>\n//                 {historyLoading ? (\n//                   <p className=\"text-yellow-300\">Loading history...</p>\n//                 ) : (\n//                   <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n//                     <div>\n//                       <h3 className=\"text-lg font-semibold mb-2\">Deposits</h3>\n//                       {history.deposits.length === 0 ? (\n//                         <p className=\"text-gray-400\">No deposit history.</p>\n//                       ) : (\n//                         <ul className=\"space-y-2 text-sm\">\n//                           {history.deposits.map((d) => (\n//                             <li key={d.id} className=\"bg-gray-800 p-2 rounded\">\n//                               ₹{d.amount} - {d.status} - {d.createdAt?.toDate().toLocaleString()}\n//                             </li>\n//                           ))}\n//                         </ul>\n//                       )}\n//                     </div>\n//                     <div>\n//                       <h3 className=\"text-lg font-semibold mb-2\">Withdrawals</h3>\n//                       {history.withdrawals.length === 0 ? (\n//                         <p className=\"text-gray-400\">No withdrawal history.</p>\n//                       ) : (\n//                         <ul className=\"space-y-2 text-sm\">\n//                           {history.withdrawals.map((w) => (\n//                             <li key={w.id} className=\"bg-gray-800 p-2 rounded\">\n//                               ₹{w.amount} - {w.status} - {w.createdAt?.toDate().toLocaleString()}\n//                             </li>\n//                           ))}\n//                         </ul>\n//                       )}\n//                     </div>\n//                   </div>\n//                 )}\n//               </div>\n//             </div>\n//           )}\n//         </div>\n//       </div>\n//     </Layout>\n//   );\n// }\n// 'use client';\n// import React, { useEffect, useState } from 'react';\n// import {\n//   getFirestore,\n//   collection,\n//   getDocs,\n//   query,\n//   where,\n//   Timestamp,\n//   doc,\n//   getDoc,\n// } from 'firebase/firestore';\n// import { getAuth, onAuthStateChanged } from 'firebase/auth';\n// import firebaseApp from '@/firebase';\n// import Layout from '@/app/Components/Layout';\n// export default function AdminUserWalletsPage() {\n//   const auth = getAuth(firebaseApp);\n//   const db = getFirestore(firebaseApp);\n//   const [users, setUsers] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [search, setSearch] = useState('');\n//   const [currentUser, setCurrentUser] = useState(null);\n//   const [role, setRole] = useState(null);\n//   useEffect(() => {\n//     const unsubscribe = onAuthStateChanged(auth, async (user) => {\n//       setCurrentUser(user);\n//       if (user) {\n//         const userRef = doc(db, 'users', user.uid);\n//         const userSnap = await getDoc(userRef);\n//         const data = userSnap.data();\n//         const userRole = data?.role || 'user';\n//         setRole(userRole);\n//         if (userRole === 'admin' || userRole === 'subadmin') {\n//           await fetchUserWalletData(user.uid, userRole);\n//         } else {\n//           setUsers([]);\n//           setLoading(false);\n//         }\n//       } else {\n//         setLoading(false);\n//       }\n//     });\n//     return () => unsubscribe();\n//   }, []);\n//   const fetchUserWalletData = async (uid, role) => {\n//     setLoading(true);\n//     try {\n//       const walletCol = collection(db, 'subwallets');\n//       let walletQuery;\n//       if (role === 'admin') {\n//         walletQuery = walletCol; // get all\n//       } else {\n//         walletQuery = query(walletCol, where('subAdminId', '==', uid)); // only their users\n//       }\n//       const walletsSnap = await getDocs(walletQuery);\n//       const wallets = walletsSnap.docs.map((doc) => ({\n//         uid: doc.id,\n//         balance: doc.data().balance || 0,\n//         email: doc.data().email || '',\n//       }));\n//       const oneWeekAgo = Timestamp.fromDate(new Date(Date.now() - 7 * 24 * 60 * 60 * 1000));\n//       const depositSnap = await getDocs(\n//         query(\n//           collection(db, 'depositRequests'),\n//           where('status', '==', 'approved'),\n//           where('createdAt', '>=', oneWeekAgo)\n//         )\n//       );\n//       const withdrawSnap = await getDocs(\n//         query(\n//           collection(db, 'withdrawRequests'),\n//           where('status', '==', 'approved'),\n//           where('createdAt', '>=', oneWeekAgo)\n//         )\n//       );\n//       const depositMap = {};\n//       depositSnap.forEach((doc) => {\n//         const data = doc.data();\n//         if (!depositMap[data.uid]) depositMap[data.uid] = 0;\n//         depositMap[data.uid] += data.amount || 0;\n//       });\n//       const withdrawMap = {};\n//       withdrawSnap.forEach((doc) => {\n//         const data = doc.data();\n//         if (!withdrawMap[data.uid]) withdrawMap[data.uid] = 0;\n//         withdrawMap[data.uid] += data.amount || 0;\n//       });\n//       const finalUsers = wallets.map((user) => ({\n//         ...user,\n//         totalDeposited: depositMap[user.uid] || 0,\n//         totalWithdrawn: withdrawMap[user.uid] || 0,\n//       }));\n//       setUsers(finalUsers);\n//     } catch (error) {\n//       console.error('Error fetching user wallet data:', error);\n//       alert('Error loading wallet data.');\n//     }\n//     setLoading(false);\n//   };\n//   const exportToCSV = () => {\n//     const headers = ['Email', 'Balance', 'Deposited (7 days)', 'Withdrawn (7 days)'];\n//     const rows = users.map((u) => [u.email, u.balance, u.totalDeposited, u.totalWithdrawn]);\n//     const csvContent = [headers, ...rows].map((r) => r.join(',')).join('\\n');\n//     const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n//     const url = URL.createObjectURL(blob);\n//     const link = document.createElement('a');\n//     link.setAttribute('href', url);\n//     link.setAttribute('download', 'user_wallets.csv');\n//     document.body.appendChild(link);\n//     link.click();\n//     document.body.removeChild(link);\n//   };\n//   const filteredUsers = users.filter((u) =>\n//     u.email.toLowerCase().includes(search.toLowerCase())\n//   );\n//   return (\n//     <Layout>\n//       <div className=\"min-h-screen bg-gray-900 text-white p-8\">\n//         <div className=\"max-w-5xl mx-auto\">\n//           <h1 className=\"text-3xl font-bold mb-6\">\n//             {role === 'admin'\n//               ? 'Admin: All Subadmin & User Wallets'\n//               : 'Subadmin: Your User Wallets'}\n//           </h1>\n//           <div className=\"flex items-center gap-4 mb-6\">\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search by email...\"\n//               value={search}\n//               onChange={(e) => setSearch(e.target.value)}\n//               className=\"px-4 py-2 rounded bg-gray-800 border border-gray-600 focus:outline-none\"\n//             />\n//             <button\n//               onClick={exportToCSV}\n//               className=\"px-4 py-2 bg-yellow-500 hover:bg-yellow-600 text-black rounded font-semibold\"\n//             >\n//               Export CSV dk\n//             </button>\n//           </div>\n//           {loading ? (\n//             <p className=\"text-yellow-300\">Loading...</p>\n//           ) : filteredUsers.length === 0 ? (\n//             <p className=\"text-gray-400\">No users found.</p>\n//           ) : (\n//             <div className=\"overflow-x-auto bg-gray-800 rounded-lg shadow-xl\">\n//               <table className=\"w-full text-left table-auto\">\n//                 <thead className=\"bg-gray-700 text-sm uppercase text-gray-300\">\n//                   <tr>\n//                     <th className=\"p-3\">Email</th>\n//                     <th className=\"p-3\">Balance</th>\n//                     <th className=\"p-3\">Deposited (7d)</th>\n//                     <th className=\"p-3\">Withdrawn (7d)</th>\n//                   </tr>\n//                 </thead>\n//                 <tbody>\n//                   {filteredUsers.map((user) => (\n//                     <tr key={user.uid} className=\"border-t border-gray-700\">\n//                       <td className=\"p-3\">{user.email || 'N/A'}</td>\n//                       <td className=\"p-3\">₹{user.balance}</td>\n//                       <td className=\"p-3\">₹{user.totalDeposited}</td>\n//                       <td className=\"p-3\">₹{user.totalWithdrawn}</td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             </div>\n//           )}\n//         </div>\n//       </div>\n//     </Layout>\n//   );\n// }\n// 'use client';\n// import React, { useEffect, useState } from 'react';\n// import {\n//   getFirestore,\n//   collection,\n//   getDocs,\n//   query,\n//   where,\n//   Timestamp,\n//   doc,\n//   getDoc,\n// } from 'firebase/firestore';\n// import { getAuth, onAuthStateChanged } from 'firebase/auth';\n// import firebaseApp from '@/firebase';\n// import Layout from '@/app/Components/Layout';\n// export default function AdminUserWalletsPage() {\n//   const auth = getAuth(firebaseApp);\n//   const db = getFirestore(firebaseApp);\n//   const [users, setUsers] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [search, setSearch] = useState('');\n//   const [currentUser, setCurrentUser] = useState(null);\n//   const [role, setRole] = useState(null);\n//   useEffect(() => {\n//     const unsubscribe = onAuthStateChanged(auth, async (user) => {\n//       setCurrentUser(user);\n//       if (user) {\n//         const userRef = doc(db, 'users', user.uid);\n//         const userSnap = await getDoc(userRef);\n//         const data = userSnap.data();\n//         const userRole = data?.role || 'user';\n//         setRole(userRole);\n//         if (userRole === 'admin' || userRole === 'subadmin') {\n//           await fetchUserWalletData(user.uid, userRole);\n//         } else {\n//           setUsers([]);\n//           setLoading(false);\n//         }\n//       } else {\n//         setLoading(false);\n//       }\n//     });\n//     return () => unsubscribe();\n//   }, []);\n//   const fetchUserWalletData = async (uid, role) => {\n//     setLoading(true);\n//     try {\n//       const walletCol = collection(db, 'subwallets');\n//       let walletQuery;\n//       if (role === 'admin') {\n//         walletQuery = walletCol; // all wallets\n//       } else {\n//         walletQuery = query(walletCol, where('subAdminId', '==', uid)); // subadmin-specific\n//       }\n//       const walletsSnap = await getDocs(walletQuery);\n//       const wallets = walletsSnap.docs.map((doc) => ({\n//         uid: doc.id,\n//         balance: doc.data().balance || 0,\n//         email: doc.data().email || '',\n//       }));\n//       const oneWeekAgo = Timestamp.fromDate(new Date(Date.now() - 7 * 24 * 60 * 60 * 1000));\n//       // Deposit Requests (filtered for subadmin)\n//       // const depositSnap = await getDocs(\n//       //   // query(\n//       //   //   collection(db, 'subdepositRequests'),\n//       //   //   where('status', '==', 'approved'),\n//       //   //   where('createdAt', '>=', oneWeekAgo),\n//       //   //   ...(role === 'subadmin' ? [where('fromUserSubAdminId', '==', uid)] : [])\n//       //   // )\n//       //   query(\n//       //     collection(db, 'subdepositRequests'),\n//       //     where('status', '==', 'approved'),\n//       //     where('createdAt', '>=', oneWeekAgo),\n//       //     where('fromUserSubAdminId', '==', uid)\n//       //   )\n//       // );\n//       const depositSnap = await getDocs(\n//   query(\n//     collection(db, 'subdepositRequests'),\n//     where('status', '==', 'approved'),\n//     ...(role === 'subadmin' ? [where('fromUserSubAdminId', '==', uid)] : [])\n//   )\n// );\n//       // Withdraw Requests (filtered for subadmin)\n// //       const withdrawSnap = await getDocs(\n// //         // query(\n// //         //   collection(db, 'subwithdrawRequests'),\n// //         //   where('status', '==', 'approved'),\n// //         //   where('createdAt', '>=', oneWeekAgo),\n// //         //   ...(role === 'subadmin' ? [where('fromUserSubAdminId', '==', uid)] : [])\n// //         // )\n// //         query(\n// //   collection(db, 'subdepositRequests'),\n// //   where('status', '==', 'approved'),\n// //   where('createdAt', '>=', oneWeekAgo),\n// //   where('fromUserSubAdminId', '==', uid)\n// // )\n// //       );\n// const withdrawSnap = await getDocs(\n//   query(\n//     collection(db, 'subwithdrawRequests'),\n//     where('status', '==', 'approved'),\n//     ...(role === 'subadmin' ? [where('fromUserSubAdminId', '==', uid)] : [])\n//   )\n// );\n//       // Aggregate deposits\n//       const depositMap = {};\n//       depositSnap.forEach((doc) => {\n//         const data = doc.data();\n//         if (!depositMap[data.uid]) depositMap[data.uid] = 0;\n//         depositMap[data.uid] += data.amount || 0;\n//       });\n//       // Aggregate withdrawals\n//       // const withdrawMap = {};\n//       // withdrawSnap.forEach((doc) => {\n//       //   const data = doc.data();\n//       //   if (!withdrawMap[data.uid]) withdrawMap[data.uid] = 0;\n//       //   withdrawMap[data.uid] += data.amount || 0;\n//       // });\n// const withdrawMap = {};\n// withdrawSnap.forEach((doc) => {\n//   const data = doc.data();\n//   if (!withdrawMap[data.uid]) withdrawMap[data.uid] = [];\n//   withdrawMap[data.uid].push({\n//     amount: data.amount,\n//     approvedAt: data.approvedAt?.toDate(),\n//   });\n// });\n//       // Final merged user data\n//       const finalUsers = wallets.map((user) => ({\n//         ...user,\n//         totalDeposited: depositMap[user.uid] || 0,\n//         // totalWithdrawn: withdrawMap[user.uid] || 0,\n//         withdrawals: withdrawMap[user.uid] || [],\n//       }));\n//       setUsers(finalUsers);\n//     } catch (error) {\n//       console.error('Error fetching wallet data:', error);\n//       alert('Error loading wallet data.');\n//     }\n//     setLoading(false);\n//   };\n//   // const exportToCSV = () => {\n//   //   const headers = ['Email', 'Balance', 'Deposited (7 days)', 'Withdrawn (7 days)'];\n//   //   const rows = users.map((u) => [u.email, u.balance, u.totalDeposited, u.totalWithdrawn]);\n//   //   const csvContent = [headers, ...rows].map((r) => r.join(',')).join('\\n');\n//   //   const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n//   //   const url = URL.createObjectURL(blob);\n//   //   const link = document.createElement('a');\n//   //   link.setAttribute('href', url);\n//   //   link.setAttribute('download', 'user_wallets.csv');\n//   //   document.body.appendChild(link);\n//   //   link.click();\n//   //   document.body.removeChild(link);\n//   // };\n// // const fetchUserWalletData = async (uid, role) => {\n// //   setLoading(true);\n// //   try {\n// //     const walletCol = collection(db, 'subwallets');\n// //     let walletQuery;\n// //     if (role === 'admin') {\n// //       walletQuery = walletCol; // All wallets\n// //     } else {\n// //       walletQuery = query(walletCol, where('subAdminId', '==', uid)); // Only subadmin's users\n// //     }\n// //     const walletsSnap = await getDocs(walletQuery);\n// //     const wallets = walletsSnap.docs.map((doc) => ({\n// //       uid: doc.id,\n// //       balance: doc.data().balance || 0,\n// //       email: doc.data().email || '',\n// //     }));\n// //     const oneWeekAgo = Timestamp.fromDate(new Date(Date.now() - 7 * 24 * 60 * 60 * 1000));\n// //     // Approved deposits (last 7 days)\n// //     const depositSnap = await getDocs(\n// //       query(\n// //         collection(db, 'subdepositRequests'),\n// //         where('status', '==', 'approved'),\n// //         where('createdAt', '>=', oneWeekAgo),\n// //         ...(role === 'subadmin' ? [where('fromUserSubAdminId', '==', uid)] : [])\n// //       )\n// //     );\n// //     // Approved withdrawals (all time)\n// //     const withdrawSnap = await getDocs(\n// //       query(\n// //         collection(db, 'subwithdrawRequests'),\n// //         where('status', '==', 'approved'),\n// //         ...(role === 'subadmin' ? [where('fromUserSubAdminId', '==', uid)] : [])\n// //       )\n// //     );\n// //     // Aggregate deposits\n// //     const depositMap = {};\n// //     depositSnap.forEach((doc) => {\n// //       const data = doc.data();\n// //       if (!depositMap[data.uid]) depositMap[data.uid] = 0;\n// //       depositMap[data.uid] += data.amount || 0;\n// //     });\n// //     // Group withdrawals per user (all time, with timestamp)\n// //     const withdrawMap = {};\n// //     withdrawSnap.forEach((doc) => {\n// //       const data = doc.data();\n// //       if (!withdrawMap[data.uid]) withdrawMap[data.uid] = [];\n// //       withdrawMap[data.uid].push({\n// //         amount: data.amount,\n// //         approvedAt: data.approvedAt?.toDate(),\n// //       });\n// //     });\n// //     // Final user merge\n// //     const finalUsers = wallets.map((user) => ({\n// //       ...user,\n// //       totalDeposited: depositMap[user.uid] || 0,\n// //       withdrawals: withdrawMap[user.uid] || [],\n// //     }));\n// //     setUsers(finalUsers);\n// //   } catch (error) {\n// //     console.error('Error fetching wallet data:', error);\n// //     alert('Error loading wallet data.');\n// //   }\n// //   setLoading(false);\n// // };\n//   const exportToCSV = () => {\n//   const headers = ['Email', 'Balance', 'Deposited (7 days)', 'Withdrawals (amount + date)'];\n//   const rows = users.map((u) => {\n//     const withdrawalDetails = (u.withdrawals || [])\n//       .map(\n//         (w) =>\n//           `₹${w.amount} on ${w.approvedAt?.toLocaleDateString()} at ${w.approvedAt?.toLocaleTimeString([], {\n//             hour: '2-digit',\n//             minute: '2-digit',\n//           })}`\n//       )\n//       .join(' | '); // Use pipe or semicolon to separate multiple withdrawals in one cell\n//     return [u.email, u.balance, u.totalDeposited, withdrawalDetails];\n//   });\n//   const csvContent = [headers, ...rows].map((r) => r.join(',')).join('\\n');\n//   const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n//   const url = URL.createObjectURL(blob);\n//   const link = document.createElement('a');\n//   link.setAttribute('href', url);\n//   link.setAttribute('download', 'user_wallets.csv');\n//   document.body.appendChild(link);\n//   link.click();\n//   document.body.removeChild(link);\n// };\n//   const filteredUsers = users.filter((u) =>\n//     u.email.toLowerCase().includes(search.toLowerCase())\n//   );\n//   return (\n//     // <Layout>\n//     //   <div className=\"min-h-screen bg-gray-900 text-white p-8\">\n//     //     <div className=\"max-w-5xl mx-auto\">\n//     //       <h1 className=\"text-3xl font-bold mb-6\">\n//     //         {role === 'admin'\n//     //           ? 'Admin: All Subadmin & User Wallets'\n//     //           : 'Subadmin: Your User Wallets'}\n//     //       </h1>\n//     //       <div className=\"flex items-center gap-4 mb-6\">\n//     //         <input\n//     //           type=\"text\"\n//     //           placeholder=\"Search by email...\"\n//     //           value={search}\n//     //           onChange={(e) => setSearch(e.target.value)}\n//     //           className=\"px-4 py-2 rounded bg-gray-800 border border-gray-600 focus:outline-none\"\n//     //         />\n//     //         <button\n//     //           onClick={exportToCSV}\n//     //           className=\"px-4 py-2 bg-yellow-500 hover:bg-yellow-600 text-black rounded font-semibold\"\n//     //         >\n//     //           Export CSV\n//     //         </button>\n//     //       </div>\n//     //       {loading ? (\n//     //         <p className=\"text-yellow-300\">Loading...</p>\n//     //       ) : filteredUsers.length === 0 ? (\n//     //         <p className=\"text-gray-400\">No users found.</p>\n//     //       ) : (\n//     //         <div className=\"overflow-x-auto bg-gray-800 rounded-lg shadow-xl\">\n//     //           <table className=\"w-full text-left table-auto\">\n//     //             <thead className=\"bg-gray-700 text-sm uppercase text-gray-300\">\n//     //               <tr>\n//     //                 <th className=\"p-3\">Email</th>\n//     //                 <th className=\"p-3\">Balance</th>\n//     //                 <th className=\"p-3\">Deposited (7d)</th>\n//     //                 {/* <th className=\"p-3\">Withdrawn (7d)</th>\n//     //               </tr> */}\n//     //               <th className=\"p-3\">Withdrawals</th>\n//     //             </thead>\n//     //             <tbody>\n//     //               {filteredUsers.map((user) => (\n//     //                 <tr key={user.uid} className=\"border-t border-gray-700\">\n//     //                   <td className=\"p-3\">{user.email || 'N/A'}</td>\n//     //                   <td className=\"p-3\">₹{user.balance}</td>\n//     //                   <td className=\"p-3\">₹{user.totalDeposited}</td>\n//     //                   <td className=\"p-3\">₹{user.Withdrawn}</td>\n//     //                 </tr>\n//     //               ))}\n//     //             </tbody>\n//     //           </table>\n//     //         </div>\n//     //       )}\n//     //     </div>\n//     //   </div>\n//     // </Layout>\n//     <Layout>\n//   <div className=\"min-h-screen bg-gray-900 text-white p-8\">\n//     <div className=\"max-w-5xl mx-auto\">\n//       <h1 className=\"text-3xl font-bold mb-6\">\n//         {role === 'admin'\n//           ? 'Admin: All Subadmin & User Wallets'\n//           : 'Subadmin: Your User Wallets'}\n//       </h1>\n//       <div className=\"flex items-center gap-4 mb-6\">\n//         <input\n//           type=\"text\"\n//           placeholder=\"Search by email...\"\n//           value={search}\n//           onChange={(e) => setSearch(e.target.value)}\n//           className=\"px-4 py-2 rounded bg-gray-800 border border-gray-600 focus:outline-none\"\n//         />\n//         <button\n//           onClick={exportToCSV}\n//           className=\"px-4 py-2 bg-yellow-500 hover:bg-yellow-600 text-black rounded font-semibold\"\n//         >\n//           Export CSV\n//         </button>\n//       </div>\n//       {loading ? (\n//         <p className=\"text-yellow-300\">Loading...</p>\n//       ) : filteredUsers.length === 0 ? (\n//         <p className=\"text-gray-400\">No users found.</p>\n//       ) : (\n//         <div className=\"overflow-x-auto bg-gray-800 rounded-lg shadow-xl\">\n//           <table className=\"w-full text-left table-auto\">\n//             <thead className=\"bg-gray-700 text-sm uppercase text-gray-300\">\n//               <tr>\n//                 <th className=\"p-3\">Email</th>\n//                 <th className=\"p-3\">Balance</th>\n//                 <th className=\"p-3\">Deposited (7d)</th>\n//                 <th className=\"p-3\">Withdrawals</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {filteredUsers.map((user) => (\n//                 <tr key={user.uid} className=\"border-t border-gray-700 align-top\">\n//                   <td className=\"p-3\">{user.email || 'N/A'}</td>\n//                   <td className=\"p-3\">₹{user.balance}</td>\n//                   <td className=\"p-3\">₹{user.totalDeposited}</td>\n//                   <td className=\"p-3 text-sm\">\n//                     {user.withdrawals?.length > 0 ? (\n//                       <ul className=\"space-y-1\">\n//                         {user.withdrawals.map((w, idx) => (\n//                           <li key={idx}>\n//                             ₹{w.amount} on{' '}\n//                             {w.approvedAt?.toLocaleDateString()} at{' '}\n//                             {w.approvedAt?.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n//                           </li>\n//                         ))}\n//                       </ul>\n//                     ) : (\n//                       <span className=\"text-gray-400\">No withdrawals</span>\n//                     )}\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         </div>\n//       )}\n//     </div>\n//   </div>\n// </Layout>\n//   );\n// }\n// 'use client';\n// import React, { useEffect, useState } from 'react';\n// import {\n//   getFirestore,\n//   collection,\n//   getDocs,\n//   query,\n//   where,\n//   Timestamp,\n//   doc,\n//   getDoc,\n// } from 'firebase/firestore';\n// import { getAuth, onAuthStateChanged } from 'firebase/auth';\n// import firebaseApp from '@/firebase';\n// import Layout from '@/app/Components/Layout';\n// export default function AdminUserWalletsPage() {\n//   const auth = getAuth(firebaseApp);\n//   const db = getFirestore(firebaseApp);\n//   const [users, setUsers] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [search, setSearch] = useState('');\n//   const [currentUser, setCurrentUser] = useState(null);\n//   const [role, setRole] = useState(null);\n//   useEffect(() => {\n//     const unsubscribe = onAuthStateChanged(auth, async (user) => {\n//       setCurrentUser(user);\n//       if (user) {\n//         const userRef = doc(db, 'users', user.uid);\n//         const userSnap = await getDoc(userRef);\n//         const data = userSnap.data();\n//         const userRole = data?.role || 'user';\n//         setRole(userRole);\n//         if (userRole === 'admin' || userRole === 'subadmin') {\n//           await fetchUserWalletData(user.uid, userRole);\n//         } else {\n//           setUsers([]);\n//           setLoading(false);\n//         }\n//       } else {\n//         setLoading(false);\n//       }\n//     });\n//     return () => unsubscribe();\n//   }, []);\n//   const fetchUserWalletData = async (uid, role) => {\n//     setLoading(true);\n//     try {\n//       const walletCol = collection(db, 'subwallets');\n//       let walletQuery = role === 'admin'\n//         ? walletCol\n//         : query(walletCol, where('subAdminId', '==', uid));\n//       const walletsSnap = await getDocs(walletQuery);\n//       const wallets = walletsSnap.docs.map((doc) => ({\n//         uid: doc.id,\n//         balance: doc.data().balance || 0,\n//         email: doc.data().email || '',\n//       }));\n//       const depositSnap = await getDocs(\n//         query(\n//           collection(db, 'subdepositRequests'),\n//           where('status', '==', 'approved'),\n//           ...(role === 'subadmin' ? [where('fromUserSubAdminId', '==', uid)] : [])\n//         )\n//       );\n//       const withdrawSnap = await getDocs(\n//         query(\n//           collection(db, 'subwithdrawRequests'),\n//           where('status', '==', 'approved'),\n//           ...(role === 'subadmin' ? [where('fromUserSubAdminId', '==', uid)] : [])\n//         )\n//       );\n//       const depositMap = {};\n//       depositSnap.forEach((doc) => {\n//         const data = doc.data();\n//         if (!depositMap[data.uid]) depositMap[data.uid] = [];\n//         depositMap[data.uid].push({\n//           amount: data.amount,\n//           approvedAt: data.approvedAt?.toDate(),\n//         });\n//       });\n//       const withdrawMap = {};\n//       withdrawSnap.forEach((doc) => {\n//         const data = doc.data();\n//         if (!withdrawMap[data.uid]) withdrawMap[data.uid] = [];\n//         withdrawMap[data.uid].push({\n//           amount: data.amount,\n//           approvedAt: data.approvedAt?.toDate(),\n//         });\n//       });\n//       const finalUsers = wallets.map((user) => ({\n//         ...user,\n//         deposits: depositMap[user.uid] || [],\n//         withdrawals: withdrawMap[user.uid] || [],\n//       }));\n//       setUsers(finalUsers);\n//     } catch (error) {\n//       console.error('Error fetching wallet data:', error);\n//       alert('Error loading wallet data.');\n//     }\n//     setLoading(false);\n//   };\n//   const exportToCSV = () => {\n//     const headers = ['Email', 'Balance', 'Deposits (amount + date)', 'Withdrawals (amount + date)'];\n//     const rows = users.map((u) => {\n//       const depositDetails = (u.deposits || [])\n//         .map(\n//           (d) =>\n//             `₹${d.amount} on ${d.approvedAt?.toLocaleDateString()} at ${d.approvedAt?.toLocaleTimeString([], {\n//               hour: '2-digit',\n//               minute: '2-digit',\n//             })}`\n//         )\n//         .join(' | ');\n//       const withdrawalDetails = (u.withdrawals || [])\n//         .map(\n//           (w) =>\n//             `₹${w.amount} on ${w.approvedAt?.toLocaleDateString()} at ${w.approvedAt?.toLocaleTimeString([], {\n//               hour: '2-digit',\n//               minute: '2-digit',\n//             })}`\n//         )\n//         .join(' | ');\n//       return [u.email, u.balance, depositDetails, withdrawalDetails];\n//     });\n//     const csvContent = [headers, ...rows].map((r) => r.join(',')).join('\\n');\n//     const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n//     const url = URL.createObjectURL(blob);\n//     const link = document.createElement('a');\n//     link.setAttribute('href', url);\n//     link.setAttribute('download', 'user_wallets.csv');\n//     document.body.appendChild(link);\n//     link.click();\n//     document.body.removeChild(link);\n//   };\n//   const filteredUsers = users.filter((u) =>\n//     u.email.toLowerCase().includes(search.toLowerCase())\n//   );\n//   return (\n//     <Layout>\n//       <div className=\"min-h-screen bg-gray-900 text-white p-8\">\n//         <div className=\"max-w-5xl mx-auto\">\n//           <h1 className=\"text-3xl font-bold mb-6\">\n//             {role === 'admin'\n//               ? 'Admin: All Subadmin & User Wallets'\n//               : 'Subadmin: Your User Wallets'}\n//           </h1>\n//           <div className=\"flex items-center gap-4 mb-6\">\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search by email...\"\n//               value={search}\n//               onChange={(e) => setSearch(e.target.value)}\n//               className=\"px-4 py-2 rounded bg-gray-800 border border-gray-600 focus:outline-none\"\n//             />\n//             <button\n//               onClick={exportToCSV}\n//               className=\"px-4 py-2 bg-yellow-500 hover:bg-yellow-600 text-black rounded font-semibold\"\n//             >\n//               Export CSV\n//             </button>\n//           </div>\n//           {loading ? (\n//             <p className=\"text-yellow-300\">Loading...</p>\n//           ) : filteredUsers.length === 0 ? (\n//             <p className=\"text-gray-400\">No users found.</p>\n//           ) : (\n//             <div className=\"overflow-x-auto bg-gray-800 rounded-lg shadow-xl\">\n//               <table className=\"w-full text-left table-auto\">\n//                 <thead className=\"bg-gray-700 text-sm uppercase text-gray-300\">\n//                   <tr>\n//                     <th className=\"p-3\">Email</th>\n//                     <th className=\"p-3\">Balance</th>\n//                     <th className=\"p-3\">Deposits</th>\n//                     <th className=\"p-3\">Withdrawals</th>\n//                   </tr>\n//                 </thead>\n//                 <tbody>\n//                   {filteredUsers.map((user) => (\n//                     <tr key={user.uid} className=\"border-t border-gray-700 align-top\">\n//                       <td className=\"p-3\">{user.email || 'N/A'}</td>\n//                       <td className=\"p-3\">₹{user.balance}</td>\n//                       <td className=\"p-3 text-sm\">\n//                         {user.deposits?.length > 0 ? (\n//                           <ul className=\"space-y-1\">\n//                             {user.deposits.map((d, idx) => (\n//                               <li key={idx}>\n//                                 ₹{d.amount} on{' '}\n//                                 {d.approvedAt?.toLocaleDateString()} at{' '}\n//                                 {d.approvedAt?.toLocaleTimeString([], {\n//                                   hour: '2-digit',\n//                                   minute: '2-digit',\n//                                 })}\n//                               </li>\n//                             ))}\n//                           </ul>\n//                         ) : (\n//                           <span className=\"text-gray-400\">No deposits</span>\n//                         )}\n//                       </td>\n//                       <td className=\"p-3 text-sm\">\n//                         {user.withdrawals?.length > 0 ? (\n//                           <ul className=\"space-y-1\">\n//                             {user.withdrawals.map((w, idx) => (\n//                               <li key={idx}>\n//                                 ₹{w.amount} on{' '}\n//                                 {w.approvedAt?.toLocaleDateString()} at{' '}\n//                                 {w.approvedAt?.toLocaleTimeString([], {\n//                                   hour: '2-digit',\n//                                   minute: '2-digit',\n//                                 })}\n//                               </li>\n//                             ))}\n//                           </ul>\n//                         ) : (\n//                           <span className=\"text-gray-400\">No withdrawals</span>\n//                         )}\n//                       </td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             </div>\n//           )}\n//         </div>\n//       </div>\n//     </Layout>\n//   );\n// }\n// 'use client';\n// import React, { useEffect, useState } from 'react';\n// import Layout from '@/app/Components/Layout';\n// import {\n//   getFirestore,\n//   collection,\n//   query,\n//   where,\n//   getDocs,\n//   doc,\n//   getDoc,\n//   orderBy,\n//   Timestamp,\n// } from 'firebase/firestore';\n// import { getAuth, onAuthStateChanged } from 'firebase/auth';\n// import firebaseApp from '@/firebase';\n// export default function Page() {\n//   const db = getFirestore(firebaseApp);\n//   const auth = getAuth(firebaseApp);\n//   const [users, setUsers] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [role, setRole] = useState(null);\n//   const [search, setSearch] = useState('');\n//   const [dateFilter, setDateFilter] = useState('');\n//   useEffect(() => {\n//     const unsubscribe = onAuthStateChanged(auth, async (user) => {\n//       if (user) {\n//         const userDoc = await getDoc(doc(db, 'users', user.uid));\n//         const data = userDoc.exists() ? userDoc.data() : {};\n//         const userRole = data?.role || 'user';\n//         setRole(userRole);\n//         const walletQuery = userRole === 'admin'\n//           ? collection(db, 'subwallets')\n//           : query(collection(db, 'subwallets'), where('subAdminId', '==', user.uid));\n//         const walletsSnap = await getDocs(walletQuery);\n//         const wallets = walletsSnap.docs.map((doc) => ({ uid: doc.id, ...doc.data() }));\n//         const depositSnap = await getDocs(query(\n//           collection(db, 'subdepositRequests'),\n//           where('status', '==', 'approved'),\n//           orderBy('approvedAt', 'desc')\n//         ));\n//         const withdrawSnap = await getDocs(query(\n//           collection(db, 'subwithdrawRequests'),\n//           where('status', '==', 'approved'),\n//           orderBy('approvedAt', 'desc')\n//         ));\n//         const depositMap = {};\n//         const withdrawMap = {};\n//         depositSnap.forEach((doc) => {\n//           const data = doc.data();\n//           if (!depositMap[data.uid]) depositMap[data.uid] = [];\n//           depositMap[data.uid].push({\n//             amount: data.amount,\n//             approvedAt: data.approvedAt.toDate(),\n//           });\n//         });\n//         withdrawSnap.forEach((doc) => {\n//           const data = doc.data();\n//           if (!withdrawMap[data.uid]) withdrawMap[data.uid] = [];\n//           withdrawMap[data.uid].push({\n//             amount: data.amount,\n//             approvedAt: data.approvedAt.toDate(),\n//           });\n//         });\n//         const userList = await Promise.all(\n//           wallets.map(async (wallet) => {\n//             const userDoc = await getDoc(doc(db, 'users', wallet.uid));\n//             return {\n//               uid: wallet.uid,\n//               email: userDoc.exists() ? userDoc.data().email : 'Unknown',\n//               balance: wallet.balance || 0,\n//               deposits: depositMap[wallet.uid] || [],\n//               withdrawals: withdrawMap[wallet.uid] || [],\n//             };\n//           })\n//         );\n//         setUsers(userList);\n//         setLoading(false);\n//       } else {\n//         setLoading(false);\n//       }\n//     });\n//     return () => unsubscribe();\n//   }, []);\n//   const filteredUsers = users.filter((u) => {\n//     // const matchEmail = u.email.toLowerCase().includes(search.toLowerCase());\n//     const matchEmail = u.email?.toLowerCase().includes(search.toLowerCase()) ?? false;\n//     const matchDate = dateFilter\n//       ? u.deposits.concat(u.withdrawals).some((entry) =>\n//           new Date(entry.approvedAt).toLocaleDateString() ===\n//           new Date(dateFilter).toLocaleDateString()\n//         )\n//       : true;\n//     return matchEmail && matchDate;\n//   });\n//   const exportCSV = () => {\n//     const headers = ['Email', 'Balance', 'Deposits', 'Withdrawals'];\n//     const rows = filteredUsers.map((u) => [\n//       u.email,\n//       u.balance,\n//       u.deposits.map((d) => `${d.amount} on ${d.approvedAt.toLocaleDateString()} ${d.approvedAt.toLocaleTimeString()}`).join('; '),\n//       u.withdrawals.map((w) => `${w.amount} on ${w.approvedAt.toLocaleDateString()} ${w.approvedAt.toLocaleTimeString()}`).join('; '),\n//     ]);\n//     const csvContent = [headers, ...rows].map((r) => r.join(',')).join('\\n');\n//     const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n//     const link = document.createElement('a');\n//     link.href = URL.createObjectURL(blob);\n//     link.download = 'wallet_report.csv';\n//     link.click();\n//   };\n//   return (\n//     <Layout>\n//       <div className=\"p-4 max-w-7xl mx-auto\">\n//       <h1 className=\"text-2xl font-semibold mb-4\">Wallet Overview</h1>\n//       <div className=\"flex flex-col sm:flex-row sm:items-center gap-4 mb-4\">\n//         <input\n//           type=\"text\"\n//           placeholder=\"Search by email\"\n//           className=\"p-2 border rounded w-full sm:w-1/3\"\n//           value={search}\n//           onChange={(e) => setSearch(e.target.value)}\n//         />\n//         <input\n//           type=\"date\"\n//           className=\"p-2 border rounded w-full sm:w-1/3\"\n//           value={dateFilter}\n//           onChange={(e) => setDateFilter(e.target.value)}\n//         />\n//         <button\n//           onClick={exportCSV}\n//           className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\n//         >\n//           Export CSV\n//         </button>\n//       </div>\n//       {loading ? (\n//         <p>Loading...</p>\n//       ) : filteredUsers.length === 0 ? (\n//         <p>No users found.</p>\n//       ) : (\n//         <div className=\"overflow-x-auto\">\n//           <table className=\"min-w-full text-sm border\">\n//             <thead className=\"bg-gray-100\">\n//               <tr>\n//                 <th className=\"p-2 border\">Email</th>\n//                 <th className=\"p-2 border\">Balance</th>\n//                 <th className=\"p-2 border\">Deposits</th>\n//                 <th className=\"p-2 border\">Withdrawals</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {filteredUsers.map((user, index) => (\n//                 <tr key={index} className=\"border hover:bg-gray-50\">\n//                   <td className=\"p-2 border whitespace-nowrap\">{user.email}</td>\n//                   <td className=\"p-2 border\">₹{user.balance}</td>\n//                   <td className=\"p-2 border\">\n//                     <div className={`max-h-24 overflow-y-auto ${user.deposits.length > 2 ? 'scrollbar-thin' : ''}`}>\n//                       {user.deposits.length > 0 ? (\n//                         user.deposits.map((d, i) => (\n//                           <div key={i}>₹{d.amount} on {d.approvedAt.toLocaleDateString()} {d.approvedAt.toLocaleTimeString()}</div>\n//                         ))\n//                       ) : (\n//                         <span className=\"text-gray-400\">No deposits</span>\n//                       )}\n//                     </div>\n//                   </td>\n//                   <td className=\"p-2 border\">\n//                     <div className={`max-h-24 overflow-y-auto ${user.withdrawals.length > 2 ? 'scrollbar-thin' : ''}`}>\n//                       {user.withdrawals.length > 0 ? (\n//                         user.withdrawals.map((w, i) => (\n//                           <div key={i}>₹{w.amount} on {w.approvedAt.toLocaleDateString()} {w.approvedAt.toLocaleTimeString()}</div>\n//                         ))\n//                       ) : (\n//                         <span className=\"text-gray-400\">No withdrawals</span>\n//                       )}\n//                     </div>\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         </div>\n//       )}\n//     </div>\n//     </Layout>\n//   );\n// }\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\n\n\n\n\nfunction Page() {\n    const db = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.getFirestore)(_firebase__WEBPACK_IMPORTED_MODULE_5__[\"default\"]);\n    const auth = (0,firebase_auth__WEBPACK_IMPORTED_MODULE_4__.getAuth)(_firebase__WEBPACK_IMPORTED_MODULE_5__[\"default\"]);\n    const [users, setUsers] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [role, setRole] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [search, setSearch] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    const [dateFilter, setDateFilter] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Page.useEffect\": ()=>{\n            const unsubscribe = (0,firebase_auth__WEBPACK_IMPORTED_MODULE_4__.onAuthStateChanged)(auth, {\n                \"Page.useEffect.unsubscribe\": async (user)=>{\n                    if (user) {\n                        const userDoc = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.getDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.doc)(db, 's_users', user.uid));\n                        const data = userDoc.exists() ? userDoc.data() : {};\n                        const userRole = data?.role || 'user';\n                        setRole(userRole);\n                        const walletQuery = userRole === 'admin' ? (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.collection)(db, 's_subwallets') : (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.collection)(db, 's_subwallets'), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.where)('subAdminId', '==', user.uid));\n                        const walletsSnap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.getDocs)(walletQuery);\n                        const wallets = walletsSnap.docs.map({\n                            \"Page.useEffect.unsubscribe.wallets\": (doc)=>({\n                                    uid: doc.id,\n                                    ...doc.data()\n                                })\n                        }[\"Page.useEffect.unsubscribe.wallets\"]);\n                        const depositSnap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.getDocs)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.collection)(db, 's_subdepositRequests'), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.where)('status', '==', 'approved'), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.orderBy)('approvedAt', 'desc')));\n                        const withdrawSnap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.getDocs)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.collection)(db, 's_subwithdrawRequests'), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.where)('status', '==', 'approved'), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.orderBy)('approvedAt', 'desc')));\n                        const depositMap = {};\n                        const withdrawMap = {};\n                        depositSnap.forEach({\n                            \"Page.useEffect.unsubscribe\": (doc)=>{\n                                const data = doc.data();\n                                if (!depositMap[data.uid]) depositMap[data.uid] = [];\n                                depositMap[data.uid].push({\n                                    amount: data.amount,\n                                    approvedAt: data.approvedAt.toDate()\n                                });\n                            }\n                        }[\"Page.useEffect.unsubscribe\"]);\n                        withdrawSnap.forEach({\n                            \"Page.useEffect.unsubscribe\": (doc)=>{\n                                const data = doc.data();\n                                if (!withdrawMap[data.uid]) withdrawMap[data.uid] = [];\n                                withdrawMap[data.uid].push({\n                                    amount: data.amount,\n                                    approvedAt: data.approvedAt.toDate()\n                                });\n                            }\n                        }[\"Page.useEffect.unsubscribe\"]);\n                        const userList = await Promise.all(wallets.map({\n                            \"Page.useEffect.unsubscribe\": async (wallet)=>{\n                                const userDoc = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.getDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.doc)(db, 's_users', wallet.uid));\n                                return {\n                                    uid: wallet.uid,\n                                    email: userDoc.exists() ? userDoc.data().email : 'Unknown',\n                                    balance: wallet.balance || 0,\n                                    deposits: depositMap[wallet.uid] || [],\n                                    withdrawals: withdrawMap[wallet.uid] || []\n                                };\n                            }\n                        }[\"Page.useEffect.unsubscribe\"]));\n                        setUsers(userList);\n                        setLoading(false);\n                    } else {\n                        setLoading(false);\n                    }\n                }\n            }[\"Page.useEffect.unsubscribe\"]);\n            return ({\n                \"Page.useEffect\": ()=>unsubscribe()\n            })[\"Page.useEffect\"];\n        }\n    }[\"Page.useEffect\"], []);\n    const filteredUsers = users.filter((u)=>u.email?.toLowerCase().includes(search.toLowerCase()) ?? false).map((user)=>{\n        const filteredDeposits = dateFilter ? user.deposits.filter((d)=>d.approvedAt.toLocaleDateString() === new Date(dateFilter).toLocaleDateString()) : user.deposits;\n        const filteredWithdrawals = dateFilter ? user.withdrawals.filter((w)=>w.approvedAt.toLocaleDateString() === new Date(dateFilter).toLocaleDateString()) : user.withdrawals;\n        return {\n            ...user,\n            deposits: filteredDeposits,\n            withdrawals: filteredWithdrawals\n        };\n    });\n    const exportCSV = ()=>{\n        const headers = [\n            'Email',\n            'Balance',\n            'Deposits',\n            'Withdrawals'\n        ];\n        const rows = filteredUsers.map((u)=>[\n                u.email,\n                u.balance,\n                u.deposits.map((d)=>`${d.amount} on ${d.approvedAt.toLocaleDateString()} ${d.approvedAt.toLocaleTimeString()}`).join('; '),\n                u.withdrawals.map((w)=>`${w.amount} on ${w.approvedAt.toLocaleDateString()} ${w.approvedAt.toLocaleTimeString()}`).join('; ')\n            ]);\n        const csvContent = [\n            headers,\n            ...rows\n        ].map((r)=>r.join(',')).join('\\n');\n        const blob = new Blob([\n            csvContent\n        ], {\n            type: 'text/csv;charset=utf-8;'\n        });\n        const link = document.createElement('a');\n        link.href = URL.createObjectURL(blob);\n        link.download = 'wallet_report.csv';\n        link.click();\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_app_Components_Layout__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"p-4 min-h-screen mx-auto bg-gray-900 text-white\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                    className: \"text-2xl font-semibold mb-4\",\n                    children: \"Wallet Overview\"\n                }, void 0, false, {\n                    fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                    lineNumber: 1780,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex flex-col sm:flex-row sm:items-center gap-4 mb-4\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                            type: \"text\",\n                            placeholder: \"Search by email\",\n                            className: \"p-2 border rounded w-full sm:w-1/3\",\n                            value: search,\n                            onChange: (e)=>setSearch(e.target.value)\n                        }, void 0, false, {\n                            fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                            lineNumber: 1783,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                            type: \"date\",\n                            className: \"p-2 border rounded w-full sm:w-1/3\",\n                            value: dateFilter,\n                            onChange: (e)=>setDateFilter(e.target.value)\n                        }, void 0, false, {\n                            fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                            lineNumber: 1791,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            onClick: exportCSV,\n                            className: \"bg-yellow-400 text-white px-4 py-2 rounded hover:bg-yellow-700\",\n                            children: \"Export CSV\"\n                        }, void 0, false, {\n                            fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                            lineNumber: 1798,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                    lineNumber: 1782,\n                    columnNumber: 9\n                }, this),\n                loading ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                    children: \"Loading...\"\n                }, void 0, false, {\n                    fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                    lineNumber: 1807,\n                    columnNumber: 11\n                }, this) : filteredUsers.length === 0 ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                    children: \"No users found.\"\n                }, void 0, false, {\n                    fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                    lineNumber: 1809,\n                    columnNumber: 11\n                }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"overflow-x-auto\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"table\", {\n                        className: \"min-w-full text-sm border\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"thead\", {\n                                className: \"bg-gray-900 text-white\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"tr\", {\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                            className: \"p-2 border\",\n                                            children: \"Email\"\n                                        }, void 0, false, {\n                                            fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                            lineNumber: 1815,\n                                            columnNumber: 19\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                            className: \"p-2 border\",\n                                            children: \"Balance\"\n                                        }, void 0, false, {\n                                            fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                            lineNumber: 1816,\n                                            columnNumber: 19\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                            className: \"p-2 border\",\n                                            children: \"Deposits\"\n                                        }, void 0, false, {\n                                            fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                            lineNumber: 1817,\n                                            columnNumber: 19\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                            className: \"p-2 border\",\n                                            children: \"Withdrawals\"\n                                        }, void 0, false, {\n                                            fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                            lineNumber: 1818,\n                                            columnNumber: 19\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                    lineNumber: 1814,\n                                    columnNumber: 17\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                lineNumber: 1813,\n                                columnNumber: 15\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"tbody\", {\n                                children: filteredUsers.map((user, index)=>{\n                                    const totalDeposit = user.deposits.reduce((sum, d)=>sum + d.amount, 0);\n                                    const totalWithdrawal = user.withdrawals.reduce((sum, w)=>sum + w.amount, 0);\n                                    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"tr\", {\n                                        className: \"border hover:bg-gray-800 align-top\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                className: \"p-2 border whitespace-nowrap\",\n                                                children: user.email\n                                            }, void 0, false, {\n                                                fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                                lineNumber: 1828,\n                                                columnNumber: 23\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                className: \"p-2 border font-semibold\",\n                                                children: [\n                                                    \"₹\",\n                                                    user.balance\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                                lineNumber: 1829,\n                                                columnNumber: 23\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                className: \"p-2 border\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"max-h-28 overflow-y-auto space-y-1\",\n                                                    children: user.deposits.length > 0 ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                                        children: [\n                                                            user.deposits.map((d, i)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                                    children: [\n                                                                        \"₹\",\n                                                                        d.amount,\n                                                                        \" on \",\n                                                                        d.approvedAt.toLocaleDateString(),\n                                                                        \" \",\n                                                                        d.approvedAt.toLocaleTimeString()\n                                                                    ]\n                                                                }, i, true, {\n                                                                    fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                                                    lineNumber: 1836,\n                                                                    columnNumber: 33\n                                                                }, this)),\n                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                                className: \"font-medium text-green-600 mt-1\",\n                                                                children: [\n                                                                    \"Total: ₹\",\n                                                                    totalDeposit\n                                                                ]\n                                                            }, void 0, true, {\n                                                                fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                                                lineNumber: 1840,\n                                                                columnNumber: 31\n                                                            }, this)\n                                                        ]\n                                                    }, void 0, true) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                        className: \"text-gray-400\",\n                                                        children: \"No deposits\"\n                                                    }, void 0, false, {\n                                                        fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                                        lineNumber: 1845,\n                                                        columnNumber: 29\n                                                    }, this)\n                                                }, void 0, false, {\n                                                    fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                                    lineNumber: 1832,\n                                                    columnNumber: 25\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                                lineNumber: 1831,\n                                                columnNumber: 23\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                className: \"p-2 border\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"max-h-28 overflow-y-auto space-y-1\",\n                                                    children: user.withdrawals.length > 0 ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                                        children: [\n                                                            user.withdrawals.map((w, i)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                                    children: [\n                                                                        \"₹\",\n                                                                        w.amount,\n                                                                        \" on \",\n                                                                        w.approvedAt.toLocaleDateString(),\n                                                                        \" \",\n                                                                        w.approvedAt.toLocaleTimeString()\n                                                                    ]\n                                                                }, i, true, {\n                                                                    fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                                                    lineNumber: 1855,\n                                                                    columnNumber: 33\n                                                                }, this)),\n                                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                                className: \"font-medium text-red-600 mt-1\",\n                                                                children: [\n                                                                    \"Total: ₹\",\n                                                                    totalWithdrawal\n                                                                ]\n                                                            }, void 0, true, {\n                                                                fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                                                lineNumber: 1859,\n                                                                columnNumber: 31\n                                                            }, this)\n                                                        ]\n                                                    }, void 0, true) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                        className: \"text-gray-400\",\n                                                        children: \"No withdrawals\"\n                                                    }, void 0, false, {\n                                                        fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                                        lineNumber: 1864,\n                                                        columnNumber: 29\n                                                    }, this)\n                                                }, void 0, false, {\n                                                    fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                                    lineNumber: 1851,\n                                                    columnNumber: 25\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                                lineNumber: 1850,\n                                                columnNumber: 23\n                                            }, this)\n                                        ]\n                                    }, index, true, {\n                                        fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                        lineNumber: 1827,\n                                        columnNumber: 21\n                                    }, this);\n                                })\n                            }, void 0, false, {\n                                fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                                lineNumber: 1821,\n                                columnNumber: 15\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                        lineNumber: 1812,\n                        columnNumber: 13\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n                    lineNumber: 1811,\n                    columnNumber: 11\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n            lineNumber: 1779,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"E:\\\\megaend-new\\\\src\\\\app\\\\app\\\\user-details\\\\page.js\",\n        lineNumber: 1778,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/app/app/user-details/page.js\n");

/***/ }),

/***/ "(ssr)/./src/firebase.js":
/*!*************************!*\
  !*** ./src/firebase.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var firebase_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase/app */ \"(ssr)/./node_modules/firebase/app/dist/index.mjs\");\n// Firebase configuration and initialization\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAGnSKCOksJHRJo1hXgEJxAJE2XTtpLV3Y\",\n    authDomain: \"megaend-new.firebaseapp.com\",\n    projectId: \"megaend-new\",\n    storageBucket: \"megaend-new.firebasestorage.app\",\n    messagingSenderId: \"451704328595\",\n    appId: \"1:451704328595:web:2ecc5a4700d5e18daf1866\"\n};\n// Initialize Firebase (singleton pattern for Next.js hot reload)\nconst app = !(0,firebase_app__WEBPACK_IMPORTED_MODULE_0__.getApps)().length ? (0,firebase_app__WEBPACK_IMPORTED_MODULE_0__.initializeApp)(firebaseConfig) : (0,firebase_app__WEBPACK_IMPORTED_MODULE_0__.getApp)();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (app);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvZmlyZWJhc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSw0Q0FBNEM7QUFDa0I7QUFFOUQsTUFBTUcsaUJBQWlCO0lBQ3JCQyxRQUFRQyx5Q0FBd0M7SUFDaERHLFlBQVlILDZCQUE0QztJQUN4REssV0FBV0wsYUFBMkM7SUFDdERPLGVBQWVQLGlDQUErQztJQUM5RFMsbUJBQW1CVCxjQUFvRDtJQUN2RVcsT0FBT1gsMkNBQXVDO0FBQ2hEO0FBRUEsaUVBQWlFO0FBQ2pFLE1BQU1hLE1BQU0sQ0FBQ2pCLHFEQUFPQSxHQUFHa0IsTUFBTSxHQUFHbkIsMkRBQWFBLENBQUNHLGtCQUFrQkQsb0RBQU1BO0FBRXRFLGlFQUFlZ0IsR0FBR0EsRUFBQyIsInNvdXJjZXMiOlsiRTpcXG1lZ2FlbmQtbmV3XFxzcmNcXGZpcmViYXNlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpcmViYXNlIGNvbmZpZ3VyYXRpb24gYW5kIGluaXRpYWxpemF0aW9uXHJcbmltcG9ydCB7IGluaXRpYWxpemVBcHAsIGdldEFwcHMsIGdldEFwcCB9IGZyb20gJ2ZpcmViYXNlL2FwcCc7XHJcblxyXG5jb25zdCBmaXJlYmFzZUNvbmZpZyA9IHtcclxuICBhcGlLZXk6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0ZJUkVCQVNFX0FQSV9LRVksXHJcbiAgYXV0aERvbWFpbjogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfRklSRUJBU0VfQVVUSF9ET01BSU4sXHJcbiAgcHJvamVjdElkOiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19GSVJFQkFTRV9QUk9KRUNUX0lELFxyXG4gIHN0b3JhZ2VCdWNrZXQ6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0ZJUkVCQVNFX1NUT1JBR0VfQlVDS0VULFxyXG4gIG1lc3NhZ2luZ1NlbmRlcklkOiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19GSVJFQkFTRV9NRVNTQUdJTkdfU0VOREVSX0lELFxyXG4gIGFwcElkOiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19GSVJFQkFTRV9BUFBfSUQsXHJcbn07XHJcblxyXG4vLyBJbml0aWFsaXplIEZpcmViYXNlIChzaW5nbGV0b24gcGF0dGVybiBmb3IgTmV4dC5qcyBob3QgcmVsb2FkKVxyXG5jb25zdCBhcHAgPSAhZ2V0QXBwcygpLmxlbmd0aCA/IGluaXRpYWxpemVBcHAoZmlyZWJhc2VDb25maWcpIDogZ2V0QXBwKCk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBhcHA7ICJdLCJuYW1lcyI6WyJpbml0aWFsaXplQXBwIiwiZ2V0QXBwcyIsImdldEFwcCIsImZpcmViYXNlQ29uZmlnIiwiYXBpS2V5IiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX0ZJUkVCQVNFX0FQSV9LRVkiLCJhdXRoRG9tYWluIiwiTkVYVF9QVUJMSUNfRklSRUJBU0VfQVVUSF9ET01BSU4iLCJwcm9qZWN0SWQiLCJORVhUX1BVQkxJQ19GSVJFQkFTRV9QUk9KRUNUX0lEIiwic3RvcmFnZUJ1Y2tldCIsIk5FWFRfUFVCTElDX0ZJUkVCQVNFX1NUT1JBR0VfQlVDS0VUIiwibWVzc2FnaW5nU2VuZGVySWQiLCJORVhUX1BVQkxJQ19GSVJFQkFTRV9NRVNTQUdJTkdfU0VOREVSX0lEIiwiYXBwSWQiLCJORVhUX1BVQkxJQ19GSVJFQkFTRV9BUFBfSUQiLCJhcHAiLCJsZW5ndGgiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./src/firebase.js\n");

/***/ }),

/***/ "../app-render/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/server/app-render/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/action-async-storage.external.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/dynamic-access-async-storage.external":
/*!***************************************************************************************!*\
  !*** external "next/dist/server/app-render/dynamic-access-async-storage.external.js" ***!
  \***************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/dynamic-access-async-storage.external.js");

/***/ }),

/***/ "./work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "dns":
/*!**********************!*\
  !*** external "dns" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("dns");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "http2":
/*!************************!*\
  !*** external "http2" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("http2");

/***/ }),

/***/ "module":
/*!*************************!*\
  !*** external "module" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("module");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/is-bot":
/*!***********************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/is-bot" ***!
  \***********************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/is-bot");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "process":
/*!**************************!*\
  !*** external "process" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("process");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@swc","vendor-chunks/@opentelemetry","vendor-chunks/@firebase","vendor-chunks/@grpc","vendor-chunks/protobufjs","vendor-chunks/long","vendor-chunks/@protobufjs","vendor-chunks/lodash.camelcase","vendor-chunks/idb","vendor-chunks/firebase","vendor-chunks/lucide-react"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapp%2Fuser-details%2Fpage&page=%2Fapp%2Fuser-details%2Fpage&appPaths=%2Fapp%2Fuser-details%2Fpage&pagePath=private-next-app-dir%2Fapp%2Fuser-details%2Fpage.js&appDir=E%3A%5Cmegaend-new%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=E%3A%5Cmegaend-new&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();